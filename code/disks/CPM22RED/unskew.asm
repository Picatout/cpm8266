	TITLE	'SECTOR UNSKEW PROGRAM FOR CP/M 1.4 1/78'
;
;	COPYRIGHT (C) 1978
;	DIGITAL RESEARCH
;	BOX 579 PACIFIC GROVE
;	CALIFORNIA, 93950
;
	ORG	100H
;	READ DISK A, USING SKEW FACTOR, AND TRANSLATE TO B
;
BOOT	EQU	0000H	;GET BIOS LOCATION FROM HERE
BDOS	EQU	0005H	;PRIMARY ENTRY POINT
RCHAR	EQU	1	;READ CHARACTER FUNCTION
WCHAR	EQU	2	;WRITE CHARACTER FUNCTION
PBUFF	EQU	9	;PRINT BUFFER FUNCTION
DDT	EQU	38H	;RUNNING UNDER DDT
;
DATATRK	EQU	2	;START OF DATA ON DISKETTE
SECSIZ	EQU	128	;SIZE OF EACH SECTOR
;
;
	LXI	SP,STACK
	JMP	START
	DB	' COPYRIGHT (C) 1978, DIGITAL RESEARCH '
;
;	GENERATE THE BIOS ACCESS ALGORITHMS
FUNC	SET	8	;START WITH FUNCTION 8
	IRP	?FUNC,<DSK,TRK,SEC,DMA,READ,WRITE>
SEL&?FUNC:
	LXI	D,FUNC*3
	JMP	GOBIOS
FUNC	SET	FUNC+1
	ENDM
;
GOBIOS:	;DE CONTAIN THE FUNCTION NUMBER
	LHLD	BOOT+1	;ADDRESS OF WBOOT ENTRY
	DAD	D	;*3 FOR EACH JUMP
	PCHL
;
;
;	TRANSLATE VECTOR
TRAN:
	DB	01H,07H,0DH,13H, 19H,05H,0BH,11H, 17H,03H,09H,0FH
	DB	15H,02H,08H,0EH, 14H,1AH,06H,0CH, 12H,18H,04H,0AH
	DB	10H,16H
;
;	FIXED MESSAGES
CR	EQU	0DH
LF	EQU	0AH
;
RDYA:	DB	CR,LF,'READY SOURCE DISK ON A $'
RDYB:	DB	CR,LF,'READY BLANK  DISK ON B $'
ERRA:	DB	CR,LF,'ERROR ON A $'
ERRB:	DB	CR,LF,'ERROR ON B $'
ENDMSG:	DB	CR,LF,'COPY COMPLETE - TYPE RETURN $'
;
CONOUT:
	MOV	E,A	;CHAR TO PRINT
	MVI	C,WCHAR
	JMP	BDOS
;
CONIN:	MVI	C,RCHAR
	JMP	BDOS
;
PRMSG:	;PRINT MESSAGE GIVEN BY HL
	XCHG
	MVI	C,PBUFF
	CALL	BDOS
	CALL	CONIN	;WAIT FOR RESPONSE
	MVI	A,CR
	CALL	CONOUT
	MVI	A,LF
	JMP	CONOUT
;
START:
	LXI	H,RDYA
	CALL	PRMSG
	LXI	H,RDYB
	CALL	PRMSG
;
;	READY TO TRANSFER DATA
	XRA	A
	STA	TRACK	;START AT ZERO
;
NXTTRK:	MVI	C,0	;SELECT ZERO DISK
	CALL	SELDSK
	LXI	H,TRACK
	MOV	C,M
	CALL	SELTRK	;SDISK ZERO TRACK SELECTED
	XRA	A
	STA	SECTOR	;START AT LOGICAL ZERO SECTOR
	LXI	H,BUFF	;DMA TO BUFF
NXTSEC:	MOV	C,L
	MOV	B,H	;DMA ADDRESS
	PUSH	H	;INCREMENT AT END
	CALL	SELDMA	;FROM BC
	LDA	TRACK
	CPI	DATATRK	;INTO DATA AREA?
	LXI	H,SECTOR
	JNC	SKEWIT
;	DON'T READ WITH SKEW
	MOV	C,M	;SECTOR NUMBER
	INR	C	;PLUS ONE
	MOV	M,C
	JMP	GETSEC	;GET THE SECTOR
;
SKEWIT:	;READ WITH SKEW FACTOR
	MOV	E,M
	MVI	D,0	;DOUBLE PRECISION SECTOR #
	INR	M	;INCREMENTED TO NEXT SECTOR
	LXI	H,TRAN
	DAD	D	;TRAN(SECTOR)
	MOV	C,M	;TO C FOR SELSEC
GETSEC:	CALL	SELSEC
	CALL	SELREAD	;READ TO DMA ADDRESS
	ORA	A	;ERROR CODE?
	LXI	H,ERRA
	CNZ	PRMSG	;PRINT MESSAGE IF SO
	POP	H	;RECALL DMA ADDRESS
	LXI	D,SECSIZ
	DAD	D	;NEXT DMA ADDRESS
	LDA	SECTOR
	CPI	26	;0...25 OK
	JC	NXTSEC	;GET NEXT SECTOR
;
;	NOW READY TO WRITE THE DATA TO DRIVE 1
	MVI	C,1
	CALL	SELDSK	;DISK DRIVE SELECTED
	LXI	H,TRACK
	MOV	C,M
	CALL	SELTRK	;TRACK SELECTED
	XRA	A
	STA	SECTOR	;SECTOR SET
	LXI	H,BUFF	;BUFFER SET FOR DMA
;
OUTSEC:	MOV	C,L
	MOV	B,H
	PUSH	H
	CALL	SELDMA
	LXI	H,SECTOR
	MOV	C,M
	INR	C
	MOV	M,C
;	SECTOR UPDATED IN MEMORY, SELECTING PHYSICAL SECTOR
	CALL	SELSEC
	CALL	SELWRITE	;WRITE TO DRIVE 1
	ORA	A	;ERROR RETURN?
	LXI	H,ERRB
	CNZ	PRMSG	;PRINT IF SO
	POP	H	;DMA ADDRESS
	LXI	D,SECSIZ
	DAD	D	;UPDATED IN HL
	LDA	SECTOR
	CPI	26
	JC	OUTSEC	;0...25
;
;	TRACK IS WRITTEN TO B, GO TO NEXT TRACK
	LXI	H,TRACK
	INR	M	;INCREMENT TRACK NUMBER
	MOV	A,M
	CPI	77	;0...76
	JC	NXTTRK	;FOR ANOTHER TRACK
;
	LXI	H,ENDMSG
	CALL	PRMSG
	JMP	START
;
;
;	DATA AREAS
TRACK:	DS	1	;TRACK NUMBER
SECTOR:	DS	1	;SECTOR NUMBER
	DS	32	;16 LEVEL STACK
STACK:
BUFF:	DS	SECSIZ*26	;MEMORY BUFFER HOLDS TRACK
	END
