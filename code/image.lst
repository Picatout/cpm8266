
image.elf:     file format elf32-xtensa-le


Disassembly of section .text:

40100000 <_stext>:
	...
40100030:	fea960        	excw
40100033:	3f          	.byte 0x3f
40100034:	989680        	excw
40100037:	a9d400        	excw
4010003a:	fe          	.byte 0xfe
4010003b:	3f          	.byte 0x3f
4010003c:	feaa14        	excw
4010003f:	3f          	.byte 0x3f
40100040:	fea994        	excw
40100043:	3f          	.byte 0x3f
40100044:	ff          	.byte 0xff
40100045:	ff          	.byte 0xff
40100046:	000000        	ill
40100049:	3ff000        	excw
4010004c:	aa58      	l32i.n	a5, a10, 40
4010004e:	ff          	.byte 0xff
4010004f:	3f          	.byte 0x3f
40100050:	0818      	l32i.n	a1, a8, 0
40100052:	386000        	excw
40100055:	0008      	l32i.n	a0, a0, 0
40100057:	030060        	excw
4010005a:	a06000        	addx4	a6, a0, a0
4010005d:	2e          	.byte 0x2e
4010005e:	600063        	excw
40100061:	fea9      	s32i.n	a10, a14, 60
40100063:	3f          	.byte 0x3f
40100064:	875c      	movi.n	a7, 88
40100066:	fe          	.byte 0xfe
40100067:	3f          	.byte 0x3f
40100068:	002200        	excw
4010006b:	a96500        	excw
4010006e:	fe          	.byte 0xfe
4010006f:	3f          	.byte 0x3f
40100070:	fea964        	excw
40100073:	3f          	.byte 0x3f
40100074:	fea967        	bge	a9, a6, 40100076 <_stext+0x76>
40100077:	3f          	.byte 0x3f
40100078:	fea966        	bnei	a9, 12, 4010007a <_stext+0x7a>
4010007b:	3f          	.byte 0x3f
4010007c:	a969      	s32i.n	a6, a9, 40
4010007e:	fe          	.byte 0xfe
4010007f:	3f          	.byte 0x3f
40100080:	a968      	l32i.n	a6, a9, 40
40100082:	fe          	.byte 0xfe
40100083:	3f          	.byte 0x3f
40100084:	a96b      	addi.n	a10, a9, 6
40100086:	fe          	.byte 0xfe
40100087:	3f          	.byte 0x3f
40100088:	fea970        	excw
4010008b:	3f          	.byte 0x3f
4010008c:	a96a      	add.n	a10, a9, a6
4010008e:	fe          	.byte 0xfe
4010008f:	3f          	.byte 0x3f
40100090:	a96d      	excw
40100092:	fe          	.byte 0xfe
40100093:	3f          	.byte 0x3f
40100094:	a96c      	movi.n	a9, -22
40100096:	fe          	.byte 0xfe
40100097:	3f          	.byte 0x3f
40100098:	6f          	.byte 0x6f
40100099:	fea9      	s32i.n	a10, a14, 60
4010009b:	3f          	.byte 0x3f
4010009c:	6e          	.byte 0x6e
4010009d:	fea9      	s32i.n	a10, a14, 60
4010009f:	3f          	.byte 0x3f
401000a0:	0100f4        	excw
401000a3:	865c00        	excw
401000a6:	fe          	.byte 0xfe
401000a7:	3f          	.byte 0x3f
401000a8:	fe8000        	excw
401000ab:	3f          	.byte 0x3f
401000ac:	855c      	movi.n	a5, 88
401000ae:	fe          	.byte 0xfe
401000af:	3f          	.byte 0x3f
401000b0:	854c      	movi.n	a5, 72
401000b2:	fe          	.byte 0xfe
401000b3:	3f          	.byte 0x3f
401000b4:	844c      	movi.n	a4, 72
401000b6:	fe          	.byte 0xfe
401000b7:	3f          	.byte 0x3f
401000b8:	018000        	slli	a8, a0, 32
401000bb:	842c00        	extui	a2, a0, 12, 9
401000be:	fe          	.byte 0xfe
401000bf:	3f          	.byte 0x3f
401000c0:	840c      	movi.n	a4, 8
401000c2:	fe          	.byte 0xfe
401000c3:	3f          	.byte 0x3f
401000c4:	83ec      	bnez.n	a3, 401000f0 <_stext+0xf0>
401000c6:	fe          	.byte 0xfe
401000c7:	3f          	.byte 0x3f
401000c8:	82ec      	bnez.n	a2, 401000f4 <_stext+0xf4>
401000ca:	fe          	.byte 0xfe
401000cb:	3f          	.byte 0x3f
401000cc:	81ec      	bnez.n	a1, 401000f8 <main>
401000ce:	fe          	.byte 0xfe
401000cf:	3f          	.byte 0x3f
401000d0:	c65d40        	excw
401000d3:	aa5400        	excw
401000d6:	ff          	.byte 0xff
401000d7:	3f          	.byte 0x3f
401000d8:	feab54        	excw
401000db:	3f          	.byte 0x3f
401000dc:	72d8      	l32i.n	a13, a2, 28
401000de:	044000        	extui	a4, a0, 0, 1
401000e1:	2f          	.byte 0x2f
401000e2:	d84000        	excw
401000e5:	0039      	s32i.n	a3, a0, 0
401000e7:	467840        	excw
401000ea:	484000        	excw
401000ed:	df          	.byte 0xdf
401000ee:	5c4000        	excw
401000f1:	fea9      	s32i.n	a10, a14, 60
401000f3:	3f          	.byte 0x3f
401000f4:	002544        	excw
401000f7:	c11240        	mul16u	a1, a2, a4

401000f8 <main>:
#define call_delay_us( time ) { asm volatile( "mov.n a2, %0\n_call0 delay4clk" : : "r"(time*13) : "a2" ); }

static MACHINE machine;
extern void SystemCall (MACHINE *m);

int main() {
401000f8:	b0c112        	addi	a1, a1, -80
	//Switch to 80 first.

	//This is actually 0x88.  You can set this to 0xC8 to double-overclock the low-end bus.
	//This can get you to a 160 MHz peripheral bus if setting it normally to 80 MHz.
#if PERIPH_FREQ == 160
	pico_i2c_writereg(103,4,1,0xc8);
401000fb:	67a022        	movi	a2, 103
401000fe:	430c      	movi.n	a3, 4
40100100:	140c      	movi.n	a4, 1
40100102:	c8a052        	movi	a5, 200
40100105:	136102        	s32i	a0, a1, 76
40100108:	1261c2        	s32i	a12, a1, 72
4010010b:	1161d2        	s32i	a13, a1, 68
4010010e:	1061e2        	s32i	a14, a1, 64
40100111:	f1f9      	s32i.n	a15, a1, 60
40100113:	fff201        	l32r	a0, 401000dc <_stext+0xdc>
40100116:	0000c0        	callx0	a0
	pico_i2c_writereg(103,4,2,0xa1);
#elif PERIPH_FREQ == 189
	pico_i2c_writereg(103,4,2,0x81);
#else
	// set 80MHz/160MHz PLL CPU
	pico_i2c_writereg(103,4,2,0x91);
40100119:	67a022        	movi	a2, 103
4010011c:	430c      	movi.n	a3, 4
4010011e:	240c      	movi.n	a4, 2
40100120:	91a052        	movi	a5, 145
40100123:	ffee01        	l32r	a0, 401000dc <_stext+0xdc>
40100126:	0000c0        	callx0	a0
	//HWREG(DPORT_BASEADDR,0x14) &= 0x7E; //Regular clock bit.
 	t_ets_update_cpu_frequency(80);
#elif MAIN_MHZ == 231 || MAIN_MHZ == 346 || MAIN_MHZ==378 || MAIN_MHZ == 320 //Won't boot at 378 MHz.
	//rom_rfpll_reset();	//Reset PLL.
	set_pll();			//Set PLL
	DPORT_BASEADDR[0x14/4] |= 0x01; //Overclock bit.
40100129:	ffc721        	l32r	a2, 40100048 <_stext+0x48>
4010012c:	130c      	movi.n	a3, 1
4010012e:	052242        	l32i	a4, a2, 20
40100131:	203430        	or	a3, a4, a3
40100134:	056232        	s32i	a3, a2, 20
	t_ets_update_cpu_frequency(160);
40100137:	a0a022        	movi	a2, 160
4010013a:	ffe901        	l32r	a0, 401000e0 <_stext+0xe0>
4010013d:	0000c0        	callx0	a0
void nosdk8266_init()
{
	uint32_t *addr;
	nosdk8266_clock();

    for (addr = &_bss_start; addr < &_bss_end; addr++)
40100140:	ffbc21        	l32r	a2, 40100030 <_stext+0x30>
40100143:	ffc231        	l32r	a3, 4010004c <_stext+0x4c>
        *addr = 0;
40100146:	040c      	movi.n	a4, 0
40100148:	000106        	j	40100150 <main+0x58>
4010014b:	024900        	excw
void nosdk8266_init()
{
	uint32_t *addr;
	nosdk8266_clock();

    for (addr = &_bss_start; addr < &_bss_end; addr++)
4010014e:	224b      	addi.n	a2, a2, 4
40100150:	f83237        	bltu	a2, a3, 4010014c <main+0x54>
        *addr = 0;

	PIN_PULLUP_DIS(PERIPHS_IO_MUX_U0TXD_U);
40100153:	ffbf21        	l32r	a2, 40100050 <_stext+0x50>
40100156:	7faf32        	movi	a3, -129
40100159:	0248      	l32i.n	a4, a2, 0
	PIN_FUNC_SELECT(PERIPHS_IO_MUX_U0TXD_U, FUNC_U0TXD);
4010015b:	cfaec2        	movi	a12, 0xfffffecf
	nosdk8266_clock();

    for (addr = &_bss_start; addr < &_bss_end; addr++)
        *addr = 0;

	PIN_PULLUP_DIS(PERIPHS_IO_MUX_U0TXD_U);
4010015e:	103430        	and	a3, a4, a3
40100161:	0239      	s32i.n	a3, a2, 0
	PIN_FUNC_SELECT(PERIPHS_IO_MUX_U0TXD_U, FUNC_U0TXD);
40100163:	0238      	l32i.n	a3, a2, 0
40100165:	1033c0        	and	a3, a3, a12
40100168:	0239      	s32i.n	a3, a2, 0
	uart_div_modify(UART0, (PERIPH_FREQ*1000000)/115200);
4010016a:	020c      	movi.n	a2, 0
4010016c:	6ca532        	movi	a3, 0x56c
4010016f:	ffdd01        	l32r	a0, 401000e4 <_stext+0xe4>
40100172:	0000c0        	callx0	a0

	Cache_Read_Enable(0, 0, 1);
40100175:	020c      	movi.n	a2, 0
40100177:	023d      	mov.n	a3, a2
40100179:	140c      	movi.n	a4, 1
4010017b:	ffdb01        	l32r	a0, 401000e8 <_stext+0xe8>
4010017e:	0000c0        	callx0	a0
	int cnt=0;
	nosdk8266_init();

	PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO2_U,FUNC_GPIO2);
40100181:	ffb421        	l32r	a2, 40100054 <_stext+0x54>

static MACHINE machine;
extern void SystemCall (MACHINE *m);

int main() {
	int cnt=0;
40100184:	070c      	movi.n	a7, 0
	nosdk8266_init();

	PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO2_U,FUNC_GPIO2);
40100186:	0238      	l32i.n	a3, a2, 0
		PIN_OUT_SET = _BV(2); //Turn GPIO2 light off.
		call_delay_us( 500000 );
		PIN_OUT_CLEAR = _BV(2); //Turn GPIO2 light on.
		call_delay_us( 500000 );

	memcpy(machine.memory+0x100, z80code, sizeof(z80code));
40100188:	ffb651        	l32r	a5, 40100060 <_stext+0x60>

int main() {
	int cnt=0;
	nosdk8266_init();

	PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO2_U,FUNC_GPIO2);
4010018b:	10c3c0        	and	a12, a3, a12
4010018e:	02c9      	s32i.n	a12, a2, 0
	PIN_DIR_OUTPUT = _BV(2); //Enable GPIO2 light off.
40100190:	ffb221        	l32r	a2, 40100058 <_stext+0x58>
40100193:	430c      	movi.n	a3, 4
40100195:	4239      	s32i.n	a3, a2, 16

static MACHINE machine;
extern void SystemCall (MACHINE *m);

int main() {
	int cnt=0;
40100197:	4179      	s32i.n	a7, a1, 16

	PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO2_U,FUNC_GPIO2);
	PIN_DIR_OUTPUT = _BV(2); //Enable GPIO2 light off.

	while(1) {
		PIN_OUT_SET = _BV(2); //Turn GPIO2 light off.
40100199:	ffaf41        	l32r	a4, 40100058 <_stext+0x58>
4010019c:	460c      	movi.n	a6, 4
4010019e:	1469      	s32i.n	a6, a4, 4
		call_delay_us( 500000 );
401001a0:	ffaf31        	l32r	a3, 4010005c <_stext+0x5c>
401001a3:	202330        	or	a2, a3, a3
401001a6:	0210c5        	call0	401022b4 <delay4clk>
		PIN_OUT_CLEAR = _BV(2); //Turn GPIO2 light on.
401001a9:	2469      	s32i.n	a6, a4, 8
		call_delay_us( 500000 );
401001ab:	032d      	mov.n	a2, a3
401001ad:	021045        	call0	401022b4 <delay4clk>

	memcpy(machine.memory+0x100, z80code, sizeof(z80code));
401001b0:	ffad31        	l32r	a3, 40100064 <_stext+0x64>
401001b3:	ffad41        	l32r	a4, 40100068 <_stext+0x68>
401001b6:	ffc821        	l32r	a2, 401000d8 <_stext+0xd8>
401001b9:	a159      	s32i.n	a5, a1, 40
401001bb:	ffcc01        	l32r	a0, 401000ec <_stext+0xec>
401001be:	0000c0        	callx0	a0

	machine.memory[0] = 0xd3;       /* OUT N, A */
401001c1:	a158      	l32i.n	a5, a1, 40
	machine.memory[1] = 0x00;

	machine.memory[5] = 0xdb;       /* IN A, N */
401001c3:	dbaf32        	movi	a3, -37
401001c6:	f94532        	s8i	a3, a5, 249
void ICACHE_FLASH_ATTR Z80Reset (Z80_STATE *state)
{
        int     i;
        
        state->status = 0;
        AF = 0xffff;
401001c9:	f37c      	movi.n	a3, -1
401001cb:	055532        	s16i	a3, a5, 10
        SP = 0xffff;
401001ce:	085532        	s16i	a3, a5, 16
         * replaced by IY.
         */

        /* 8-bit "R" registers. */

        state->register_table[0] = &state->registers.byte[Z80_B];
401001d1:	ffa631        	l32r	a3, 4010006c <_stext+0x6c>
        /* Encoding 0x06 is used for indexed memory operands and direct HL or
         * IX/IY register access.
         */

        state->register_table[6] = &state->registers.word[Z80_HL];
        state->register_table[7] = &state->registers.byte[Z80_A];
401001d4:	ffac71        	l32r	a7, 40100084 <_stext+0x84>
         * replaced by IY.
         */

        /* 8-bit "R" registers. */

        state->register_table[0] = &state->registers.byte[Z80_B];
401001d7:	d539      	s32i.n	a3, a5, 52
        state->register_table[1] = &state->registers.byte[Z80_C];
        state->register_table[2] = &state->registers.byte[Z80_D];
401001d9:	ffa631        	l32r	a3, 40100074 <_stext+0x74>
		PIN_OUT_CLEAR = _BV(2); //Turn GPIO2 light on.
		call_delay_us( 500000 );

	memcpy(machine.memory+0x100, z80code, sizeof(z80code));

	machine.memory[0] = 0xd3;       /* OUT N, A */
401001dc:	d3af22        	movi	a2, -45
401001df:	f539      	s32i.n	a3, a5, 60
        state->register_table[3] = &state->registers.byte[Z80_E];
        state->register_table[4] = &state->registers.byte[Z80_H];
401001e1:	ffa631        	l32r	a3, 4010007c <_stext+0x7c>
401001e4:	f44522        	s8i	a2, a5, 244
	machine.memory[1] = 0x00;
401001e7:	020c      	movi.n	a2, 0
        /* 8-bit "R" registers. */

        state->register_table[0] = &state->registers.byte[Z80_B];
        state->register_table[1] = &state->registers.byte[Z80_C];
        state->register_table[2] = &state->registers.byte[Z80_D];
        state->register_table[3] = &state->registers.byte[Z80_E];
401001e9:	ffa341        	l32r	a4, 40100078 <_stext+0x78>
         */

        /* 8-bit "R" registers. */

        state->register_table[0] = &state->registers.byte[Z80_B];
        state->register_table[1] = &state->registers.byte[Z80_C];
401001ec:	ffa161        	l32r	a6, 40100070 <_stext+0x70>
401001ef:	f54522        	s8i	a2, a5, 245

	machine.memory[5] = 0xdb;       /* IN A, N */
	machine.memory[6] = 0x00;
401001f2:	fa4522        	s8i	a2, a5, 250
        state->register_table[2] = &state->registers.byte[Z80_D];
        state->register_table[3] = &state->registers.byte[Z80_E];
        state->register_table[4] = &state->registers.byte[Z80_H];
401001f5:	116532        	s32i	a3, a5, 68
	machine.memory[7] = 0xc9;       /* RET */
401001f8:	c9af22        	movi	a2, -55
        state->register_table[5] = &state->registers.byte[Z80_L];
401001fb:	ffa131        	l32r	a3, 40100080 <_stext+0x80>
        /* Encoding 0x06 is used for indexed memory operands and direct HL or
         * IX/IY register access.
         */

        state->register_table[6] = &state->registers.word[Z80_HL];
        state->register_table[7] = &state->registers.byte[Z80_A];
401001fe:	146572        	s32i	a7, a5, 80
        /* "Regular" 16-bit "RR" registers. */

        state->register_table[8] = &state->registers.word[Z80_BC];
        state->register_table[9] = &state->registers.word[Z80_DE];
        state->register_table[10] = &state->registers.word[Z80_HL];
        state->register_table[11] = &state->registers.word[Z80_SP];
40100201:	ffa171        	l32r	a7, 40100088 <_stext+0x88>
40100204:	fb4522        	s8i	a2, a5, 251

void ICACHE_FLASH_ATTR Z80Reset (Z80_STATE *state)
{
        int     i;
        
        state->status = 0;
40100207:	020c      	movi.n	a2, 0
        state->register_table[0] = &state->registers.byte[Z80_B];
        state->register_table[1] = &state->registers.byte[Z80_C];
        state->register_table[2] = &state->registers.byte[Z80_D];
        state->register_table[3] = &state->registers.byte[Z80_E];
        state->register_table[4] = &state->registers.byte[Z80_H];
        state->register_table[5] = &state->registers.byte[Z80_L];
40100209:	126532        	s32i	a3, a5, 72

        /* Encoding 0x06 is used for indexed memory operands and direct HL or
         * IX/IY register access.
         */

        state->register_table[6] = &state->registers.word[Z80_HL];
4010020c:	136532        	s32i	a3, a5, 76
               
        /* "Regular" 16-bit "RR" registers. */

        state->register_table[8] = &state->registers.word[Z80_BC];
        state->register_table[9] = &state->registers.word[Z80_DE];
        state->register_table[10] = &state->registers.word[Z80_HL];
4010020f:	176532        	s32i	a3, a5, 92

void ICACHE_FLASH_ATTR Z80Reset (Z80_STATE *state)
{
        int     i;
        
        state->status = 0;
40100212:	0529      	s32i.n	a2, a5, 0
        AF = 0xffff;
        SP = 0xffff;
        state->i = state->pc = state->iff1 = state->iff2 = 0;
40100214:	b529      	s32i.n	a2, a5, 44
40100216:	a529      	s32i.n	a2, a5, 40
40100218:	7529      	s32i.n	a2, a5, 28
        state->im = Z80_INTERRUPT_MODE_0;
4010021a:	c529      	s32i.n	a2, a5, 48
         */

        /* 8-bit "R" registers. */

        state->register_table[0] = &state->registers.byte[Z80_B];
        state->register_table[1] = &state->registers.byte[Z80_C];
4010021c:	e569      	s32i.n	a6, a5, 56
        state->register_table[2] = &state->registers.byte[Z80_D];
        state->register_table[3] = &state->registers.byte[Z80_E];
4010021e:	106542        	s32i	a4, a5, 64
        state->register_table[6] = &state->registers.word[Z80_HL];
        state->register_table[7] = &state->registers.byte[Z80_A];
               
        /* "Regular" 16-bit "RR" registers. */

        state->register_table[8] = &state->registers.word[Z80_BC];
40100221:	156562        	s32i	a6, a5, 84
        state->register_table[9] = &state->registers.word[Z80_DE];
40100224:	166542        	s32i	a4, a5, 88
        state->register_table[10] = &state->registers.word[Z80_HL];
        state->register_table[11] = &state->registers.word[Z80_SP];
40100227:	186572        	s32i	a7, a5, 96
        
        /* 16-bit "SS" registers for PUSH and POP instructions (note that SP is
         * replaced by AF). 
         */

        state->register_table[12] = &state->registers.word[Z80_BC];
4010022a:	196562        	s32i	a6, a5, 100
        state->register_table[13] = &state->registers.word[Z80_DE];
        state->register_table[14] = &state->registers.word[Z80_HL];
4010022d:	1b6532        	s32i	a3, a5, 108
        state->register_table[15] = &state->registers.word[Z80_AF];
40100230:	ff9731        	l32r	a3, 4010008c <_stext+0x8c>
        /* 16-bit "SS" registers for PUSH and POP instructions (note that SP is
         * replaced by AF). 
         */

        state->register_table[12] = &state->registers.word[Z80_BC];
        state->register_table[13] = &state->registers.word[Z80_DE];
40100233:	1a6542        	s32i	a4, a5, 104
        state->register_table[14] = &state->registers.word[Z80_HL];
        state->register_table[15] = &state->registers.word[Z80_AF];
40100236:	1c6532        	s32i	a3, a5, 112
40100239:	ff8981        	l32r	a8, 40100060 <_stext+0x60>
4010023c:	382a      	add.n	a3, a8, a2

        for (i = 0; i < 16; i++)

                state->dd_register_table[i] 
                        = state->fd_register_table[i] 
                        = state->register_table[i];
4010023e:	d348      	l32i.n	a4, a3, 52
40100240:	224b      	addi.n	a2, a2, 4
40100242:	2d6342        	s32i	a4, a3, 180
        /* 0xdd and 0xfd prefixed register decoding tables. */

        for (i = 0; i < 16; i++)

                state->dd_register_table[i] 
                        = state->fd_register_table[i] 
40100245:	1d6342        	s32i	a4, a3, 116
        state->register_table[14] = &state->registers.word[Z80_HL];
        state->register_table[15] = &state->registers.word[Z80_AF];

        /* 0xdd and 0xfd prefixed register decoding tables. */

        for (i = 0; i < 16; i++)
40100248:	edd266        	bnei	a2, 64, 40100239 <main+0x141>

                state->dd_register_table[i] 
                        = state->fd_register_table[i] 
                        = state->register_table[i];

        state->dd_register_table[4] = &state->registers.byte[Z80_IXH];
4010024b:	ff9121        	l32r	a2, 40100090 <_stext+0x90>

	Z80Reset(&machine.state);
	machine.is_done = 0;
4010024e:	030c      	movi.n	a3, 0
40100250:	216522        	s32i	a2, a5, 132
        state->dd_register_table[5] = &state->registers.byte[Z80_IXL];
40100253:	ff9021        	l32r	a2, 40100094 <_stext+0x94>
40100256:	226522        	s32i	a2, a5, 136
        state->dd_register_table[6] = &state->registers.word[Z80_IX];
40100259:	236522        	s32i	a2, a5, 140
        state->dd_register_table[10] = &state->registers.word[Z80_IX];
4010025c:	276522        	s32i	a2, a5, 156
        state->dd_register_table[14] = &state->registers.word[Z80_IX];
4010025f:	2b6522        	s32i	a2, a5, 172

        state->fd_register_table[4] = &state->registers.byte[Z80_IYH];
40100262:	ff8d21        	l32r	a2, 40100098 <_stext+0x98>
40100265:	316522        	s32i	a2, a5, 196
        state->fd_register_table[5] = &state->registers.byte[Z80_IYL];
40100268:	ff8d21        	l32r	a2, 4010009c <_stext+0x9c>
4010026b:	326522        	s32i	a2, a5, 200
        state->fd_register_table[6] = &state->registers.word[Z80_IY];
4010026e:	336522        	s32i	a2, a5, 204
        state->fd_register_table[10] = &state->registers.word[Z80_IY];
40100271:	376522        	s32i	a2, a5, 220
        state->fd_register_table[14] = &state->registers.word[Z80_IY];        
40100274:	3b6522        	s32i	a2, a5, 236
40100277:	ff8a21        	l32r	a2, 401000a0 <_stext+0xa0>
4010027a:	282a      	add.n	a2, a8, a2
4010027c:	0239      	s32i.n	a3, a2, 0
	machine.state.pc = 0x100;
4010027e:	00a132        	movi	a3, 0x100
40100281:	096532        	s32i	a3, a5, 36
	do {
		if (cnt==0) {
40100284:	4198      	l32i.n	a9, a1, 16
40100286:	ff7421        	l32r	a2, 40100058 <_stext+0x58>
40100289:	430c      	movi.n	a3, 4
4010028b:	79cc      	bnez.n	a9, 40100296 <main+0x19e>
			cnt=1;
			PIN_OUT_SET = _BV(2); //Turn GPIO2 light off.
4010028d:	1239      	s32i.n	a3, a2, 4
	Z80Reset(&machine.state);
	machine.is_done = 0;
	machine.state.pc = 0x100;
	do {
		if (cnt==0) {
			cnt=1;
4010028f:	1a0c      	movi.n	a10, 1
40100291:	41a9      	s32i.n	a10, a1, 16
40100293:	000146        	j	4010029c <main+0x1a4>
			PIN_OUT_SET = _BV(2); //Turn GPIO2 light off.
		} else {
			cnt=0;
			PIN_OUT_CLEAR = _BV(2); //Turn GPIO2 light on.
40100296:	2239      	s32i.n	a3, a2, 8
	do {
		if (cnt==0) {
			cnt=1;
			PIN_OUT_SET = _BV(2); //Turn GPIO2 light off.
		} else {
			cnt=0;
40100298:	0b0c      	movi.n	a11, 0
4010029a:	41b9      	s32i.n	a11, a1, 16


int ICACHE_FLASH_ATTR Z80Emulate (Z80_STATE *state, int number_cycles, void *context)
{
        int     elapsed_cycles, pc, opcode;
        state->status = 0;
4010029c:	ff7161        	l32r	a6, 40100060 <_stext+0x60>
{
        int	pc, r;
//        printf("emulate(opcode=%02x elcy=%d nucy=%d\n",opcode,elapsed_cycles,number_cycles);

        pc = state->pc;
        r = state->r & 0x7f;
4010029f:	ff6581        	l32r	a8, 40100034 <_stext+0x34>
int ICACHE_FLASH_ATTR Z80Emulate (Z80_STATE *state, int number_cycles, void *context)
{
        int     elapsed_cycles, pc, opcode;
        state->status = 0;
	elapsed_cycles = 0;
	pc = state->pc;
401002a2:	96d8      	l32i.n	a13, a6, 36


int ICACHE_FLASH_ATTR Z80Emulate (Z80_STATE *state, int number_cycles, void *context)
{
        int     elapsed_cycles, pc, opcode;
        state->status = 0;
401002a4:	070c      	movi.n	a7, 0
	elapsed_cycles = 0;
	pc = state->pc;
        Z80_FETCH_BYTE(pc, opcode);
401002a6:	f420d0        	extui	a2, a13, 0, 16
401002a9:	262a      	add.n	a2, a6, a2
401002ab:	f40232        	l8ui	a3, a2, 244
{
        int	pc, r;
//        printf("emulate(opcode=%02x elcy=%d nucy=%d\n",opcode,elapsed_cycles,number_cycles);

        pc = state->pc;
        r = state->r & 0x7f;
401002ae:	8628      	l32i.n	a2, a6, 32
        int     elapsed_cycles, pc, opcode;
        state->status = 0;
	elapsed_cycles = 0;
	pc = state->pc;
        Z80_FETCH_BYTE(pc, opcode);
        state->pc = pc + 1;
401002b0:	dd1b      	addi.n	a13, a13, 1
{
        int	pc, r;
//        printf("emulate(opcode=%02x elcy=%d nucy=%d\n",opcode,elapsed_cycles,number_cycles);

        pc = state->pc;
        r = state->r & 0x7f;
401002b2:	642020        	extui	a2, a2, 0, 7


int ICACHE_FLASH_ATTR Z80Emulate (Z80_STATE *state, int number_cycles, void *context)
{
        int     elapsed_cycles, pc, opcode;
        state->status = 0;
401002b5:	0679      	s32i.n	a7, a6, 0
	elapsed_cycles = 0;
	pc = state->pc;
        Z80_FETCH_BYTE(pc, opcode);
        state->pc = pc + 1;
401002b7:	96d9      	s32i.n	a13, a6, 36
{
        int	pc, r;
//        printf("emulate(opcode=%02x elcy=%d nucy=%d\n",opcode,elapsed_cycles,number_cycles);

        pc = state->pc;
        r = state->r & 0x7f;
401002b9:	0129      	s32i.n	a2, a1, 0
401002bb:	3179      	s32i.n	a7, a1, 12
401002bd:	2179      	s32i.n	a7, a1, 8
401002bf:	1189      	s32i.n	a8, a1, 4
401002c1:	06cd      	mov.n	a12, a6
401002c3:	ff5f41        	l32r	a4, 40100040 <_stext+0x40>
401002c6:	000246        	j	401002d3 <main+0x1db>
        for ( ; ; ) {   

                void    **registers; 
                int     instruction;

                Z80_FETCH_BYTE(pc, opcode);
401002c9:	f420d0        	extui	a2, a13, 0, 16
401002cc:	2c2a      	add.n	a2, a12, a2
401002ce:	f40232        	l8ui	a3, a2, 244
                pc++;
401002d1:	dd1b      	addi.n	a13, a13, 1

start_emulation:                

                registers = state->register_table;
401002d3:	ff5be1        	l32r	a14, 40100040 <_stext+0x40>

                        }

                        case DD_PREFIX: {

                                registers = state->dd_register_table;
401002d6:	ff58a1        	l32r	a10, 40100038 <_stext+0x38>

emulate_next_instruction:

                elapsed_cycles += 4;
                r++;
                switch (instruction) {
401002d9:	7aa092        	movi	a9, 122

                registers = state->register_table;

emulate_next_opcode:

                instruction = INSTRUCTION_TABLE[opcode];
401002dc:	ff72b1        	l32r	a11, 401000a4 <_stext+0xa4>
401002df:	2b3a      	add.n	a2, a11, a3
401002e1:	000282        	l8ui	a8, a2, 0

emulate_next_instruction:

                elapsed_cycles += 4;
                r++;
401002e4:	01b8      	l32i.n	a11, a1, 0

                instruction = INSTRUCTION_TABLE[opcode];

emulate_next_instruction:

                elapsed_cycles += 4;
401002e6:	0128      	l32i.n	a2, a1, 0
                r++;
401002e8:	bb1b      	addi.n	a11, a11, 1
401002ea:	01b9      	s32i.n	a11, a1, 0

                instruction = INSTRUCTION_TABLE[opcode];

emulate_next_instruction:

                elapsed_cycles += 4;
401002ec:	07fd      	mov.n	a15, a7
401002ee:	774b      	addi.n	a7, a7, 4
                r++;
                switch (instruction) {
401002f0:	02b987        	bgeu	a9, a8, 401002f6 <main+0x1fe>
401002f3:	07c686        	j	40102211 <main+0x2119>
401002f6:	ff6cb1        	l32r	a11, 401000a8 <_stext+0xa8>
401002f9:	a088b0        	addx4	a8, a8, a11
401002fc:	0888      	l32i.n	a8, a8, 0
401002fe:	0008a0        	jx	a8

                        /* 8-bit load group. */

                        case LD_R_R: {

                                R(Y(opcode)) = R(Z(opcode));
40100301:	242330        	extui	a2, a3, 3, 3
40100304:	243030        	extui	a3, a3, 0, 3
40100307:	a033e0        	addx4	a3, a3, a14
4010030a:	0338      	l32i.n	a3, a3, 0
4010030c:	a022e0        	addx4	a2, a2, a14
4010030f:	0228      	l32i.n	a2, a2, 0
40100311:	000332        	l8ui	a3, a3, 0
40100314:	004232        	s8i	a3, a2, 0
40100317:	07bd86        	j	40102211 <main+0x2119>

                        }

                        case LD_R_N: {

                                READ_N(R(Y(opcode)));
4010031a:	243330        	extui	a3, a3, 3, 3
4010031d:	a0e3e0        	addx4	a14, a3, a14
40100320:	f430d0        	extui	a3, a13, 0, 16
40100323:	3c3a      	add.n	a3, a12, a3
40100325:	0e28      	l32i.n	a2, a14, 0
40100327:	f40332        	l8ui	a3, a3, 244
4010032a:	dd1b      	addi.n	a13, a13, 1
4010032c:	004232        	s8i	a3, a2, 0
4010032f:	7f7b      	addi.n	a7, a15, 7
40100331:	07b706        	j	40102211 <main+0x2119>
40100334:	300000        	xor	a0, a0, a0
40100337:	472133        	excw

                        }

                        case LD_R_INDIRECT_HL: {

                                if (registers == state->register_table) {
4010033a:	9e          	.byte 0x9e
4010033b:	303017        	bltu	a0, a1, 4010036f <main+0x277>

                                        READ_BYTE(HL, R(Y(opcode)));
4010033e:	334024        	excw
40100341:	0328a0        	excw
40100344:	041c32        	l16ui	a3, a12, 8
40100347:	7f7b      	addi.n	a7, a15, 7
40100349:	3c3a      	add.n	a3, a12, a3
4010034b:	f40332        	l8ui	a3, a3, 244
4010034e:	004232        	s8i	a3, a2, 0
40100351:	07af06        	j	40102211 <main+0x2119>

                                } else {

                                        int     d;

                                        READ_D(d);
40100354:	f420d0        	extui	a2, a13, 0, 16
                                        d += HL_IX_IY;
40100357:	6e78      	l32i.n	a7, a14, 24

                                } else {

                                        int     d;

                                        READ_D(d);
40100359:	2c2a      	add.n	a2, a12, a2
                                        d += HL_IX_IY;
4010035b:	001772        	l16ui	a7, a7, 0

                                } else {

                                        int     d;

                                        READ_D(d);
4010035e:	f40222        	l8ui	a2, a2, 244
                                        d += HL_IX_IY;
                                        READ_BYTE(d, S(Y(opcode)));
40100361:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
40100364:	227a      	add.n	a2, a2, a7
                                        READ_BYTE(d, S(Y(opcode)));
40100366:	f42020        	extui	a2, a2, 0, 16
40100369:	a033c0        	addx4	a3, a3, a12
4010036c:	2c2a      	add.n	a2, a12, a2
4010036e:	d338      	l32i.n	a3, a3, 52
40100370:	f40222        	l8ui	a2, a2, 244

                                } else {

                                        int     d;

                                        READ_D(d);
40100373:	dd1b      	addi.n	a13, a13, 1
                                        d += HL_IX_IY;
                                        READ_BYTE(d, S(Y(opcode)));
40100375:	004322        	s8i	a2, a3, 0

                                        elapsed_cycles += 5;
40100378:	7ffb      	addi.n	a7, a15, 15
4010037a:	07a4c6        	j	40102211 <main+0x2119>
4010037d:	243030        	extui	a3, a3, 0, 3

                        }

                        case LD_INDIRECT_HL_R: {

                                if (registers == state->register_table) {
40100380:	149e47        	bne	a14, a4, 40100398 <main+0x2a0>

                                        WRITE_BYTE(HL, R(Z(opcode)));
40100383:	a03340        	addx4	a3, a3, a4
40100386:	0328      	l32i.n	a2, a3, 0
40100388:	7f7b      	addi.n	a7, a15, 7
4010038a:	000232        	l8ui	a3, a2, 0
4010038d:	041c22        	l16ui	a2, a12, 8
40100390:	2c2a      	add.n	a2, a12, a2
40100392:	f44232        	s8i	a3, a2, 244
40100395:	079e06        	j	40102211 <main+0x2119>

                                } else {

                                        int     d;

                                        READ_D(d);
40100398:	f420d0        	extui	a2, a13, 0, 16
                                        d += HL_IX_IY;
4010039b:	6e78      	l32i.n	a7, a14, 24

                                } else {

                                        int     d;

                                        READ_D(d);
4010039d:	2c2a      	add.n	a2, a12, a2
                                        d += HL_IX_IY;
4010039f:	001772        	l16ui	a7, a7, 0

                                } else {

                                        int     d;

                                        READ_D(d);
401003a2:	f40222        	l8ui	a2, a2, 244
                                        d += HL_IX_IY;
                                        WRITE_BYTE(d, S(Z(opcode)));
401003a5:	a033c0        	addx4	a3, a3, a12
401003a8:	d338      	l32i.n	a3, a3, 52
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401003aa:	227a      	add.n	a2, a2, a7
                                        WRITE_BYTE(d, S(Z(opcode)));
401003ac:	000332        	l8ui	a3, a3, 0
401003af:	f42020        	extui	a2, a2, 0, 16
401003b2:	2c2a      	add.n	a2, a12, a2

                                } else {

                                        int     d;

                                        READ_D(d);
401003b4:	dd1b      	addi.n	a13, a13, 1
                                        d += HL_IX_IY;
                                        WRITE_BYTE(d, S(Z(opcode)));
401003b6:	f44232        	s8i	a3, a2, 244

                                        elapsed_cycles += 5;
401003b9:	7ffb      	addi.n	a7, a15, 15
401003bb:	079486        	j	40102211 <main+0x2119>
401003be:	f430d0        	extui	a3, a13, 0, 16

                                int     n;

                                if (registers == state->register_table) {

                                        READ_N(n);
401003c1:	3c3a      	add.n	a3, a12, a3
401003c3:	2d1b      	addi.n	a2, a13, 1
401003c5:	f40332        	l8ui	a3, a3, 244

                        case LD_INDIRECT_HL_N: {

                                int     n;

                                if (registers == state->register_table) {
401003c8:	0e9e47        	bne	a14, a4, 401003da <main+0x2e2>

                                        READ_N(n);
401003cb:	02dd      	mov.n	a13, a2
                                        WRITE_BYTE(HL, n);
401003cd:	041c22        	l16ui	a2, a12, 8
401003d0:	7fab      	addi.n	a7, a15, 10
401003d2:	2c2a      	add.n	a2, a12, a2
401003d4:	f44232        	s8i	a3, a2, 244
401003d7:	078d86        	j	40102211 <main+0x2119>
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401003da:	6e78      	l32i.n	a7, a14, 24
                                        READ_N(n);
401003dc:	f42020        	extui	a2, a2, 0, 16
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401003df:	001772        	l16ui	a7, a7, 0
                                        READ_N(n);
401003e2:	2c2a      	add.n	a2, a12, a2
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401003e4:	337a      	add.n	a3, a3, a7
                                        READ_N(n);
401003e6:	f40222        	l8ui	a2, a2, 244
                                        WRITE_BYTE(d, n);
401003e9:	f43030        	extui	a3, a3, 0, 16
401003ec:	3c3a      	add.n	a3, a12, a3

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
                                        READ_N(n);
401003ee:	dd2b      	addi.n	a13, a13, 2
                                        WRITE_BYTE(d, n);
401003f0:	f44322        	s8i	a2, a3, 244

                                        elapsed_cycles += 2;
401003f3:	7ffb      	addi.n	a7, a15, 15
401003f5:	078606        	j	40102211 <main+0x2119>

                        }

                        case LD_A_INDIRECT_BC: {

                                READ_BYTE(BC, A);
401003f8:	021c22        	l16ui	a2, a12, 4
401003fb:	7f7b      	addi.n	a7, a15, 7
401003fd:	2c2a      	add.n	a2, a12, a2
401003ff:	f40222        	l8ui	a2, a2, 244
40100402:	0b4c22        	s8i	a2, a12, 11
40100405:	078206        	j	40102211 <main+0x2119>

                        }

                        case LD_A_INDIRECT_DE: {

                                READ_BYTE(DE, A);
40100408:	031c22        	l16ui	a2, a12, 6
4010040b:	7f7b      	addi.n	a7, a15, 7
4010040d:	2c2a      	add.n	a2, a12, a2
4010040f:	f40222        	l8ui	a2, a2, 244
40100412:	0b4c22        	s8i	a2, a12, 11
40100415:	077e06        	j	40102211 <main+0x2119>

                        case LD_A_INDIRECT_NN: {

                                int     nn;

                                READ_NN(nn);
40100418:	2d1b      	addi.n	a2, a13, 1
4010041a:	f42020        	extui	a2, a2, 0, 16
4010041d:	2c2a      	add.n	a2, a12, a2
4010041f:	f40232        	l8ui	a3, a2, 244
40100422:	f420d0        	extui	a2, a13, 0, 16
40100425:	2c2a      	add.n	a2, a12, a2
40100427:	f40222        	l8ui	a2, a2, 244
4010042a:	113380        	slli	a3, a3, 8
4010042d:	202320        	or	a2, a3, a2
                                READ_BYTE(nn, A);
40100430:	2c2a      	add.n	a2, a12, a2
40100432:	f40222        	l8ui	a2, a2, 244

                        case LD_A_INDIRECT_NN: {

                                int     nn;

                                READ_NN(nn);
40100435:	dd2b      	addi.n	a13, a13, 2
                                READ_BYTE(nn, A);
40100437:	0b4c22        	s8i	a2, a12, 11
4010043a:	7fdb      	addi.n	a7, a15, 13
4010043c:	077446        	j	40102211 <main+0x2119>

                        }

                        case LD_INDIRECT_BC_A: {

                                WRITE_BYTE(BC, A);
4010043f:	021c22        	l16ui	a2, a12, 4
40100442:	0b0c32        	l8ui	a3, a12, 11
40100445:	2c2a      	add.n	a2, a12, a2
40100447:	f44232        	s8i	a3, a2, 244
4010044a:	7f7b      	addi.n	a7, a15, 7
4010044c:	077046        	j	40102211 <main+0x2119>

                        }

                        case LD_INDIRECT_DE_A: {

                                WRITE_BYTE(DE, A);
4010044f:	031c22        	l16ui	a2, a12, 6
40100452:	0b0c32        	l8ui	a3, a12, 11
40100455:	2c2a      	add.n	a2, a12, a2
40100457:	f44232        	s8i	a3, a2, 244
4010045a:	7f7b      	addi.n	a7, a15, 7
4010045c:	076c46        	j	40102211 <main+0x2119>

                        case LD_INDIRECT_NN_A: {

                                int     nn;

                                READ_NN(nn);
4010045f:	2d1b      	addi.n	a2, a13, 1
40100461:	f42020        	extui	a2, a2, 0, 16
40100464:	f430d0        	extui	a3, a13, 0, 16
40100467:	2c2a      	add.n	a2, a12, a2
40100469:	f40222        	l8ui	a2, a2, 244
4010046c:	3c3a      	add.n	a3, a12, a3
4010046e:	f40332        	l8ui	a3, a3, 244
40100471:	112280        	slli	a2, a2, 8
40100474:	202230        	or	a2, a2, a3
                                WRITE_BYTE(nn, A);
40100477:	0b0c32        	l8ui	a3, a12, 11
4010047a:	2c2a      	add.n	a2, a12, a2

                        case LD_INDIRECT_NN_A: {

                                int     nn;

                                READ_NN(nn);
4010047c:	dd2b      	addi.n	a13, a13, 2
                                WRITE_BYTE(nn, A);
4010047e:	f44232        	s8i	a3, a2, 244
40100481:	7fdb      	addi.n	a7, a15, 13
40100483:	076286        	j	40102211 <main+0x2119>

                                int     a, f;

                                a = opcode == OPCODE_LD_A_I 
                                        ? state->i 
                                        : (state->r & 0x80) | (r & 0x7f);
40100486:	725c      	movi.n	a2, 87
40100488:	049327        	bne	a3, a2, 40100490 <main+0x398>
4010048b:	7c28      	l32i.n	a2, a12, 28
4010048d:	0003c6        	j	401004a0 <main+0x3a8>
40100490:	01e8      	l32i.n	a14, a1, 0
40100492:	8c38      	l32i.n	a3, a12, 32
40100494:	80a072        	movi	a7, 128
40100497:	6420e0        	extui	a2, a14, 0, 7
4010049a:	103730        	and	a3, a7, a3
4010049d:	202230        	or	a2, a2, a3
                                f = SZYX_FLAGS_TABLE[a];
401004a0:	ff0331        	l32r	a3, 401000ac <_stext+0xac>
                                 * "LD A, I" or "LD A, R", the parity flag is
                                 * reset. That can never happen here.
                                 */ 

                                f |= state->iff2 << Z80_P_FLAG_SHIFT;
                                f |= F & Z80_C_FLAG;
401004a3:	0a0c82        	l8ui	a8, a12, 10
                                 * occurs during the execution of either 
                                 * "LD A, I" or "LD A, R", the parity flag is
                                 * reset. That can never happen here.
                                 */ 

                                f |= state->iff2 << Z80_P_FLAG_SHIFT;
401004a6:	bc78      	l32i.n	a7, a12, 44
                                int     a, f;

                                a = opcode == OPCODE_LD_A_I 
                                        ? state->i 
                                        : (state->r & 0x80) | (r & 0x7f);
                                f = SZYX_FLAGS_TABLE[a];
401004a8:	332a      	add.n	a3, a3, a2
401004aa:	000332        	l8ui	a3, a3, 0
                                 * "LD A, I" or "LD A, R", the parity flag is
                                 * reset. That can never happen here.
                                 */ 

                                f |= state->iff2 << Z80_P_FLAG_SHIFT;
                                f |= F & Z80_C_FLAG;
401004ad:	048080        	extui	a8, a8, 0, 1
                                 * occurs during the execution of either 
                                 * "LD A, I" or "LD A, R", the parity flag is
                                 * reset. That can never happen here.
                                 */ 

                                f |= state->iff2 << Z80_P_FLAG_SHIFT;
401004b0:	1177e0        	slli	a7, a7, 2
401004b3:	207870        	or	a7, a8, a7
                                f |= F & Z80_C_FLAG;
401004b6:	207730        	or	a7, a7, a3

                                AF = (a << 8) | f;
401004b9:	112280        	slli	a2, a2, 8
401004bc:	207720        	or	a7, a7, a2
401004bf:	055c72        	s16i	a7, a12, 10

                                elapsed_cycles++;
401004c2:	7f5b      	addi.n	a7, a15, 5
401004c4:	075246        	j	40102211 <main+0x2119>

                        }

                        case LD_I_A_LD_R_A: {

                                if (opcode == OPCODE_LD_I_A)
401004c7:	724c      	movi.n	a2, 71
401004c9:	079327        	bne	a3, a2, 401004d4 <main+0x3dc>

                                        state->i = A;
401004cc:	0b0c22        	l8ui	a2, a12, 11
401004cf:	7c29      	s32i.n	a2, a12, 28
401004d1:	000246        	j	401004de <main+0x3e6>

                                else {

                                        state->r = A;
401004d4:	0b0c22        	l8ui	a2, a12, 11
401004d7:	8c29      	s32i.n	a2, a12, 32
                                        r = A & 0x7f;
401004d9:	642020        	extui	a2, a2, 0, 7
401004dc:	0129      	s32i.n	a2, a1, 0

                                }

                                elapsed_cycles++;
401004de:	7f5b      	addi.n	a7, a15, 5
401004e0:	074b46        	j	40102211 <main+0x2119>
                        }

                        /* 16-bit load group. */

                        case LD_RR_NN: {
                                READ_NN(RR(P(opcode)));
401004e3:	143430        	extui	a3, a3, 4, 2
401004e6:	a0e3e0        	addx4	a14, a3, a14
401004e9:	3d1b      	addi.n	a3, a13, 1
401004eb:	f43030        	extui	a3, a3, 0, 16
401004ee:	f470d0        	extui	a7, a13, 0, 16
401004f1:	3c3a      	add.n	a3, a12, a3
401004f3:	f40332        	l8ui	a3, a3, 244
401004f6:	7c7a      	add.n	a7, a12, a7
401004f8:	f40772        	l8ui	a7, a7, 244
401004fb:	8e28      	l32i.n	a2, a14, 32
401004fd:	113380        	slli	a3, a3, 8
40100500:	203730        	or	a3, a7, a3
40100503:	005232        	s16i	a3, a2, 0
40100506:	dd2b      	addi.n	a13, a13, 2
40100508:	7fab      	addi.n	a7, a15, 10
4010050a:	0740c6        	j	40102211 <main+0x2119>

                        case LD_HL_INDIRECT_NN: {

                                int     nn;

                                READ_NN(nn);
4010050d:	2d1b      	addi.n	a2, a13, 1
4010050f:	f42020        	extui	a2, a2, 0, 16
40100512:	f430d0        	extui	a3, a13, 0, 16
40100515:	2c2a      	add.n	a2, a12, a2
40100517:	f40222        	l8ui	a2, a2, 244
4010051a:	3c3a      	add.n	a3, a12, a3
4010051c:	f40332        	l8ui	a3, a3, 244
4010051f:	112280        	slli	a2, a2, 8
40100522:	202230        	or	a2, a2, a3
                                READ_WORD(nn, HL_IX_IY);
40100525:	721b      	addi.n	a7, a2, 1
40100527:	f47070        	extui	a7, a7, 0, 16
4010052a:	7c7a      	add.n	a7, a12, a7
4010052c:	f40772        	l8ui	a7, a7, 244
4010052f:	2c2a      	add.n	a2, a12, a2
40100531:	f40222        	l8ui	a2, a2, 244
40100534:	6e38      	l32i.n	a3, a14, 24
40100536:	117780        	slli	a7, a7, 8
40100539:	207270        	or	a7, a2, a7
4010053c:	005372        	s16i	a7, a3, 0

                        case LD_HL_INDIRECT_NN: {

                                int     nn;

                                READ_NN(nn);
4010053f:	dd2b      	addi.n	a13, a13, 2
                                READ_WORD(nn, HL_IX_IY);
40100541:	10cf72        	addi	a7, a15, 16
40100544:	073246        	j	40102211 <main+0x2119>

                        case LD_RR_INDIRECT_NN: {

                                int     nn;

                                READ_NN(nn);
40100547:	2d1b      	addi.n	a2, a13, 1
40100549:	f42020        	extui	a2, a2, 0, 16
4010054c:	2c2a      	add.n	a2, a12, a2
4010054e:	f40272        	l8ui	a7, a2, 244
40100551:	f420d0        	extui	a2, a13, 0, 16
40100554:	2c2a      	add.n	a2, a12, a2
40100556:	f40222        	l8ui	a2, a2, 244
40100559:	117780        	slli	a7, a7, 8
4010055c:	202720        	or	a2, a7, a2
                                READ_WORD(nn, RR(P(opcode)));
4010055f:	721b      	addi.n	a7, a2, 1
40100561:	f47070        	extui	a7, a7, 0, 16
40100564:	7c7a      	add.n	a7, a12, a7
40100566:	f40782        	l8ui	a8, a7, 244
40100569:	143430        	extui	a3, a3, 4, 2
4010056c:	2c2a      	add.n	a2, a12, a2
4010056e:	f40222        	l8ui	a2, a2, 244
40100571:	a033e0        	addx4	a3, a3, a14
40100574:	8338      	l32i.n	a3, a3, 32
40100576:	118880        	slli	a8, a8, 8
40100579:	208280        	or	a8, a2, a8

                        case LD_RR_INDIRECT_NN: {

                                int     nn;

                                READ_NN(nn);
4010057c:	dd2b      	addi.n	a13, a13, 2
                                READ_WORD(nn, RR(P(opcode)));
4010057e:	005382        	s16i	a8, a3, 0
40100581:	10cf72        	addi	a7, a15, 16
40100584:	072246        	j	40102211 <main+0x2119>

                        case LD_INDIRECT_NN_HL: {

                                int     nn;

                                READ_NN(nn);
40100587:	2d1b      	addi.n	a2, a13, 1
40100589:	f42020        	extui	a2, a2, 0, 16
4010058c:	f430d0        	extui	a3, a13, 0, 16
4010058f:	2c2a      	add.n	a2, a12, a2
40100591:	f40222        	l8ui	a2, a2, 244
40100594:	3c3a      	add.n	a3, a12, a3
40100596:	f40332        	l8ui	a3, a3, 244
                                WRITE_WORD(nn, HL_IX_IY);
40100599:	6e78      	l32i.n	a7, a14, 24

                        case LD_INDIRECT_NN_HL: {

                                int     nn;

                                READ_NN(nn);
4010059b:	112280        	slli	a2, a2, 8
                                WRITE_WORD(nn, HL_IX_IY);
4010059e:	001772        	l16ui	a7, a7, 0

                        case LD_INDIRECT_NN_HL: {

                                int     nn;

                                READ_NN(nn);
401005a1:	202230        	or	a2, a2, a3
                                WRITE_WORD(nn, HL_IX_IY);
401005a4:	3c2a      	add.n	a3, a12, a2
401005a6:	f44372        	s8i	a7, a3, 244
401005a9:	6e38      	l32i.n	a3, a14, 24
401005ab:	221b      	addi.n	a2, a2, 1
401005ad:	001332        	l16ui	a3, a3, 0
401005b0:	f42020        	extui	a2, a2, 0, 16
401005b3:	2c2a      	add.n	a2, a12, a2
401005b5:	413830        	srli	a3, a3, 8

                        case LD_INDIRECT_NN_HL: {

                                int     nn;

                                READ_NN(nn);
401005b8:	dd2b      	addi.n	a13, a13, 2
                                WRITE_WORD(nn, HL_IX_IY);
401005ba:	f44232        	s8i	a3, a2, 244
401005bd:	10cf72        	addi	a7, a15, 16
401005c0:	071346        	j	40102211 <main+0x2119>

                        case LD_INDIRECT_NN_RR: {

                                int     nn;

                                READ_NN(nn);
401005c3:	2d1b      	addi.n	a2, a13, 1
401005c5:	f42020        	extui	a2, a2, 0, 16
401005c8:	f470d0        	extui	a7, a13, 0, 16
401005cb:	2c2a      	add.n	a2, a12, a2
401005cd:	f40222        	l8ui	a2, a2, 244
401005d0:	7c7a      	add.n	a7, a12, a7
                                WRITE_WORD(nn, RR(P(opcode)));
401005d2:	143430        	extui	a3, a3, 4, 2

                        case LD_INDIRECT_NN_RR: {

                                int     nn;

                                READ_NN(nn);
401005d5:	f40772        	l8ui	a7, a7, 244
                                WRITE_WORD(nn, RR(P(opcode)));
401005d8:	338b      	addi.n	a3, a3, 8
401005da:	a0e3e0        	addx4	a14, a3, a14

                        case LD_INDIRECT_NN_RR: {

                                int     nn;

                                READ_NN(nn);
401005dd:	112280        	slli	a2, a2, 8
401005e0:	202270        	or	a2, a2, a7
                                WRITE_WORD(nn, RR(P(opcode)));
401005e3:	0e78      	l32i.n	a7, a14, 0
401005e5:	3c2a      	add.n	a3, a12, a2
401005e7:	001772        	l16ui	a7, a7, 0
401005ea:	221b      	addi.n	a2, a2, 1
401005ec:	f44372        	s8i	a7, a3, 244
401005ef:	0e38      	l32i.n	a3, a14, 0
401005f1:	f42020        	extui	a2, a2, 0, 16
401005f4:	001332        	l16ui	a3, a3, 0
401005f7:	2c2a      	add.n	a2, a12, a2
401005f9:	413830        	srli	a3, a3, 8

                        case LD_INDIRECT_NN_RR: {

                                int     nn;

                                READ_NN(nn);
401005fc:	dd2b      	addi.n	a13, a13, 2
                                WRITE_WORD(nn, RR(P(opcode)));
401005fe:	f44232        	s8i	a3, a2, 244
40100601:	10cf72        	addi	a7, a15, 16
40100604:	070246        	j	40102211 <main+0x2119>

                        }

                        case LD_SP_HL: {

                                SP = HL_IX_IY;
40100607:	6e28      	l32i.n	a2, a14, 24
                                elapsed_cycles += 2;
40100609:	7f6b      	addi.n	a7, a15, 6

                        }

                        case LD_SP_HL: {

                                SP = HL_IX_IY;
4010060b:	001222        	l16ui	a2, a2, 0
4010060e:	085c22        	s16i	a2, a12, 16
40100611:	06ff06        	j	40102211 <main+0x2119>

                        }

                        case PUSH_SS: {

                                PUSH(SS(P(opcode)));
40100614:	081c22        	l16ui	a2, a12, 16
40100617:	143430        	extui	a3, a3, 4, 2
4010061a:	fec222        	addi	a2, a2, -2
4010061d:	f42020        	extui	a2, a2, 0, 16
40100620:	33cb      	addi.n	a3, a3, 12
40100622:	085c22        	s16i	a2, a12, 16
40100625:	a0e3e0        	addx4	a14, a3, a14
40100628:	0e78      	l32i.n	a7, a14, 0
4010062a:	3c2a      	add.n	a3, a12, a2
4010062c:	001772        	l16ui	a7, a7, 0
4010062f:	221b      	addi.n	a2, a2, 1
40100631:	f44372        	s8i	a7, a3, 244
40100634:	0e38      	l32i.n	a3, a14, 0
40100636:	f42020        	extui	a2, a2, 0, 16
40100639:	001332        	l16ui	a3, a3, 0
4010063c:	2c2a      	add.n	a2, a12, a2
4010063e:	413830        	srli	a3, a3, 8
40100641:	f44232        	s8i	a3, a2, 244
                                elapsed_cycles++;
40100644:	7fbb      	addi.n	a7, a15, 11
40100646:	06f1c6        	j	40102211 <main+0x2119>

                        }

                        case POP_SS: {

                                POP(SS(P(opcode)));
40100649:	081c22        	l16ui	a2, a12, 16
4010064c:	143430        	extui	a3, a3, 4, 2
4010064f:	721b      	addi.n	a7, a2, 1
40100651:	f47070        	extui	a7, a7, 0, 16
40100654:	7c7a      	add.n	a7, a12, a7
40100656:	f40772        	l8ui	a7, a7, 244
40100659:	2c2a      	add.n	a2, a12, a2
4010065b:	f40222        	l8ui	a2, a2, 244
4010065e:	a033e0        	addx4	a3, a3, a14
40100661:	c338      	l32i.n	a3, a3, 48
40100663:	117780        	slli	a7, a7, 8
40100666:	207270        	or	a7, a2, a7
40100669:	005372        	s16i	a7, a3, 0
4010066c:	081c22        	l16ui	a2, a12, 16
4010066f:	7fab      	addi.n	a7, a15, 10
40100671:	222b      	addi.n	a2, a2, 2
40100673:	085c22        	s16i	a2, a12, 16
40100676:	06e5c6        	j	40102211 <main+0x2119>

                        /* Exchange, block transfer and search group. */

                        case EX_DE_HL: {

                                EXCHANGE(DE, HL);
40100679:	031c22        	l16ui	a2, a12, 6
4010067c:	041c32        	l16ui	a3, a12, 8
4010067f:	045c22        	s16i	a2, a12, 8
40100682:	035c32        	s16i	a3, a12, 6
40100685:	06e206        	j	40102211 <main+0x2119>

                        }

                        case EX_AF_AF_PRIME: {

                                EXCHANGE(AF, state->alternates[Z80_AF]);
40100688:	051c22        	l16ui	a2, a12, 10
4010068b:	0c1c32        	l16ui	a3, a12, 24
4010068e:	0c5c22        	s16i	a2, a12, 24
40100691:	055c32        	s16i	a3, a12, 10
40100694:	06de46        	j	40102211 <main+0x2119>

                        }

                        case EXX: {

                                EXCHANGE(BC, state->alternates[Z80_BC]);
40100697:	021c22        	l16ui	a2, a12, 4
4010069a:	091c32        	l16ui	a3, a12, 18
4010069d:	095c22        	s16i	a2, a12, 18
401006a0:	025c32        	s16i	a3, a12, 4
                                EXCHANGE(DE, state->alternates[Z80_DE]);
401006a3:	031c22        	l16ui	a2, a12, 6
401006a6:	0a1c32        	l16ui	a3, a12, 20
401006a9:	0a5c22        	s16i	a2, a12, 20
401006ac:	035c32        	s16i	a3, a12, 6
                                EXCHANGE(HL, state->alternates[Z80_HL]);
401006af:	041c22        	l16ui	a2, a12, 8
401006b2:	0b1c32        	l16ui	a3, a12, 22
401006b5:	0b5c22        	s16i	a2, a12, 22
401006b8:	045c32        	s16i	a3, a12, 8
401006bb:	06d486        	j	40102211 <main+0x2119>

                        case EX_INDIRECT_SP_HL: {

                                int     t;

                                READ_WORD(SP, t);
401006be:	081c32        	l16ui	a3, a12, 16
401006c1:	f0a072        	movi	a7, 240
401006c4:	231b      	addi.n	a2, a3, 1
401006c6:	f42020        	extui	a2, a2, 0, 16
401006c9:	2c2a      	add.n	a2, a12, a2
401006cb:	227a      	add.n	a2, a2, a7
401006cd:	3c3a      	add.n	a3, a12, a3
401006cf:	040282        	l8ui	a8, a2, 4
401006d2:	337a      	add.n	a3, a3, a7
401006d4:	040372        	l8ui	a7, a3, 4
401006d7:	118880        	slli	a8, a8, 8
401006da:	208870        	or	a8, a8, a7
                                WRITE_WORD(SP, HL_IX_IY);
401006dd:	6e78      	l32i.n	a7, a14, 24
401006df:	001772        	l16ui	a7, a7, 0
401006e2:	044372        	s8i	a7, a3, 4
401006e5:	6e38      	l32i.n	a3, a14, 24
                                HL_IX_IY = t;

                                elapsed_cycles += 3;
401006e7:	13cf72        	addi	a7, a15, 19
                        case EX_INDIRECT_SP_HL: {

                                int     t;

                                READ_WORD(SP, t);
                                WRITE_WORD(SP, HL_IX_IY);
401006ea:	001332        	l16ui	a3, a3, 0
401006ed:	413830        	srli	a3, a3, 8
401006f0:	044232        	s8i	a3, a2, 4
                                HL_IX_IY = t;
401006f3:	6e28      	l32i.n	a2, a14, 24
401006f5:	005282        	s16i	a8, a2, 0
401006f8:	06c546        	j	40102211 <main+0x2119>

                        case LDI_LDD: {

                                int     n, f, d;

                                READ_BYTE(HL, n);
401006fb:	041c72        	l16ui	a7, a12, 8
                                WRITE_BYTE(DE, n);

                                f = F & SZC_FLAGS;
                                f |= --BC ? Z80_P_FLAG : 0;
401006fe:	021c92        	l16ui	a9, a12, 4

                        case LDI_LDD: {

                                int     n, f, d;

                                READ_BYTE(HL, n);
40100701:	2c7a      	add.n	a2, a12, a7
40100703:	f40282        	l8ui	a8, a2, 244
                                WRITE_BYTE(DE, n);
40100706:	031c22        	l16ui	a2, a12, 6

                                f = F & SZC_FLAGS;
40100709:	0a0ca2        	l8ui	a10, a12, 10
                        case LDI_LDD: {

                                int     n, f, d;

                                READ_BYTE(HL, n);
                                WRITE_BYTE(DE, n);
4010070c:	2c2a      	add.n	a2, a12, a2
4010070e:	f44282        	s8i	a8, a2, 244

                                f = F & SZC_FLAGS;
                                f |= --BC ? Z80_P_FLAG : 0;
40100711:	990b      	addi.n	a9, a9, -1
                                int     n, f, d;

                                READ_BYTE(HL, n);
                                WRITE_BYTE(DE, n);

                                f = F & SZC_FLAGS;
40100713:	c1a022        	movi	a2, 193
                                f |= --BC ? Z80_P_FLAG : 0;
40100716:	f49090        	extui	a9, a9, 0, 16
                                int     n, f, d;

                                READ_BYTE(HL, n);
                                WRITE_BYTE(DE, n);

                                f = F & SZC_FLAGS;
40100719:	10aa20        	and	a10, a10, a2
                                f |= --BC ? Z80_P_FLAG : 0;
4010071c:	0b0c      	movi.n	a11, 0
4010071e:	420c      	movi.n	a2, 4
40100720:	832b90        	moveqz	a2, a11, a9
40100723:	025c92        	s16i	a9, a12, 4

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
40100726:	0b0c92        	l8ui	a9, a12, 11
40100729:	889a      	add.n	a8, a8, a9
                                f |= n & Z80_X_FLAG;
4010072b:	890c      	movi.n	a9, 8
4010072d:	109890        	and	a9, a8, a9

                                READ_BYTE(HL, n);
                                WRITE_BYTE(DE, n);

                                f = F & SZC_FLAGS;
                                f |= --BC ? Z80_P_FLAG : 0;
40100730:	20a9a0        	or	a10, a9, a10

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
                                f |= n & Z80_X_FLAG;
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
40100733:	1188c0        	slli	a8, a8, 4
                                        & Z80_Y_FLAG;
40100736:	092c      	movi.n	a9, 32
40100738:	108890        	and	a8, a8, a9
                                f |= --BC ? Z80_P_FLAG : 0;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
                                f |= n & Z80_X_FLAG;
4010073b:	208a80        	or	a8, a10, a8
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
4010073e:	208820        	or	a8, a8, a2
                                        & Z80_Y_FLAG;

#endif

                                F = f;
40100741:	0a4c82        	s8i	a8, a12, 10

                                d = opcode == OPCODE_LDI ? +1 : -1;
40100744:	a0a082        	movi	a8, 160
40100747:	c03380        	sub	a3, a3, a8
4010074a:	120c      	movi.n	a2, 1
4010074c:	f87c      	movi.n	a8, -1
4010074e:	932830        	movnez	a2, a8, a3
                                DE += d;
40100751:	031c32        	l16ui	a3, a12, 6
40100754:	f42020        	extui	a2, a2, 0, 16
40100757:	323a      	add.n	a3, a2, a3
                                HL += d;
40100759:	227a      	add.n	a2, a2, a7
#endif

                                F = f;

                                d = opcode == OPCODE_LDI ? +1 : -1;
                                DE += d;
4010075b:	035c32        	s16i	a3, a12, 6
                                HL += d;
4010075e:	045c22        	s16i	a2, a12, 8

                                elapsed_cycles += 2;
40100761:	7fcb      	addi.n	a7, a15, 12
40100763:	06aa86        	j	40102211 <main+0x2119>
                                p = (pc - 2) & 0xffff;
                                q = (pc - 1) & 0xffff;

#endif                          

                                d = opcode == OPCODE_LDIR ? +1 : -1;
40100766:	b0a072        	movi	a7, 176
40100769:	c03370        	sub	a3, a3, a7
4010076c:	190c      	movi.n	a9, 1
4010076e:	f77c      	movi.n	a7, -1

                                f = F & SZC_FLAGS;
40100770:	0a0ca2        	l8ui	a10, a12, 10
                                p = (pc - 2) & 0xffff;
                                q = (pc - 1) & 0xffff;

#endif                          

                                d = opcode == OPCODE_LDIR ? +1 : -1;
40100773:	939730        	movnez	a9, a7, a3

                                f = F & SZC_FLAGS;
40100776:	c1a032        	movi	a3, 193
40100779:	10aa30        	and	a10, a10, a3
                                bc = BC;
                                de = DE;
4010077c:	031cb2        	l16ui	a11, a12, 6
                                hl = HL;
4010077f:	041c32        	l16ui	a3, a12, 8

                                r -= 2;
40100782:	227a      	add.n	a2, a2, a7
#endif                          

                                d = opcode == OPCODE_LDIR ? +1 : -1;

                                f = F & SZC_FLAGS;
                                bc = BC;
40100784:	021c82        	l16ui	a8, a12, 4
                                de = DE;
                                hl = HL;

                                r -= 2;
40100787:	0129      	s32i.n	a2, a1, 0
                                elapsed_cycles -= 8;
40100789:	fccf72        	addi	a7, a15, -4
4010078c:	c0bb30        	sub	a11, a11, a3
                                for ( ; ; ) {

                                        r += 2;
4010078f:	01e8      	l32i.n	a14, a1, 0

                                        Z80_READ_BYTE(hl, n);
40100791:	f42030        	extui	a2, a3, 0, 16

                                r -= 2;
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;
40100794:	ee2b      	addi.n	a14, a14, 2
40100796:	01e9      	s32i.n	a14, a1, 0

                                        Z80_READ_BYTE(hl, n);
40100798:	2c2a      	add.n	a2, a12, a2
4010079a:	eb3a      	add.n	a14, a11, a3
4010079c:	f40222        	l8ui	a2, a2, 244
                                        Z80_WRITE_BYTE(de, n);
4010079f:	f4e0e0        	extui	a14, a14, 0, 16
401007a2:	ecea      	add.n	a14, a12, a14

                                        hl += d;
401007a4:	339a      	add.n	a3, a3, a9
                                for ( ; ; ) {

                                        r += 2;

                                        Z80_READ_BYTE(hl, n);
                                        Z80_WRITE_BYTE(de, n);
401007a6:	f44e22        	s8i	a2, a14, 244

                                        hl += d;
                                        de += d;

                                        if (--bc) 
401007a9:	880b      	addi.n	a8, a8, -1
401007ab:	fb3a      	add.n	a15, a11, a3
401007ad:	b88c      	beqz.n	a8, 401007bc <main+0x6c4>

                                        }

#endif                                  

                                        if (elapsed_cycles < number_cycles) 
401007af:	11e8      	l32i.n	a14, a1, 4
                                        hl += d;
                                        de += d;

                                        if (--bc) 

                                                elapsed_cycles += 21;
401007b1:	15c772        	addi	a7, a7, 21

                                        }

#endif                                  

                                        if (elapsed_cycles < number_cycles) 
401007b4:	0aa7e7        	bge	a7, a14, 401007c2 <main+0x6ca>
401007b7:	fff506        	j	4010078f <main+0x697>
401007ba:	720000        	excw

                                                elapsed_cycles += 21;

                                        else {

                                                elapsed_cycles += 16;
401007bd:	c610c7        	beq	a0, a12, 40100787 <main+0x68f>
401007c0:	0c0001        	l32r	a0, 400c37c0 <memcpy+0xb5878>

                                                continue;

                                        else {
        
                                                f |= Z80_P_FLAG;
401007c3:	9049      	s32i.n	a4, a0, 36
401007c5:	20aa      	add.n	a2, a0, a10
                                                pc -= 2;
401007c7:	fecdd2        	addi	a13, a13, -2

                                        }

                                } 

                                HL = hl;
401007ca:	045c32        	s16i	a3, a12, 8
                                DE = de;
                                BC = bc;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
401007cd:	0b0c32        	l8ui	a3, a12, 11
                                f |= n & Z80_X_FLAG;
401007d0:	890c      	movi.n	a9, 8
                                DE = de;
                                BC = bc;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
401007d2:	223a      	add.n	a2, a2, a3
                                f |= n & Z80_X_FLAG;
401007d4:	109290        	and	a9, a2, a9
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
401007d7:	032c      	movi.n	a3, 32

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
                                f |= n & Z80_X_FLAG;
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
401007d9:	1122c0        	slli	a2, a2, 4
                                BC = bc;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
                                f |= n & Z80_X_FLAG;
401007dc:	20a9a0        	or	a10, a9, a10
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
401007df:	102230        	and	a2, a2, a3

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n += A;
                                f |= n & Z80_X_FLAG;
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
401007e2:	20aa20        	or	a10, a10, a2
                                        }

                                } 

                                HL = hl;
                                DE = de;
401007e5:	035cf2        	s16i	a15, a12, 6
                                BC = bc;
401007e8:	025c82        	s16i	a8, a12, 4
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;

#endif

                                F = f;
401007eb:	0a4ca2        	s8i	a10, a12, 10
401007ee:	0687c6        	j	40102211 <main+0x2119>
                        case CPI_CPD: {

                                int     a, n, z, f;

                                a = A;
                                READ_BYTE(HL, n);
401007f1:	041ca2        	l16ui	a10, a12, 8

                        case CPI_CPD: {

                                int     a, n, z, f;

                                a = A;
401007f4:	0b0c82        	l8ui	a8, a12, 11
                                READ_BYTE(HL, n);
401007f7:	2caa      	add.n	a2, a12, a10
401007f9:	f40292        	l8ui	a9, a2, 244
                                z = a - n;

                                HL += opcode == OPCODE_CPI ? +1 : -1;
401007fc:	a1a0b2        	movi	a11, 161
401007ff:	c033b0        	sub	a3, a3, a11
40100802:	fe10b1        	l32r	a11, 40100044 <_stext+0x44>

                                int     a, n, z, f;

                                a = A;
                                READ_BYTE(HL, n);
                                z = a - n;
40100805:	c02890        	sub	a2, a8, a9

                                HL += opcode == OPCODE_CPI ? +1 : -1;
40100808:	170c      	movi.n	a7, 1

                                f = (a ^ n ^ z) & Z80_H_FLAG;
4010080a:	308980        	xor	a8, a9, a8

                                a = A;
                                READ_BYTE(HL, n);
                                z = a - n;

                                HL += opcode == OPCODE_CPI ? +1 : -1;
4010080d:	937b30        	movnez	a7, a11, a3

                                f = (a ^ n ^ z) & Z80_H_FLAG;
40100810:	308820        	xor	a8, a8, a2
40100813:	031c      	movi.n	a3, 16

                                a = A;
                                READ_BYTE(HL, n);
                                z = a - n;

                                HL += opcode == OPCODE_CPI ? +1 : -1;
40100815:	77aa      	add.n	a7, a7, a10

                                f = (a ^ n ^ z) & Z80_H_FLAG;
40100817:	108830        	and	a8, a8, a3

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
4010081a:	213480        	srai	a3, a8, 4

                                a = A;
                                READ_BYTE(HL, n);
                                z = a - n;

                                HL += opcode == OPCODE_CPI ? +1 : -1;
4010081d:	045c72        	s16i	a7, a12, 8
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
40100820:	fe2371        	l32r	a7, 401000ac <_stext+0xac>

                                f = (a ^ n ^ z) & Z80_H_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
40100823:	c03230        	sub	a3, a2, a3
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
40100826:	742020        	extui	a2, a2, 0, 8
40100829:	272a      	add.n	a2, a7, a2
4010082b:	000272        	l8ui	a7, a2, 0
4010082e:	c0a022        	movi	a2, 192
40100831:	107720        	and	a7, a7, a2
#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;
40100834:	8a0c      	movi.n	a10, 8
                                f = (a ^ n ^ z) & Z80_H_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
40100836:	208780        	or	a8, a7, a8
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;
40100839:	10a3a0        	and	a10, a3, a10

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
4010083c:	022c      	movi.n	a2, 32
                                f = (a ^ n ^ z) & Z80_H_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
4010083e:	1133c0        	slli	a3, a3, 4
                                        & Z80_Y_FLAG;
40100841:	103320        	and	a3, a3, a2
                                f |= n & Z80_X_FLAG;
40100844:	2078a0        	or	a7, a8, a10

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
40100847:	208730        	or	a8, a7, a3
                                f |= --BC ? Z80_P_FLAG : 0;
4010084a:	021c32        	l16ui	a3, a12, 4
4010084d:	070c      	movi.n	a7, 0
4010084f:	330b      	addi.n	a3, a3, -1
40100851:	f43030        	extui	a3, a3, 0, 16
40100854:	420c      	movi.n	a2, 4
40100856:	832730        	moveqz	a2, a7, a3
                                F = f | Z80_N_FLAG | (F & Z80_C_FLAG);
40100859:	0a0c72        	l8ui	a7, a12, 10
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
                                f |= --BC ? Z80_P_FLAG : 0;
4010085c:	025c32        	s16i	a3, a12, 4
                                F = f | Z80_N_FLAG | (F & Z80_C_FLAG);
4010085f:	047070        	extui	a7, a7, 0, 1
40100862:	230c      	movi.n	a3, 2
40100864:	203730        	or	a3, a7, a3
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
                                f |= --BC ? Z80_P_FLAG : 0;
40100867:	202820        	or	a2, a8, a2
                                F = f | Z80_N_FLAG | (F & Z80_C_FLAG);
4010086a:	203320        	or	a3, a3, a2
4010086d:	0a4c32        	s8i	a3, a12, 10

                                elapsed_cycles += 5;
40100870:	7fcb      	addi.n	a7, a15, 12
40100872:	0666c6        	j	40102211 <main+0x2119>

                        case CPIR_CPDR: {
                                        
                                int     d, a, bc, hl, n, z, f;

                                d = opcode == OPCODE_CPIR ? +1 : -1;
40100875:	b1a072        	movi	a7, 177
40100878:	c03370        	sub	a3, a3, a7
4010087b:	190c      	movi.n	a9, 1
4010087d:	f77c      	movi.n	a7, -1
4010087f:	939730        	movnez	a9, a7, a3

                                a = A;
                                bc = BC;
                                hl = HL;

                                r -= 2;
40100882:	227a      	add.n	a2, a2, a7
                                        
                                int     d, a, bc, hl, n, z, f;

                                d = opcode == OPCODE_CPIR ? +1 : -1;

                                a = A;
40100884:	0b0ca2        	l8ui	a10, a12, 11
                                bc = BC;
40100887:	021c32        	l16ui	a3, a12, 4
                                hl = HL;
4010088a:	041c82        	l16ui	a8, a12, 8

                                r -= 2;
4010088d:	0129      	s32i.n	a2, a1, 0
                                elapsed_cycles -= 8;
4010088f:	fccf72        	addi	a7, a15, -4
                                for ( ; ; ) {

                                        r += 2;
40100892:	01b8      	l32i.n	a11, a1, 0

                                        Z80_READ_BYTE(hl, n);
40100894:	f42080        	extui	a2, a8, 0, 16

                                r -= 2;
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;
40100897:	bb2b      	addi.n	a11, a11, 2

                                        Z80_READ_BYTE(hl, n);
40100899:	2c2a      	add.n	a2, a12, a2

                                r -= 2;
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;
4010089b:	01b9      	s32i.n	a11, a1, 0

                                        Z80_READ_BYTE(hl, n);
4010089d:	f402b2        	l8ui	a11, a2, 244
                                        z = a - n;

                                        hl += d;
                                        if (--bc && z) 
401008a0:	330b      	addi.n	a3, a3, -1
                                for ( ; ; ) {

                                        r += 2;

                                        Z80_READ_BYTE(hl, n);
                                        z = a - n;
401008a2:	c02ab0        	sub	a2, a10, a11

                                        hl += d;
401008a5:	889a      	add.n	a8, a8, a9
                                        if (--bc && z) 
401008a7:	d38c      	beqz.n	a3, 401008b8 <main+0x7c0>
401008a9:	b28c      	beqz.n	a2, 401008b8 <main+0x7c0>
                                                elapsed_cycles += 16;
                                                break;

                                        } 

                                        if (elapsed_cycles < number_cycles) 
401008ab:	11e8      	l32i.n	a14, a1, 4
                                        z = a - n;

                                        hl += d;
                                        if (--bc && z) 

                                                elapsed_cycles += 21;
401008ad:	15c772        	addi	a7, a7, 21
                                                elapsed_cycles += 16;
                                                break;

                                        } 

                                        if (elapsed_cycles < number_cycles) 
401008b0:	0ca7e7        	bge	a7, a14, 401008c0 <main+0x7c8>
401008b3:	fff6c6        	j	40100892 <main+0x79a>
401008b6:	720000        	excw

                                                elapsed_cycles += 21;

                                        else {

                                                elapsed_cycles += 16;
401008b9:	0610c7        	beq	a0, a12, 401008c3 <main+0x7cb>
401008bc:	000001        	l32r	a0, 400c08bc <memcpy+0xb2974>
401008bf:	cdd200        	excw

                                                continue;

                                        else {
        
                                                pc -= 2;
401008c2:	fe          	.byte 0xfe
                                } 

                                HL = hl;
                                BC = bc;

                                f = (a ^ n ^ z) & Z80_H_FLAG;
401008c3:	30aba0        	xor	a10, a11, a10
401008c6:	30aa20        	xor	a10, a10, a2

                                        }

                                } 

                                HL = hl;
401008c9:	045c82        	s16i	a8, a12, 8
                                BC = bc;

                                f = (a ^ n ^ z) & Z80_H_FLAG;
401008cc:	081c      	movi.n	a8, 16
401008ce:	10aa80        	and	a10, a10, a8

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
401008d1:	2184a0        	srai	a8, a10, 4
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
401008d4:	fdf691        	l32r	a9, 401000ac <_stext+0xac>

                                f = (a ^ n ^ z) & Z80_H_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
401008d7:	c08280        	sub	a8, a2, a8
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
401008da:	742020        	extui	a2, a2, 0, 8
401008dd:	292a      	add.n	a2, a9, a2
401008df:	000292        	l8ui	a9, a2, 0
401008e2:	c0a022        	movi	a2, 192
401008e5:	102920        	and	a2, a9, a2
#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;
401008e8:	8e0c      	movi.n	a14, 8
                                f = (a ^ n ^ z) & Z80_H_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
401008ea:	20a2a0        	or	a10, a2, a10
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;
401008ed:	10e8e0        	and	a14, a8, a14

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
401008f0:	022c      	movi.n	a2, 32
                                f = (a ^ n ^ z) & Z80_H_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
401008f2:	1188c0        	slli	a8, a8, 4
                                        & Z80_Y_FLAG;
401008f5:	108820        	and	a8, a8, a2
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
                                f |= bc ? Z80_P_FLAG : 0;
401008f8:	4b0c      	movi.n	a11, 4
401008fa:	020c      	movi.n	a2, 0
401008fc:	83b230        	moveqz	a11, a2, a3
                                        }

                                } 

                                HL = hl;
                                BC = bc;
401008ff:	025c32        	s16i	a3, a12, 4

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
                                f |= bc ? Z80_P_FLAG : 0;
                                F = f | Z80_N_FLAG | (F & Z80_C_FLAG);
40100902:	0a0c32        	l8ui	a3, a12, 10
#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                n = z - (f >> Z80_H_FLAG_SHIFT);
                                f |= (n << (Z80_Y_FLAG_SHIFT - 1)) 
                                        & Z80_Y_FLAG;
                                f |= n & Z80_X_FLAG;
40100905:	20aae0        	or	a10, a10, a14

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
40100908:	208a80        	or	a8, a10, a8
                                f |= bc ? Z80_P_FLAG : 0;
                                F = f | Z80_N_FLAG | (F & Z80_C_FLAG);
4010090b:	043030        	extui	a3, a3, 0, 1
4010090e:	220c      	movi.n	a2, 2
40100910:	202320        	or	a2, a3, a2
                                f |= n & Z80_X_FLAG;

#endif

                                f |= SZYX_FLAGS_TABLE[z & 0xff] & SZ_FLAGS;
                                f |= bc ? Z80_P_FLAG : 0;
40100913:	20b8b0        	or	a11, a8, a11
                                F = f | Z80_N_FLAG | (F & Z80_C_FLAG);
40100916:	2022b0        	or	a2, a2, a11
40100919:	0a4c22        	s8i	a2, a12, 10
4010091c:	063c46        	j	40102211 <main+0x2119>

                        /* 8-bit arithmetic and logical group. */

                        case ADD_R: {

                                ADD(R(Z(opcode)));
4010091f:	243030        	extui	a3, a3, 0, 3
40100922:	a033e0        	addx4	a3, a3, a14
40100925:	0328      	l32i.n	a2, a3, 0
40100927:	0b0c82        	l8ui	a8, a12, 11
4010092a:	000232        	l8ui	a3, a2, 0
4010092d:	fddfa1        	l32r	a10, 401000ac <_stext+0xac>
40100930:	283a      	add.n	a2, a8, a3
40100932:	303380        	xor	a3, a3, a8
40100935:	303320        	xor	a3, a3, a2
40100938:	081c      	movi.n	a8, 16
4010093a:	108380        	and	a8, a3, a8
4010093d:	219820        	srai	a9, a2, 8
40100940:	208890        	or	a8, a8, a9
40100943:	749020        	extui	a9, a2, 0, 8
40100946:	9a9a      	add.n	a9, a10, a9
40100948:	000992        	l8ui	a9, a9, 0
4010094b:	213730        	srai	a3, a3, 7
4010094e:	208890        	or	a8, a8, a9
40100951:	fdd791        	l32r	a9, 401000b0 <_stext+0xb0>
40100954:	0b4c22        	s8i	a2, a12, 11
40100957:	a03390        	addx4	a3, a3, a9
4010095a:	0338      	l32i.n	a3, a3, 0
4010095c:	208830        	or	a8, a8, a3
4010095f:	0a4c82        	s8i	a8, a12, 10
40100962:	062ac6        	j	40102211 <main+0x2119>

                        case ADD_N: {

                                int     n;

                                READ_N(n);
40100965:	f420d0        	extui	a2, a13, 0, 16
40100968:	2c2a      	add.n	a2, a12, a2
                                ADD(n);
4010096a:	0b0c82        	l8ui	a8, a12, 11

                        case ADD_N: {

                                int     n;

                                READ_N(n);
4010096d:	f40232        	l8ui	a3, a2, 244
                                ADD(n);
40100970:	fdcfa1        	l32r	a10, 401000ac <_stext+0xac>
40100973:	283a      	add.n	a2, a8, a3
40100975:	303380        	xor	a3, a3, a8
40100978:	303320        	xor	a3, a3, a2
4010097b:	081c      	movi.n	a8, 16
4010097d:	108380        	and	a8, a3, a8
40100980:	219820        	srai	a9, a2, 8
40100983:	208890        	or	a8, a8, a9
40100986:	749020        	extui	a9, a2, 0, 8
40100989:	9a9a      	add.n	a9, a10, a9
4010098b:	000992        	l8ui	a9, a9, 0
4010098e:	213730        	srai	a3, a3, 7
40100991:	208890        	or	a8, a8, a9
40100994:	fdc791        	l32r	a9, 401000b0 <_stext+0xb0>

                        case ADD_N: {

                                int     n;

                                READ_N(n);
40100997:	dd1b      	addi.n	a13, a13, 1
                                ADD(n);
40100999:	a03390        	addx4	a3, a3, a9
4010099c:	0338      	l32i.n	a3, a3, 0

                        case ADD_N: {

                                int     n;

                                READ_N(n);
4010099e:	7f7b      	addi.n	a7, a15, 7
                                ADD(n);
401009a0:	208830        	or	a8, a8, a3
401009a3:	0b4c22        	s8i	a2, a12, 11
401009a6:	0a4c82        	s8i	a8, a12, 10
401009a9:	061906        	j	40102211 <main+0x2119>

                        case ADD_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
401009ac:	0c9e47        	bne	a14, a4, 401009bc <main+0x8c4>
401009af:	041c22        	l16ui	a2, a12, 8
401009b2:	7f7b      	addi.n	a7, a15, 7
401009b4:	2c2a      	add.n	a2, a12, a2
401009b6:	f40232        	l8ui	a3, a2, 244
401009b9:	000686        	j	401009d7 <main+0x8df>
401009bc:	f420d0        	extui	a2, a13, 0, 16
401009bf:	6e38      	l32i.n	a3, a14, 24
401009c1:	2c2a      	add.n	a2, a12, a2
401009c3:	001332        	l16ui	a3, a3, 0
401009c6:	f40222        	l8ui	a2, a2, 244
401009c9:	dd1b      	addi.n	a13, a13, 1
401009cb:	223a      	add.n	a2, a2, a3
401009cd:	f42020        	extui	a2, a2, 0, 16
401009d0:	2c2a      	add.n	a2, a12, a2
401009d2:	f40232        	l8ui	a3, a2, 244
401009d5:	7ffb      	addi.n	a7, a15, 15
                                ADD(x);
401009d7:	0b0c82        	l8ui	a8, a12, 11
401009da:	fdb4a1        	l32r	a10, 401000ac <_stext+0xac>
401009dd:	283a      	add.n	a2, a8, a3
401009df:	303380        	xor	a3, a3, a8
401009e2:	303320        	xor	a3, a3, a2
401009e5:	081c      	movi.n	a8, 16
401009e7:	108380        	and	a8, a3, a8
401009ea:	219820        	srai	a9, a2, 8
401009ed:	208890        	or	a8, a8, a9
401009f0:	749020        	extui	a9, a2, 0, 8
401009f3:	9a9a      	add.n	a9, a10, a9
401009f5:	000992        	l8ui	a9, a9, 0
401009f8:	213730        	srai	a3, a3, 7
401009fb:	208890        	or	a8, a8, a9
401009fe:	fdac91        	l32r	a9, 401000b0 <_stext+0xb0>
40100a01:	0b4c22        	s8i	a2, a12, 11
40100a04:	a03390        	addx4	a3, a3, a9
40100a07:	0338      	l32i.n	a3, a3, 0
40100a09:	208830        	or	a8, a8, a3
40100a0c:	0a4c82        	s8i	a8, a12, 10
40100a0f:	05ff86        	j	40102211 <main+0x2119>

                        }

                        case ADC_R: {

                                ADC(R(Z(opcode)));
40100a12:	243030        	extui	a3, a3, 0, 3
40100a15:	a033e0        	addx4	a3, a3, a14
40100a18:	0328      	l32i.n	a2, a3, 0
40100a1a:	0b0c82        	l8ui	a8, a12, 11
40100a1d:	000232        	l8ui	a3, a2, 0
40100a20:	0a0c22        	l8ui	a2, a12, 10
40100a23:	983a      	add.n	a9, a8, a3
40100a25:	042020        	extui	a2, a2, 0, 1
40100a28:	292a      	add.n	a2, a9, a2
40100a2a:	303380        	xor	a3, a3, a8
40100a2d:	303230        	xor	a3, a2, a3
40100a30:	081c      	movi.n	a8, 16
40100a32:	108380        	and	a8, a3, a8
40100a35:	219820        	srai	a9, a2, 8
40100a38:	fd9da1        	l32r	a10, 401000ac <_stext+0xac>
40100a3b:	208890        	or	a8, a8, a9
40100a3e:	749020        	extui	a9, a2, 0, 8
40100a41:	9a9a      	add.n	a9, a10, a9
40100a43:	000992        	l8ui	a9, a9, 0
40100a46:	213730        	srai	a3, a3, 7
40100a49:	208890        	or	a8, a8, a9
40100a4c:	fd9991        	l32r	a9, 401000b0 <_stext+0xb0>
40100a4f:	0b4c22        	s8i	a2, a12, 11
40100a52:	a03390        	addx4	a3, a3, a9
40100a55:	0338      	l32i.n	a3, a3, 0
40100a57:	208830        	or	a8, a8, a3
40100a5a:	0a4c82        	s8i	a8, a12, 10
40100a5d:	05ec06        	j	40102211 <main+0x2119>

                        case ADC_N: {

                                int     n;

                                READ_N(n);
40100a60:	f420d0        	extui	a2, a13, 0, 16
40100a63:	2c2a      	add.n	a2, a12, a2
40100a65:	f40282        	l8ui	a8, a2, 244
                                ADC(n);
40100a68:	0b0c32        	l8ui	a3, a12, 11
40100a6b:	0a0c22        	l8ui	a2, a12, 10
40100a6e:	938a      	add.n	a9, a3, a8
40100a70:	042020        	extui	a2, a2, 0, 1
40100a73:	292a      	add.n	a2, a9, a2
40100a75:	303830        	xor	a3, a8, a3
40100a78:	303230        	xor	a3, a2, a3
40100a7b:	081c      	movi.n	a8, 16
40100a7d:	108380        	and	a8, a3, a8
40100a80:	219820        	srai	a9, a2, 8
40100a83:	fd8aa1        	l32r	a10, 401000ac <_stext+0xac>
40100a86:	208890        	or	a8, a8, a9
40100a89:	749020        	extui	a9, a2, 0, 8
40100a8c:	9a9a      	add.n	a9, a10, a9
40100a8e:	000992        	l8ui	a9, a9, 0
40100a91:	213730        	srai	a3, a3, 7
40100a94:	208890        	or	a8, a8, a9
40100a97:	fd8691        	l32r	a9, 401000b0 <_stext+0xb0>

                        case ADC_N: {

                                int     n;

                                READ_N(n);
40100a9a:	dd1b      	addi.n	a13, a13, 1
                                ADC(n);
40100a9c:	a03390        	addx4	a3, a3, a9
40100a9f:	0338      	l32i.n	a3, a3, 0

                        case ADC_N: {

                                int     n;

                                READ_N(n);
40100aa1:	7f7b      	addi.n	a7, a15, 7
                                ADC(n);
40100aa3:	208830        	or	a8, a8, a3
40100aa6:	0b4c22        	s8i	a2, a12, 11
40100aa9:	0a4c82        	s8i	a8, a12, 10
40100aac:	05d846        	j	40102211 <main+0x2119>
40100aaf:	9e4700        	excw

                        case ADC_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100ab2:	220c      	movi.n	a2, 2
40100ab4:	041c      	movi.n	a4, 16
40100ab6:	7f7b      	addi.n	a7, a15, 7
40100ab8:	2c2a      	add.n	a2, a12, a2
40100aba:	f40232        	l8ui	a3, a2, 244
40100abd:	000686        	j	40100adb <main+0x9e3>
40100ac0:	f420d0        	extui	a2, a13, 0, 16
40100ac3:	6e38      	l32i.n	a3, a14, 24
40100ac5:	2c2a      	add.n	a2, a12, a2
40100ac7:	001332        	l16ui	a3, a3, 0
40100aca:	f40222        	l8ui	a2, a2, 244
40100acd:	dd1b      	addi.n	a13, a13, 1
40100acf:	223a      	add.n	a2, a2, a3
40100ad1:	f42020        	extui	a2, a2, 0, 16
40100ad4:	2c2a      	add.n	a2, a12, a2
40100ad6:	f40232        	l8ui	a3, a2, 244
40100ad9:	7ffb      	addi.n	a7, a15, 15
                                ADC(x);
40100adb:	0b0c82        	l8ui	a8, a12, 11
40100ade:	0a0c22        	l8ui	a2, a12, 10
40100ae1:	983a      	add.n	a9, a8, a3
40100ae3:	042020        	extui	a2, a2, 0, 1
40100ae6:	292a      	add.n	a2, a9, a2
40100ae8:	303380        	xor	a3, a3, a8
40100aeb:	303320        	xor	a3, a3, a2
40100aee:	081c      	movi.n	a8, 16
40100af0:	108380        	and	a8, a3, a8
40100af3:	219820        	srai	a9, a2, 8
40100af6:	fd6da1        	l32r	a10, 401000ac <_stext+0xac>
40100af9:	208890        	or	a8, a8, a9
40100afc:	749020        	extui	a9, a2, 0, 8
40100aff:	9a9a      	add.n	a9, a10, a9
40100b01:	000992        	l8ui	a9, a9, 0
40100b04:	213730        	srai	a3, a3, 7
40100b07:	208890        	or	a8, a8, a9
40100b0a:	fd6991        	l32r	a9, 401000b0 <_stext+0xb0>
40100b0d:	0b4c22        	s8i	a2, a12, 11
40100b10:	a03390        	addx4	a3, a3, a9
40100b13:	0338      	l32i.n	a3, a3, 0
40100b15:	208830        	or	a8, a8, a3
40100b18:	0a4c82        	s8i	a8, a12, 10
40100b1b:	05bc86        	j	40102211 <main+0x2119>

                        }

                        case SUB_R: {

                                SUB(R(Z(opcode)));
40100b1e:	243030        	extui	a3, a3, 0, 3
40100b21:	a033e0        	addx4	a3, a3, a14
40100b24:	0328      	l32i.n	a2, a3, 0
40100b26:	0b0c82        	l8ui	a8, a12, 11
40100b29:	000232        	l8ui	a3, a2, 0
40100b2c:	091c      	movi.n	a9, 16
40100b2e:	c02830        	sub	a2, a8, a3
40100b31:	308380        	xor	a8, a3, a8
40100b34:	308820        	xor	a8, a8, a2
40100b37:	80a132        	movi	a3, 0x180
40100b3a:	103830        	and	a3, a8, a3
40100b3d:	fd5ba1        	l32r	a10, 401000ac <_stext+0xac>
40100b40:	108890        	and	a8, a8, a9
40100b43:	290c      	movi.n	a9, 2
40100b45:	208890        	or	a8, a8, a9
40100b48:	749020        	extui	a9, a2, 0, 8
40100b4b:	9a9a      	add.n	a9, a10, a9
40100b4d:	000992        	l8ui	a9, a9, 0
40100b50:	0b4c22        	s8i	a2, a12, 11
40100b53:	208890        	or	a8, a8, a9
40100b56:	219830        	srai	a9, a3, 8
40100b59:	208890        	or	a8, a8, a9
40100b5c:	fd5591        	l32r	a9, 401000b0 <_stext+0xb0>
40100b5f:	413530        	srli	a3, a3, 5
40100b62:	393a      	add.n	a3, a9, a3
40100b64:	0338      	l32i.n	a3, a3, 0
40100b66:	208830        	or	a8, a8, a3
40100b69:	0a4c82        	s8i	a8, a12, 10
40100b6c:	05a846        	j	40102211 <main+0x2119>

                        case SUB_N: {

                                int     n;

                                READ_N(n);
40100b6f:	f420d0        	extui	a2, a13, 0, 16
40100b72:	2c2a      	add.n	a2, a12, a2
40100b74:	f40232        	l8ui	a3, a2, 244
                                SUB(n);
40100b77:	0b0c82        	l8ui	a8, a12, 11
40100b7a:	091c      	movi.n	a9, 16
40100b7c:	c02830        	sub	a2, a8, a3
40100b7f:	308380        	xor	a8, a3, a8
40100b82:	308820        	xor	a8, a8, a2
40100b85:	80a132        	movi	a3, 0x180
40100b88:	103830        	and	a3, a8, a3
40100b8b:	fd48a1        	l32r	a10, 401000ac <_stext+0xac>
40100b8e:	108890        	and	a8, a8, a9
40100b91:	290c      	movi.n	a9, 2
40100b93:	208890        	or	a8, a8, a9
40100b96:	749020        	extui	a9, a2, 0, 8
40100b99:	9a9a      	add.n	a9, a10, a9
40100b9b:	000992        	l8ui	a9, a9, 0

                        case SUB_N: {

                                int     n;

                                READ_N(n);
40100b9e:	dd1b      	addi.n	a13, a13, 1
                                SUB(n);
40100ba0:	208890        	or	a8, a8, a9
40100ba3:	219830        	srai	a9, a3, 8
40100ba6:	208890        	or	a8, a8, a9
40100ba9:	fd4191        	l32r	a9, 401000b0 <_stext+0xb0>
40100bac:	413530        	srli	a3, a3, 5
40100baf:	393a      	add.n	a3, a9, a3
40100bb1:	0338      	l32i.n	a3, a3, 0

                        case SUB_N: {

                                int     n;

                                READ_N(n);
40100bb3:	7f7b      	addi.n	a7, a15, 7
                                SUB(n);
40100bb5:	208830        	or	a8, a8, a3
40100bb8:	0b4c22        	s8i	a2, a12, 11
40100bbb:	0a4c82        	s8i	a8, a12, 10
40100bbe:	0593c6        	j	40102211 <main+0x2119>

                        case SUB_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100bc1:	0c9e47        	bne	a14, a4, 40100bd1 <main+0xad9>
40100bc4:	041c22        	l16ui	a2, a12, 8
40100bc7:	7f7b      	addi.n	a7, a15, 7
40100bc9:	2c2a      	add.n	a2, a12, a2
40100bcb:	f40232        	l8ui	a3, a2, 244
40100bce:	000686        	j	40100bec <main+0xaf4>
40100bd1:	f420d0        	extui	a2, a13, 0, 16
40100bd4:	6e38      	l32i.n	a3, a14, 24
40100bd6:	2c2a      	add.n	a2, a12, a2
40100bd8:	001332        	l16ui	a3, a3, 0
40100bdb:	f40222        	l8ui	a2, a2, 244
40100bde:	dd1b      	addi.n	a13, a13, 1
40100be0:	223a      	add.n	a2, a2, a3
40100be2:	f42020        	extui	a2, a2, 0, 16
40100be5:	2c2a      	add.n	a2, a12, a2
40100be7:	f40232        	l8ui	a3, a2, 244
40100bea:	7ffb      	addi.n	a7, a15, 15
                                SUB(x);
40100bec:	0b0c82        	l8ui	a8, a12, 11
40100bef:	091c      	movi.n	a9, 16
40100bf1:	c02830        	sub	a2, a8, a3
40100bf4:	308380        	xor	a8, a3, a8
40100bf7:	308820        	xor	a8, a8, a2
40100bfa:	80a132        	movi	a3, 0x180
40100bfd:	103830        	and	a3, a8, a3
40100c00:	fd2ba1        	l32r	a10, 401000ac <_stext+0xac>
40100c03:	108890        	and	a8, a8, a9
40100c06:	290c      	movi.n	a9, 2
40100c08:	208890        	or	a8, a8, a9
40100c0b:	749020        	extui	a9, a2, 0, 8
40100c0e:	9a9a      	add.n	a9, a10, a9
40100c10:	000992        	l8ui	a9, a9, 0
40100c13:	0b4c22        	s8i	a2, a12, 11
40100c16:	208890        	or	a8, a8, a9
40100c19:	219830        	srai	a9, a3, 8
40100c1c:	208890        	or	a8, a8, a9
40100c1f:	fd2491        	l32r	a9, 401000b0 <_stext+0xb0>
40100c22:	413530        	srli	a3, a3, 5
40100c25:	393a      	add.n	a3, a9, a3
40100c27:	0338      	l32i.n	a3, a3, 0
40100c29:	208830        	or	a8, a8, a3
40100c2c:	0a4c82        	s8i	a8, a12, 10
40100c2f:	057786        	j	40102211 <main+0x2119>

                        }

                        case SBC_R: {

                                SBC(R(Z(opcode)));
40100c32:	fd0b21        	l32r	a2, 40100060 <_stext+0x60>
40100c35:	243030        	extui	a3, a3, 0, 3
40100c38:	a033e0        	addx4	a3, a3, a14
40100c3b:	0b0282        	l8ui	a8, a2, 11
40100c3e:	fd08a1        	l32r	a10, 40100060 <_stext+0x60>
40100c41:	0328      	l32i.n	a2, a3, 0
40100c43:	fd07b1        	l32r	a11, 40100060 <_stext+0x60>
40100c46:	000232        	l8ui	a3, a2, 0
40100c49:	0a0a22        	l8ui	a2, a10, 10
40100c4c:	c09830        	sub	a9, a8, a3
40100c4f:	042020        	extui	a2, a2, 0, 1
40100c52:	c02920        	sub	a2, a9, a2
40100c55:	308380        	xor	a8, a3, a8
40100c58:	308280        	xor	a8, a2, a8
40100c5b:	091c      	movi.n	a9, 16
40100c5d:	80a132        	movi	a3, 0x180
40100c60:	103830        	and	a3, a8, a3
40100c63:	fd12a1        	l32r	a10, 401000ac <_stext+0xac>
40100c66:	108890        	and	a8, a8, a9
40100c69:	290c      	movi.n	a9, 2
40100c6b:	208890        	or	a8, a8, a9
40100c6e:	749020        	extui	a9, a2, 0, 8
40100c71:	9a9a      	add.n	a9, a10, a9
40100c73:	000992        	l8ui	a9, a9, 0
40100c76:	0b4b22        	s8i	a2, a11, 11
40100c79:	208890        	or	a8, a8, a9
40100c7c:	219830        	srai	a9, a3, 8
40100c7f:	208890        	or	a8, a8, a9
40100c82:	fd0b91        	l32r	a9, 401000b0 <_stext+0xb0>
40100c85:	413530        	srli	a3, a3, 5
40100c88:	393a      	add.n	a3, a9, a3
40100c8a:	0338      	l32i.n	a3, a3, 0
40100c8c:	208830        	or	a8, a8, a3
40100c8f:	0a4b82        	s8i	a8, a11, 10
40100c92:	055ec6        	j	40102211 <main+0x2119>

                        case SBC_N: {

                                int     n;

                                READ_N(n);
40100c95:	fcf2e1        	l32r	a14, 40100060 <_stext+0x60>
40100c98:	f420d0        	extui	a2, a13, 0, 16
40100c9b:	2e2a      	add.n	a2, a14, a2
                                SBC(n);
40100c9d:	0b0e32        	l8ui	a3, a14, 11

                        case SBC_N: {

                                int     n;

                                READ_N(n);
40100ca0:	f40282        	l8ui	a8, a2, 244
                                SBC(n);
40100ca3:	0a0e22        	l8ui	a2, a14, 10
40100ca6:	c09380        	sub	a9, a3, a8
40100ca9:	042020        	extui	a2, a2, 0, 1
40100cac:	c02920        	sub	a2, a9, a2
40100caf:	308830        	xor	a8, a8, a3
40100cb2:	308280        	xor	a8, a2, a8
40100cb5:	091c      	movi.n	a9, 16
40100cb7:	80a132        	movi	a3, 0x180
40100cba:	103830        	and	a3, a8, a3
40100cbd:	fcfba1        	l32r	a10, 401000ac <_stext+0xac>
40100cc0:	108890        	and	a8, a8, a9
40100cc3:	290c      	movi.n	a9, 2
40100cc5:	208890        	or	a8, a8, a9
40100cc8:	749020        	extui	a9, a2, 0, 8
40100ccb:	9a9a      	add.n	a9, a10, a9
40100ccd:	000992        	l8ui	a9, a9, 0

                        case SBC_N: {

                                int     n;

                                READ_N(n);
40100cd0:	dd1b      	addi.n	a13, a13, 1
                                SBC(n);
40100cd2:	208890        	or	a8, a8, a9
40100cd5:	219830        	srai	a9, a3, 8
40100cd8:	208890        	or	a8, a8, a9
40100cdb:	fcf591        	l32r	a9, 401000b0 <_stext+0xb0>
40100cde:	413530        	srli	a3, a3, 5
40100ce1:	393a      	add.n	a3, a9, a3
40100ce3:	0338      	l32i.n	a3, a3, 0

                        case SBC_N: {

                                int     n;

                                READ_N(n);
40100ce5:	7f7b      	addi.n	a7, a15, 7
                                SBC(n);
40100ce7:	208830        	or	a8, a8, a3
40100cea:	0b4e22        	s8i	a2, a14, 11
40100ced:	0a4e82        	s8i	a8, a14, 10
40100cf0:	054746        	j	40102211 <main+0x2119>
40100cf3:	9e4700        	excw

                        case SBC_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100cf6:	220c      	movi.n	a2, 2
40100cf8:	041c      	movi.n	a4, 16
40100cfa:	7f7b      	addi.n	a7, a15, 7
40100cfc:	2c2a      	add.n	a2, a12, a2
40100cfe:	f40232        	l8ui	a3, a2, 244
40100d01:	000686        	j	40100d1f <main+0xc27>
40100d04:	f420d0        	extui	a2, a13, 0, 16
40100d07:	6e38      	l32i.n	a3, a14, 24
40100d09:	2c2a      	add.n	a2, a12, a2
40100d0b:	001332        	l16ui	a3, a3, 0
40100d0e:	f40222        	l8ui	a2, a2, 244
40100d11:	dd1b      	addi.n	a13, a13, 1
40100d13:	223a      	add.n	a2, a2, a3
40100d15:	f42020        	extui	a2, a2, 0, 16
40100d18:	2c2a      	add.n	a2, a12, a2
40100d1a:	f40232        	l8ui	a3, a2, 244
40100d1d:	7ffb      	addi.n	a7, a15, 15
                                SBC(x);
40100d1f:	0b0c82        	l8ui	a8, a12, 11
40100d22:	0a0c22        	l8ui	a2, a12, 10
40100d25:	c09830        	sub	a9, a8, a3
40100d28:	042020        	extui	a2, a2, 0, 1
40100d2b:	c02920        	sub	a2, a9, a2
40100d2e:	308380        	xor	a8, a3, a8
40100d31:	308820        	xor	a8, a8, a2
40100d34:	091c      	movi.n	a9, 16
40100d36:	80a132        	movi	a3, 0x180
40100d39:	103830        	and	a3, a8, a3
40100d3c:	fcdca1        	l32r	a10, 401000ac <_stext+0xac>
40100d3f:	108890        	and	a8, a8, a9
40100d42:	290c      	movi.n	a9, 2
40100d44:	208890        	or	a8, a8, a9
40100d47:	749020        	extui	a9, a2, 0, 8
40100d4a:	9a9a      	add.n	a9, a10, a9
40100d4c:	000992        	l8ui	a9, a9, 0
40100d4f:	0b4c22        	s8i	a2, a12, 11
40100d52:	208890        	or	a8, a8, a9
40100d55:	219830        	srai	a9, a3, 8
40100d58:	208890        	or	a8, a8, a9
40100d5b:	fcd591        	l32r	a9, 401000b0 <_stext+0xb0>
40100d5e:	413530        	srli	a3, a3, 5
40100d61:	393a      	add.n	a3, a9, a3
40100d63:	0338      	l32i.n	a3, a3, 0
40100d65:	208830        	or	a8, a8, a3
40100d68:	0a4c82        	s8i	a8, a12, 10
40100d6b:	052886        	j	40102211 <main+0x2119>

                        }

                        case AND_R: {

                                AND(R(Z(opcode)));
40100d6e:	243030        	extui	a3, a3, 0, 3
40100d71:	a0e3e0        	addx4	a14, a3, a14
40100d74:	0e38      	l32i.n	a3, a14, 0
40100d76:	0b0c22        	l8ui	a2, a12, 11
40100d79:	000332        	l8ui	a3, a3, 0
40100d7c:	102320        	and	a2, a3, a2
40100d7f:	fccd31        	l32r	a3, 401000b4 <_stext+0xb4>
40100d82:	0b4c22        	s8i	a2, a12, 11
40100d85:	232a      	add.n	a2, a3, a2
40100d87:	000232        	l8ui	a3, a2, 0
40100d8a:	021c      	movi.n	a2, 16
40100d8c:	202320        	or	a2, a3, a2
40100d8f:	0a4c22        	s8i	a2, a12, 10
40100d92:	051ec6        	j	40102211 <main+0x2119>

                        case AND_N: {

                                int     n;

                                READ_N(n);
40100d95:	f420d0        	extui	a2, a13, 0, 16
40100d98:	2c2a      	add.n	a2, a12, a2
                                AND(n);
40100d9a:	0b0c32        	l8ui	a3, a12, 11

                        case AND_N: {

                                int     n;

                                READ_N(n);
40100d9d:	f40222        	l8ui	a2, a2, 244
40100da0:	dd1b      	addi.n	a13, a13, 1
                                AND(n);
40100da2:	102230        	and	a2, a2, a3
40100da5:	fcc331        	l32r	a3, 401000b4 <_stext+0xb4>
40100da8:	0b4c22        	s8i	a2, a12, 11
40100dab:	232a      	add.n	a2, a3, a2
40100dad:	000232        	l8ui	a3, a2, 0
40100db0:	021c      	movi.n	a2, 16
40100db2:	202320        	or	a2, a3, a2

                        case AND_N: {

                                int     n;

                                READ_N(n);
40100db5:	7f7b      	addi.n	a7, a15, 7
                                AND(n);
40100db7:	0a4c22        	s8i	a2, a12, 10
40100dba:	0514c6        	j	40102211 <main+0x2119>

                        case AND_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100dbd:	0c9e47        	bne	a14, a4, 40100dcd <main+0xcd5>
40100dc0:	041c22        	l16ui	a2, a12, 8
40100dc3:	7f7b      	addi.n	a7, a15, 7
40100dc5:	2c2a      	add.n	a2, a12, a2
40100dc7:	f40222        	l8ui	a2, a2, 244
40100dca:	000686        	j	40100de8 <main+0xcf0>
40100dcd:	f420d0        	extui	a2, a13, 0, 16
40100dd0:	6e38      	l32i.n	a3, a14, 24
40100dd2:	2c2a      	add.n	a2, a12, a2
40100dd4:	f40222        	l8ui	a2, a2, 244
40100dd7:	001332        	l16ui	a3, a3, 0
40100dda:	dd1b      	addi.n	a13, a13, 1
40100ddc:	223a      	add.n	a2, a2, a3
40100dde:	f42020        	extui	a2, a2, 0, 16
40100de1:	2c2a      	add.n	a2, a12, a2
40100de3:	f40222        	l8ui	a2, a2, 244
40100de6:	7ffb      	addi.n	a7, a15, 15
                                AND(x);
40100de8:	0b0c32        	l8ui	a3, a12, 11
40100deb:	102230        	and	a2, a2, a3
40100dee:	fcb131        	l32r	a3, 401000b4 <_stext+0xb4>
40100df1:	0b4c22        	s8i	a2, a12, 11
40100df4:	232a      	add.n	a2, a3, a2
40100df6:	000232        	l8ui	a3, a2, 0
40100df9:	021c      	movi.n	a2, 16
40100dfb:	202320        	or	a2, a3, a2
40100dfe:	0a4c22        	s8i	a2, a12, 10
40100e01:	050306        	j	40102211 <main+0x2119>

                        }

                        case OR_R: {

                                OR(R(Z(opcode)));
40100e04:	243030        	extui	a3, a3, 0, 3
40100e07:	a0e3e0        	addx4	a14, a3, a14
40100e0a:	0e28      	l32i.n	a2, a14, 0
40100e0c:	000232        	l8ui	a3, a2, 0
40100e0f:	0b0c22        	l8ui	a2, a12, 11
40100e12:	202320        	or	a2, a3, a2
40100e15:	fca731        	l32r	a3, 401000b4 <_stext+0xb4>
40100e18:	742020        	extui	a2, a2, 0, 8
40100e1b:	0b4c22        	s8i	a2, a12, 11
40100e1e:	232a      	add.n	a2, a3, a2
40100e20:	000222        	l8ui	a2, a2, 0
40100e23:	0a4c22        	s8i	a2, a12, 10
40100e26:	04f9c6        	j	40102211 <main+0x2119>

                        case OR_N: {

                                int     n;

                                READ_N(n);
40100e29:	f420d0        	extui	a2, a13, 0, 16
40100e2c:	2c2a      	add.n	a2, a12, a2
                                OR(n);
40100e2e:	0b0c32        	l8ui	a3, a12, 11

                        case OR_N: {

                                int     n;

                                READ_N(n);
40100e31:	f40222        	l8ui	a2, a2, 244
40100e34:	dd1b      	addi.n	a13, a13, 1
                                OR(n);
40100e36:	202230        	or	a2, a2, a3
40100e39:	fc9e31        	l32r	a3, 401000b4 <_stext+0xb4>
40100e3c:	0b4c22        	s8i	a2, a12, 11
40100e3f:	232a      	add.n	a2, a3, a2
40100e41:	000222        	l8ui	a2, a2, 0

                        case OR_N: {

                                int     n;

                                READ_N(n);
40100e44:	7f7b      	addi.n	a7, a15, 7
                                OR(n);
40100e46:	0a4c22        	s8i	a2, a12, 10
40100e49:	04f106        	j	40102211 <main+0x2119>

                        case OR_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100e4c:	0c9e47        	bne	a14, a4, 40100e5c <main+0xd64>
40100e4f:	041c22        	l16ui	a2, a12, 8
40100e52:	7f7b      	addi.n	a7, a15, 7
40100e54:	2c2a      	add.n	a2, a12, a2
40100e56:	f40222        	l8ui	a2, a2, 244
40100e59:	000686        	j	40100e77 <main+0xd7f>
40100e5c:	f420d0        	extui	a2, a13, 0, 16
40100e5f:	6e38      	l32i.n	a3, a14, 24
40100e61:	2c2a      	add.n	a2, a12, a2
40100e63:	f40222        	l8ui	a2, a2, 244
40100e66:	001332        	l16ui	a3, a3, 0
40100e69:	dd1b      	addi.n	a13, a13, 1
40100e6b:	223a      	add.n	a2, a2, a3
40100e6d:	f42020        	extui	a2, a2, 0, 16
40100e70:	2c2a      	add.n	a2, a12, a2
40100e72:	f40222        	l8ui	a2, a2, 244
40100e75:	7ffb      	addi.n	a7, a15, 15
                                OR(x);
40100e77:	0b0c32        	l8ui	a3, a12, 11
40100e7a:	202230        	or	a2, a2, a3
40100e7d:	fc8d31        	l32r	a3, 401000b4 <_stext+0xb4>
40100e80:	0b4c22        	s8i	a2, a12, 11
40100e83:	232a      	add.n	a2, a3, a2
40100e85:	000222        	l8ui	a2, a2, 0
40100e88:	0a4c22        	s8i	a2, a12, 10
40100e8b:	04e086        	j	40102211 <main+0x2119>

                        }

                        case XOR_R: {

                                XOR(R(Z(opcode)));
40100e8e:	243030        	extui	a3, a3, 0, 3
40100e91:	a0e3e0        	addx4	a14, a3, a14
40100e94:	0e28      	l32i.n	a2, a14, 0
40100e96:	000232        	l8ui	a3, a2, 0
40100e99:	0b0c22        	l8ui	a2, a12, 11
40100e9c:	302320        	xor	a2, a3, a2
40100e9f:	fc8531        	l32r	a3, 401000b4 <_stext+0xb4>
40100ea2:	742020        	extui	a2, a2, 0, 8
40100ea5:	0b4c22        	s8i	a2, a12, 11
40100ea8:	232a      	add.n	a2, a3, a2
40100eaa:	000222        	l8ui	a2, a2, 0
40100ead:	0a4c22        	s8i	a2, a12, 10
40100eb0:	04d746        	j	40102211 <main+0x2119>

                        case XOR_N: {

                                int     n;

                                READ_N(n);
40100eb3:	f420d0        	extui	a2, a13, 0, 16
40100eb6:	2c2a      	add.n	a2, a12, a2
                                XOR(n);
40100eb8:	0b0c32        	l8ui	a3, a12, 11

                        case XOR_N: {

                                int     n;

                                READ_N(n);
40100ebb:	f40222        	l8ui	a2, a2, 244
40100ebe:	dd1b      	addi.n	a13, a13, 1
                                XOR(n);
40100ec0:	302230        	xor	a2, a2, a3
40100ec3:	fc7c31        	l32r	a3, 401000b4 <_stext+0xb4>
40100ec6:	0b4c22        	s8i	a2, a12, 11
40100ec9:	232a      	add.n	a2, a3, a2
40100ecb:	000222        	l8ui	a2, a2, 0

                        case XOR_N: {

                                int     n;

                                READ_N(n);
40100ece:	7f7b      	addi.n	a7, a15, 7
                                XOR(n);
40100ed0:	0a4c22        	s8i	a2, a12, 10
40100ed3:	04ce86        	j	40102211 <main+0x2119>
40100ed6:	470000        	excw

                        case XOR_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100ed9:	9e          	.byte 0x9e
40100eda:	220c      	movi.n	a2, 2
40100edc:	041c      	movi.n	a4, 16
40100ede:	7f7b      	addi.n	a7, a15, 7
40100ee0:	2c2a      	add.n	a2, a12, a2
40100ee2:	f40222        	l8ui	a2, a2, 244
40100ee5:	000686        	j	40100f03 <main+0xe0b>
40100ee8:	f420d0        	extui	a2, a13, 0, 16
40100eeb:	6e38      	l32i.n	a3, a14, 24
40100eed:	2c2a      	add.n	a2, a12, a2
40100eef:	f40222        	l8ui	a2, a2, 244
40100ef2:	001332        	l16ui	a3, a3, 0
40100ef5:	dd1b      	addi.n	a13, a13, 1
40100ef7:	223a      	add.n	a2, a2, a3
40100ef9:	f42020        	extui	a2, a2, 0, 16
40100efc:	2c2a      	add.n	a2, a12, a2
40100efe:	f40222        	l8ui	a2, a2, 244
40100f01:	7ffb      	addi.n	a7, a15, 15
                                XOR(x);
40100f03:	0b0c32        	l8ui	a3, a12, 11
40100f06:	302230        	xor	a2, a2, a3
40100f09:	fc6a31        	l32r	a3, 401000b4 <_stext+0xb4>
40100f0c:	0b4c22        	s8i	a2, a12, 11
40100f0f:	232a      	add.n	a2, a3, a2
40100f11:	000222        	l8ui	a2, a2, 0
40100f14:	0a4c22        	s8i	a2, a12, 10
40100f17:	04bd86        	j	40102211 <main+0x2119>

                        }

                        case CP_R: {

                                CP(R(Z(opcode)));
40100f1a:	fc5121        	l32r	a2, 40100060 <_stext+0x60>
40100f1d:	243030        	extui	a3, a3, 0, 3
40100f20:	a033e0        	addx4	a3, a3, a14
40100f23:	0b0292        	l8ui	a9, a2, 11
40100f26:	0328      	l32i.n	a2, a3, 0
40100f28:	8a2c      	movi.n	a10, 40
40100f2a:	000222        	l8ui	a2, a2, 0
40100f2d:	80a132        	movi	a3, 0x180
40100f30:	c08920        	sub	a8, a9, a2
40100f33:	309290        	xor	a9, a2, a9
40100f36:	1022a0        	and	a2, a2, a10
40100f39:	2a0c      	movi.n	a10, 2
40100f3b:	309980        	xor	a9, a9, a8
40100f3e:	2022a0        	or	a2, a2, a10
40100f41:	0a1c      	movi.n	a10, 16
40100f43:	103930        	and	a3, a9, a3
40100f46:	1099a0        	and	a9, a9, a10
40100f49:	202920        	or	a2, a9, a2
40100f4c:	fc5891        	l32r	a9, 401000ac <_stext+0xac>
40100f4f:	748080        	extui	a8, a8, 0, 8
40100f52:	898a      	add.n	a8, a9, a8
40100f54:	000892        	l8ui	a9, a8, 0
40100f57:	21b830        	srai	a11, a3, 8
40100f5a:	c0a082        	movi	a8, 192
40100f5d:	108980        	and	a8, a9, a8
40100f60:	2022b0        	or	a2, a2, a11
40100f63:	202280        	or	a2, a2, a8
40100f66:	fc5281        	l32r	a8, 401000b0 <_stext+0xb0>
40100f69:	413530        	srli	a3, a3, 5
40100f6c:	383a      	add.n	a3, a8, a3
40100f6e:	0388      	l32i.n	a8, a3, 0
40100f70:	fc3c31        	l32r	a3, 40100060 <_stext+0x60>
40100f73:	202280        	or	a2, a2, a8
40100f76:	0a4322        	s8i	a2, a3, 10
40100f79:	04a506        	j	40102211 <main+0x2119>

                        case CP_N: {

                                int     n;

                                READ_N(n);
40100f7c:	fc3971        	l32r	a7, 40100060 <_stext+0x60>
40100f7f:	f420d0        	extui	a2, a13, 0, 16
                                CP(n);
40100f82:	fc3781        	l32r	a8, 40100060 <_stext+0x60>

                        case CP_N: {

                                int     n;

                                READ_N(n);
40100f85:	272a      	add.n	a2, a7, a2
40100f87:	f40222        	l8ui	a2, a2, 244
                                CP(n);
40100f8a:	0b0892        	l8ui	a9, a8, 11
40100f8d:	8a2c      	movi.n	a10, 40
40100f8f:	c08920        	sub	a8, a9, a2
40100f92:	309290        	xor	a9, a2, a9
40100f95:	1022a0        	and	a2, a2, a10
40100f98:	2a0c      	movi.n	a10, 2
40100f9a:	309980        	xor	a9, a9, a8
40100f9d:	2022a0        	or	a2, a2, a10
40100fa0:	80a132        	movi	a3, 0x180
40100fa3:	0a1c      	movi.n	a10, 16
40100fa5:	103930        	and	a3, a9, a3
40100fa8:	1099a0        	and	a9, a9, a10
40100fab:	202920        	or	a2, a9, a2
40100fae:	fc3f91        	l32r	a9, 401000ac <_stext+0xac>
40100fb1:	748080        	extui	a8, a8, 0, 8
40100fb4:	898a      	add.n	a8, a9, a8
40100fb6:	000892        	l8ui	a9, a8, 0
40100fb9:	21b830        	srai	a11, a3, 8
40100fbc:	c0a082        	movi	a8, 192
40100fbf:	108980        	and	a8, a9, a8
40100fc2:	2022b0        	or	a2, a2, a11
40100fc5:	202280        	or	a2, a2, a8
40100fc8:	fc3a81        	l32r	a8, 401000b0 <_stext+0xb0>
40100fcb:	413530        	srli	a3, a3, 5
40100fce:	383a      	add.n	a3, a8, a3
40100fd0:	0388      	l32i.n	a8, a3, 0
40100fd2:	fc2391        	l32r	a9, 40100060 <_stext+0x60>
40100fd5:	202280        	or	a2, a2, a8

                        case CP_N: {

                                int     n;

                                READ_N(n);
40100fd8:	dd1b      	addi.n	a13, a13, 1
40100fda:	7f7b      	addi.n	a7, a15, 7
                                CP(n);
40100fdc:	0a4922        	s8i	a2, a9, 10
40100fdf:	048b86        	j	40102211 <main+0x2119>
40100fe2:	470000        	excw

                        case CP_INDIRECT_HL: {

                                int     x;

                                READ_INDIRECT_HL(x);
40100fe5:	9e          	.byte 0x9e
40100fe6:	220c      	movi.n	a2, 2
40100fe8:	041c      	movi.n	a4, 16
40100fea:	7f7b      	addi.n	a7, a15, 7
40100fec:	2c2a      	add.n	a2, a12, a2
40100fee:	f40222        	l8ui	a2, a2, 244
40100ff1:	000686        	j	4010100f <main+0xf17>
40100ff4:	f420d0        	extui	a2, a13, 0, 16
40100ff7:	6e38      	l32i.n	a3, a14, 24
40100ff9:	2c2a      	add.n	a2, a12, a2
40100ffb:	f40222        	l8ui	a2, a2, 244
40100ffe:	001332        	l16ui	a3, a3, 0
40101001:	dd1b      	addi.n	a13, a13, 1
40101003:	223a      	add.n	a2, a2, a3
40101005:	f42020        	extui	a2, a2, 0, 16
40101008:	2c2a      	add.n	a2, a12, a2
4010100a:	f40222        	l8ui	a2, a2, 244
4010100d:	7ffb      	addi.n	a7, a15, 15
                                CP(x);
4010100f:	0b0c92        	l8ui	a9, a12, 11
40101012:	8a2c      	movi.n	a10, 40
40101014:	c08920        	sub	a8, a9, a2
40101017:	309290        	xor	a9, a2, a9
4010101a:	1022a0        	and	a2, a2, a10
4010101d:	2a0c      	movi.n	a10, 2
4010101f:	309980        	xor	a9, a9, a8
40101022:	2022a0        	or	a2, a2, a10
40101025:	80a132        	movi	a3, 0x180
40101028:	0a1c      	movi.n	a10, 16
4010102a:	103930        	and	a3, a9, a3
4010102d:	1099a0        	and	a9, a9, a10
40101030:	202290        	or	a2, a2, a9
40101033:	fc1e91        	l32r	a9, 401000ac <_stext+0xac>
40101036:	748080        	extui	a8, a8, 0, 8
40101039:	898a      	add.n	a8, a9, a8
4010103b:	000892        	l8ui	a9, a8, 0
4010103e:	21b830        	srai	a11, a3, 8
40101041:	c0a082        	movi	a8, 192
40101044:	108980        	and	a8, a9, a8
40101047:	2022b0        	or	a2, a2, a11
4010104a:	202280        	or	a2, a2, a8
4010104d:	fc1881        	l32r	a8, 401000b0 <_stext+0xb0>
40101050:	413530        	srli	a3, a3, 5
40101053:	383a      	add.n	a3, a8, a3
40101055:	0388      	l32i.n	a8, a3, 0
40101057:	202280        	or	a2, a2, a8
4010105a:	0a4c22        	s8i	a2, a12, 10
4010105d:	046c06        	j	40102211 <main+0x2119>

                        }

                        case INC_R: {

                                INC(R(Y(opcode)));
40101060:	243330        	extui	a3, a3, 3, 3
40101063:	a0e3e0        	addx4	a14, a3, a14
40101066:	0e38      	l32i.n	a3, a14, 0
40101068:	0a0ca2        	l8ui	a10, a12, 10
4010106b:	000382        	l8ui	a8, a3, 0
4010106e:	091c      	movi.n	a9, 16
40101070:	281b      	addi.n	a2, a8, 1
40101072:	308280        	xor	a8, a2, a8
40101075:	04a0a0        	extui	a10, a10, 0, 1
40101078:	109890        	and	a9, a8, a9
4010107b:	fc0cb1        	l32r	a11, 401000ac <_stext+0xac>
4010107e:	2099a0        	or	a9, a9, a10
40101081:	74a020        	extui	a10, a2, 0, 8
40101084:	abaa      	add.n	a10, a11, a10
40101086:	000aa2        	l8ui	a10, a10, 0
40101089:	218780        	srai	a8, a8, 7
4010108c:	2099a0        	or	a9, a9, a10
4010108f:	fc08a1        	l32r	a10, 401000b0 <_stext+0xb0>
40101092:	004322        	s8i	a2, a3, 0
40101095:	a088a0        	addx4	a8, a8, a10
40101098:	0888      	l32i.n	a8, a8, 0
4010109a:	209980        	or	a9, a9, a8
4010109d:	0a4c92        	s8i	a9, a12, 10
401010a0:	045b46        	j	40102211 <main+0x2119>
401010a3:	f0a022        	movi	a2, 240
401010a6:	fc0191        	l32r	a9, 401000ac <_stext+0xac>
401010a9:	fc0171        	l32r	a7, 401000b0 <_stext+0xb0>

                        case INC_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
401010ac:	3d9e47        	bne	a14, a4, 401010ed <main+0xff5>

                                        READ_BYTE(HL, x);
401010af:	041c32        	l16ui	a3, a12, 8
                                        INC(x);
401010b2:	0a0cb2        	l8ui	a11, a12, 10

                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
401010b5:	3c3a      	add.n	a3, a12, a3
401010b7:	332a      	add.n	a3, a3, a2
401010b9:	040382        	l8ui	a8, a3, 4
                                        INC(x);
401010bc:	0a1c      	movi.n	a10, 16
401010be:	281b      	addi.n	a2, a8, 1
401010c0:	308280        	xor	a8, a2, a8
401010c3:	04b0b0        	extui	a11, a11, 0, 1
401010c6:	10a8a0        	and	a10, a8, a10
401010c9:	20aab0        	or	a10, a10, a11
401010cc:	74b020        	extui	a11, a2, 0, 8
401010cf:	99ba      	add.n	a9, a9, a11
401010d1:	000992        	l8ui	a9, a9, 0
401010d4:	218780        	srai	a8, a8, 7
401010d7:	a08870        	addx4	a8, a8, a7
401010da:	20aa90        	or	a10, a10, a9
401010dd:	0898      	l32i.n	a9, a8, 0
                                        WRITE_BYTE(HL, x);
401010df:	044322        	s8i	a2, a3, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        INC(x);
401010e2:	20aa90        	or	a10, a10, a9
401010e5:	0a4ca2        	s8i	a10, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
401010e8:	7fbb      	addi.n	a7, a15, 11
401010ea:	0448c6        	j	40102211 <main+0x2119>

                                } else {

                                        int     d;

                                        READ_D(d);
401010ed:	f430d0        	extui	a3, a13, 0, 16
                                        d += HL_IX_IY;
401010f0:	6e88      	l32i.n	a8, a14, 24

                                } else {

                                        int     d;

                                        READ_D(d);
401010f2:	3c3a      	add.n	a3, a12, a3
                                        d += HL_IX_IY;
401010f4:	001882        	l16ui	a8, a8, 0

                                } else {

                                        int     d;

                                        READ_D(d);
401010f7:	f40332        	l8ui	a3, a3, 244
                                        d += HL_IX_IY;
                                        READ_BYTE(d, x);
                                        INC(x);
401010fa:	0a0cb2        	l8ui	a11, a12, 10
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401010fd:	338a      	add.n	a3, a3, a8
                                        READ_BYTE(d, x);
401010ff:	f43030        	extui	a3, a3, 0, 16
40101102:	3c3a      	add.n	a3, a12, a3
40101104:	332a      	add.n	a3, a3, a2
40101106:	040382        	l8ui	a8, a3, 4
                                        INC(x);
40101109:	0a1c      	movi.n	a10, 16
4010110b:	281b      	addi.n	a2, a8, 1
4010110d:	308280        	xor	a8, a2, a8
40101110:	04b0b0        	extui	a11, a11, 0, 1
40101113:	10a8a0        	and	a10, a8, a10
40101116:	20aab0        	or	a10, a10, a11
40101119:	74b020        	extui	a11, a2, 0, 8
4010111c:	99ba      	add.n	a9, a9, a11
4010111e:	000992        	l8ui	a9, a9, 0
40101121:	218780        	srai	a8, a8, 7
40101124:	a08870        	addx4	a8, a8, a7
40101127:	20aa90        	or	a10, a10, a9
4010112a:	0898      	l32i.n	a9, a8, 0

                                } else {

                                        int     d;

                                        READ_D(d);
4010112c:	dd1b      	addi.n	a13, a13, 1
                                        d += HL_IX_IY;
                                        READ_BYTE(d, x);
                                        INC(x);
4010112e:	20aa90        	or	a10, a10, a9
40101131:	0a4ca2        	s8i	a10, a12, 10
                                        WRITE_BYTE(d, x);
40101134:	044322        	s8i	a2, a3, 4

                                        elapsed_cycles += 6;
40101137:	13cf72        	addi	a7, a15, 19
4010113a:	0434c6        	j	40102211 <main+0x2119>

                        }

                        case DEC_R: {

                                DEC(R(Y(opcode)));
4010113d:	243330        	extui	a3, a3, 3, 3
40101140:	a0e3e0        	addx4	a14, a3, a14
40101143:	0e38      	l32i.n	a3, a14, 0
40101145:	0a0ca2        	l8ui	a10, a12, 10
40101148:	000382        	l8ui	a8, a3, 0
4010114b:	2b0c      	movi.n	a11, 2
4010114d:	280b      	addi.n	a2, a8, -1
4010114f:	308280        	xor	a8, a2, a8
40101152:	04a0a0        	extui	a10, a10, 0, 1
40101155:	091c      	movi.n	a9, 16
40101157:	20aab0        	or	a10, a10, a11
4010115a:	109890        	and	a9, a8, a9
4010115d:	fbd3b1        	l32r	a11, 401000ac <_stext+0xac>
40101160:	2099a0        	or	a9, a9, a10
40101163:	74a020        	extui	a10, a2, 0, 8
40101166:	abaa      	add.n	a10, a11, a10
40101168:	000aa2        	l8ui	a10, a10, 0
4010116b:	148780        	extui	a8, a8, 7, 2
4010116e:	2099a0        	or	a9, a9, a10
40101171:	fbcfa1        	l32r	a10, 401000b0 <_stext+0xb0>
40101174:	004322        	s8i	a2, a3, 0
40101177:	a088a0        	addx4	a8, a8, a10
4010117a:	0888      	l32i.n	a8, a8, 0
4010117c:	209980        	or	a9, a9, a8
4010117f:	0a4c92        	s8i	a9, a12, 10
40101182:	0422c6        	j	40102211 <main+0x2119>
40101185:	f0a022        	movi	a2, 240
40101188:	fbc991        	l32r	a9, 401000ac <_stext+0xac>
4010118b:	fbc971        	l32r	a7, 401000b0 <_stext+0xb0>

                        case DEC_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
4010118e:	429e47        	bne	a14, a4, 401011d4 <main+0x10dc>

                                        READ_BYTE(HL, x);
40101191:	041c32        	l16ui	a3, a12, 8
                                        DEC(x);
40101194:	0a0cb2        	l8ui	a11, a12, 10

                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
40101197:	3c3a      	add.n	a3, a12, a3
40101199:	332a      	add.n	a3, a3, a2
4010119b:	040382        	l8ui	a8, a3, 4
                                        DEC(x);
4010119e:	04b0b0        	extui	a11, a11, 0, 1
401011a1:	280b      	addi.n	a2, a8, -1
401011a3:	308280        	xor	a8, a2, a8
401011a6:	2e0c      	movi.n	a14, 2
401011a8:	0a1c      	movi.n	a10, 16
401011aa:	20bbe0        	or	a11, a11, a14
401011ad:	10a8a0        	and	a10, a8, a10
401011b0:	20aab0        	or	a10, a10, a11
401011b3:	74b020        	extui	a11, a2, 0, 8
401011b6:	99ba      	add.n	a9, a9, a11
401011b8:	000992        	l8ui	a9, a9, 0
401011bb:	148780        	extui	a8, a8, 7, 2
401011be:	a08870        	addx4	a8, a8, a7
401011c1:	20aa90        	or	a10, a10, a9
401011c4:	0898      	l32i.n	a9, a8, 0
                                        WRITE_BYTE(HL, x);
401011c6:	044322        	s8i	a2, a3, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        DEC(x);
401011c9:	20aa90        	or	a10, a10, a9
401011cc:	0a4ca2        	s8i	a10, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
401011cf:	7fbb      	addi.n	a7, a15, 11
401011d1:	040f06        	j	40102211 <main+0x2119>
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401011d4:	6e88      	l32i.n	a8, a14, 24

                                } else {

                                        int     d;

                                        READ_D(d);
401011d6:	f430d0        	extui	a3, a13, 0, 16
401011d9:	3c3a      	add.n	a3, a12, a3
                                        d += HL_IX_IY;
401011db:	001882        	l16ui	a8, a8, 0

                                } else {

                                        int     d;

                                        READ_D(d);
401011de:	f40332        	l8ui	a3, a3, 244
                                        d += HL_IX_IY;
                                        READ_BYTE(d, x);
                                        DEC(x);
401011e1:	0a0cb2        	l8ui	a11, a12, 10
                                } else {

                                        int     d;

                                        READ_D(d);
                                        d += HL_IX_IY;
401011e4:	338a      	add.n	a3, a3, a8
                                        READ_BYTE(d, x);
401011e6:	f43030        	extui	a3, a3, 0, 16
401011e9:	3c3a      	add.n	a3, a12, a3
401011eb:	332a      	add.n	a3, a3, a2
401011ed:	040382        	l8ui	a8, a3, 4
                                        DEC(x);
401011f0:	04b0b0        	extui	a11, a11, 0, 1
401011f3:	280b      	addi.n	a2, a8, -1
401011f5:	308280        	xor	a8, a2, a8
401011f8:	2e0c      	movi.n	a14, 2
401011fa:	0a1c      	movi.n	a10, 16
401011fc:	20bbe0        	or	a11, a11, a14
401011ff:	10a8a0        	and	a10, a8, a10
40101202:	20aab0        	or	a10, a10, a11
40101205:	74b020        	extui	a11, a2, 0, 8
40101208:	99ba      	add.n	a9, a9, a11
4010120a:	000992        	l8ui	a9, a9, 0
4010120d:	148780        	extui	a8, a8, 7, 2
40101210:	a08870        	addx4	a8, a8, a7
40101213:	20aa90        	or	a10, a10, a9
40101216:	0898      	l32i.n	a9, a8, 0

                                } else {

                                        int     d;

                                        READ_D(d);
40101218:	dd1b      	addi.n	a13, a13, 1
                                        d += HL_IX_IY;
                                        READ_BYTE(d, x);
                                        DEC(x);
4010121a:	20aa90        	or	a10, a10, a9
4010121d:	0a4ca2        	s8i	a10, a12, 10
                                        WRITE_BYTE(d, x);
40101220:	044322        	s8i	a2, a3, 4

                                        elapsed_cycles += 6;
40101223:	13cf72        	addi	a7, a15, 19
40101226:	03f9c6        	j	40102211 <main+0x2119>

                                /* The following algorithm is from
                                 * comp.sys.sinclair's FAQ. 
                                 */

                                a = A;
40101229:	0b0c32        	l8ui	a3, a12, 11
                                if (a > 0x99 || (F & Z80_C_FLAG)) {
4010122c:	99a022        	movi	a2, 153
4010122f:	092237        	blt	a2, a3, 4010123c <main+0x1144>
40101232:	0a0c22        	l8ui	a2, a12, 10
40101235:	042020        	extui	a2, a2, 0, 1
                                        c = Z80_C_FLAG;
                                        d = 0x60;

                                } else 

                                        c = d = 0;
40101238:	028d      	mov.n	a8, a2
                                /* The following algorithm is from
                                 * comp.sys.sinclair's FAQ. 
                                 */

                                a = A;
                                if (a > 0x99 || (F & Z80_C_FLAG)) {
4010123a:	628c      	beqz.n	a2, 40101244 <main+0x114c>

                                        c = Z80_C_FLAG;
                                        d = 0x60;
4010123c:	60a022        	movi	a2, 96
                                 */

                                a = A;
                                if (a > 0x99 || (F & Z80_C_FLAG)) {

                                        c = Z80_C_FLAG;
4010123f:	180c      	movi.n	a8, 1
40101241:	ffffc6        	j	40101244 <main+0x114c>

                                } else 

                                        c = d = 0;

                                if ((a & 0x0f) > 0x09 || (F & Z80_H_FLAG))
40101244:	349030        	extui	a9, a3, 0, 4
40101247:	9a0c      	movi.n	a10, 9
40101249:	052a97        	blt	a10, a9, 40101252 <main+0x115a>
4010124c:	0a0c92        	l8ui	a9, a12, 10
4010124f:	016947        	bbci	a9, 4, 40101254 <main+0x115c>

                                        d += 0x06;
40101252:	226b      	addi.n	a2, a2, 6

                                A += F & Z80_N_FLAG ? -d : +d;
40101254:	0a0c92        	l8ui	a9, a12, 10
40101257:	74a020        	extui	a10, a2, 0, 8
4010125a:	056917        	bbci	a9, 1, 40101263 <main+0x116b>
4010125d:	602020        	neg	a2, a2
40101260:	74a020        	extui	a10, a2, 0, 8
40101263:	2a3a      	add.n	a2, a10, a3
                                F = SZYXP_FLAGS_TABLE[A]
40101265:	2a0c      	movi.n	a10, 2
40101267:	1099a0        	and	a9, a9, a10
4010126a:	208890        	or	a8, a8, a9
4010126d:	fb9191        	l32r	a9, 401000b4 <_stext+0xb4>

                                if ((a & 0x0f) > 0x09 || (F & Z80_H_FLAG))

                                        d += 0x06;

                                A += F & Z80_N_FLAG ? -d : +d;
40101270:	742020        	extui	a2, a2, 0, 8
                                F = SZYXP_FLAGS_TABLE[A]
40101273:	992a      	add.n	a9, a9, a2
40101275:	0009b2        	l8ui	a11, a9, 0
40101278:	303230        	xor	a3, a2, a3
4010127b:	091c      	movi.n	a9, 16
4010127d:	2088b0        	or	a8, a8, a11
40101280:	103390        	and	a3, a3, a9
40101283:	208830        	or	a8, a8, a3

                                if ((a & 0x0f) > 0x09 || (F & Z80_H_FLAG))

                                        d += 0x06;

                                A += F & Z80_N_FLAG ? -d : +d;
40101286:	0b4c22        	s8i	a2, a12, 11
                                F = SZYXP_FLAGS_TABLE[A]
40101289:	0a4c82        	s8i	a8, a12, 10
4010128c:	03e046        	j	40102211 <main+0x2119>

                        }

                        case CPL: {

                                A = ~A;
4010128f:	0b0c22        	l8ui	a2, a12, 11
                                F = (F & (SZPV_FLAGS | Z80_C_FLAG))
40101292:	0a0c82        	l8ui	a8, a12, 10

                        }

                        case CPL: {

                                A = ~A;
40101295:	f37c      	movi.n	a3, -1
40101297:	302320        	xor	a2, a3, a2
                                F = (F & (SZPV_FLAGS | Z80_C_FLAG))
4010129a:	c5af32        	movi	a3, -59
4010129d:	103830        	and	a3, a8, a3
401012a0:	281c      	movi.n	a8, 18

                        }

                        case CPL: {

                                A = ~A;
401012a2:	742020        	extui	a2, a2, 0, 8
                                F = (F & (SZPV_FLAGS | Z80_C_FLAG))
401012a5:	203380        	or	a3, a3, a8
401012a8:	882c      	movi.n	a8, 40

                        }

                        case CPL: {

                                A = ~A;
401012aa:	0b4c22        	s8i	a2, a12, 11
                                F = (F & (SZPV_FLAGS | Z80_C_FLAG))
401012ad:	102280        	and	a2, a2, a8
401012b0:	202320        	or	a2, a3, a2
401012b3:	0a4c22        	s8i	a2, a12, 10
401012b6:	03d5c6        	j	40102211 <main+0x2119>

                        case NEG: {

                                int     a, f, z, c;

                                a = A;
401012b9:	0b0c82        	l8ui	a8, a12, 11
                                z = -a;

                                c = a ^ z;
                                f = Z80_N_FLAG | (c & Z80_H_FLAG);
401012bc:	091c      	movi.n	a9, 16
                        case NEG: {

                                int     a, f, z, c;

                                a = A;
                                z = -a;
401012be:	602080        	neg	a2, a8

                                c = a ^ z;
401012c1:	308280        	xor	a8, a2, a8
                                f = Z80_N_FLAG | (c & Z80_H_FLAG);
                                f |= SZYX_FLAGS_TABLE[z &= 0xff];
                                c &= 0x0180;
401012c4:	80a132        	movi	a3, 0x180
401012c7:	103830        	and	a3, a8, a3

                                a = A;
                                z = -a;

                                c = a ^ z;
                                f = Z80_N_FLAG | (c & Z80_H_FLAG);
401012ca:	108890        	and	a8, a8, a9
401012cd:	290c      	movi.n	a9, 2
401012cf:	208890        	or	a8, a8, a9
                                f |= SZYX_FLAGS_TABLE[z &= 0xff];
401012d2:	fb7691        	l32r	a9, 401000ac <_stext+0xac>
401012d5:	742020        	extui	a2, a2, 0, 8
401012d8:	992a      	add.n	a9, a9, a2
401012da:	000992        	l8ui	a9, a9, 0
                                c &= 0x0180;
                                f |= OVERFLOW_TABLE[c >> 7];
                                f |= c >> (8 - Z80_C_FLAG_SHIFT);

                                A = z;
401012dd:	0b4c22        	s8i	a2, a12, 11
                                a = A;
                                z = -a;

                                c = a ^ z;
                                f = Z80_N_FLAG | (c & Z80_H_FLAG);
                                f |= SZYX_FLAGS_TABLE[z &= 0xff];
401012e0:	208890        	or	a8, a8, a9
                                c &= 0x0180;
                                f |= OVERFLOW_TABLE[c >> 7];
                                f |= c >> (8 - Z80_C_FLAG_SHIFT);
401012e3:	219830        	srai	a9, a3, 8

                                c = a ^ z;
                                f = Z80_N_FLAG | (c & Z80_H_FLAG);
                                f |= SZYX_FLAGS_TABLE[z &= 0xff];
                                c &= 0x0180;
                                f |= OVERFLOW_TABLE[c >> 7];
401012e6:	208890        	or	a8, a8, a9
401012e9:	fb7191        	l32r	a9, 401000b0 <_stext+0xb0>
401012ec:	413530        	srli	a3, a3, 5
401012ef:	393a      	add.n	a3, a9, a3
                                f |= c >> (8 - Z80_C_FLAG_SHIFT);
401012f1:	0338      	l32i.n	a3, a3, 0
401012f3:	208830        	or	a8, a8, a3

                                A = z;
                                F = f;
401012f6:	0a4c82        	s8i	a8, a12, 10
401012f9:	03c506        	j	40102211 <main+0x2119>
                        case CCF: {

                                int     c;

                                c = F & Z80_C_FLAG;
                                F = (F & SZPV_FLAGS)
401012fc:	0b0c92        	l8ui	a9, a12, 11

                        case CCF: {

                                int     c;

                                c = F & Z80_C_FLAG;
401012ff:	0a0c32        	l8ui	a3, a12, 10
                                F = (F & SZPV_FLAGS)
40101302:	882c      	movi.n	a8, 40
40101304:	108980        	and	a8, a9, a8
40101307:	c4af92        	movi	a9, -60

                        case CCF: {

                                int     c;

                                c = F & Z80_C_FLAG;
4010130a:	042030        	extui	a2, a3, 0, 1
                                F = (F & SZPV_FLAGS)
4010130d:	1a0c      	movi.n	a10, 1
4010130f:	103390        	and	a3, a3, a9
40101312:	30a2a0        	xor	a10, a2, a10
40101315:	208830        	or	a8, a8, a3
40101318:	2088a0        	or	a8, a8, a10
                                        | (c << Z80_H_FLAG_SHIFT)
4010131b:	1122c0        	slli	a2, a2, 4
                        case CCF: {

                                int     c;

                                c = F & Z80_C_FLAG;
                                F = (F & SZPV_FLAGS)
4010131e:	208820        	or	a8, a8, a2
40101321:	0a4c82        	s8i	a8, a12, 10
40101324:	03ba46        	j	40102211 <main+0x2119>

                        }

                        case SCF: {

                                F = (F & SZPV_FLAGS) 
40101327:	0a0c32        	l8ui	a3, a12, 10
4010132a:	c4af22        	movi	a2, -60
4010132d:	0b0c82        	l8ui	a8, a12, 11
40101330:	102320        	and	a2, a3, a2
40101333:	832c      	movi.n	a3, 40
40101335:	103830        	and	a3, a8, a3
40101338:	202230        	or	a2, a2, a3
4010133b:	190c      	movi.n	a9, 1
4010133d:	202290        	or	a2, a2, a9
40101340:	0a4c22        	s8i	a2, a12, 10
40101343:	03b286        	j	40102211 <main+0x2119>
                                 * multiple 0xdd or 0xfd prefixes and
                                 * Z80_PREFIX_FAILSAFE is defined, but that
                                 * is an unlikely pathological case.
                                 */

                                number_cycles += 4;
40101346:	11a8      	l32i.n	a10, a1, 4

                        }

                        case DI: {

				state->iff1 = state->iff2 = 0;
40101348:	020c      	movi.n	a2, 0
                                 * multiple 0xdd or 0xfd prefixes and
                                 * Z80_PREFIX_FAILSAFE is defined, but that
                                 * is an unlikely pathological case.
                                 */

                                number_cycles += 4;
4010134a:	aa4b      	addi.n	a10, a10, 4

                        }

                        case DI: {

				state->iff1 = state->iff2 = 0;
4010134c:	bc29      	s32i.n	a2, a12, 44
4010134e:	ac29      	s32i.n	a2, a12, 40
                                 * multiple 0xdd or 0xfd prefixes and
                                 * Z80_PREFIX_FAILSAFE is defined, but that
                                 * is an unlikely pathological case.
                                 */

                                number_cycles += 4;
40101350:	11a9      	s32i.n	a10, a1, 4
40101352:	03aec6        	j	40102211 <main+0x2119>

#else

                                /* See comment for DI. */

                                number_cycles += 4;
40101355:	11b8      	l32i.n	a11, a1, 4

                        }

                        case EI: {

                                state->iff1 = state->iff2 = 1;
40101357:	120c      	movi.n	a2, 1

#else

                                /* See comment for DI. */

                                number_cycles += 4;
40101359:	bb4b      	addi.n	a11, a11, 4

                        }

                        case EI: {

                                state->iff1 = state->iff2 = 1;
4010135b:	bc29      	s32i.n	a2, a12, 44
4010135d:	ac29      	s32i.n	a2, a12, 40

#else

                                /* See comment for DI. */

                                number_cycles += 4;
4010135f:	11b9      	s32i.n	a11, a1, 4
40101361:	03ab06        	j	40102211 <main+0x2119>

                                /* "IM 0/1" (0xed prefixed opcodes 0x4e and
                                 * 0x6e) is treated like a "IM 0".
                                 */

                                if (!(Y(opcode) & 0x04))
40101364:	022c      	movi.n	a2, 32
40101366:	102320        	and	a2, a3, a2
40101369:	32cc      	bnez.n	a2, 40101370 <main+0x1278>

                                        state->im = Z80_INTERRUPT_MODE_0;
4010136b:	cc29      	s32i.n	a2, a12, 48
4010136d:	03a806        	j	40102211 <main+0x2119>

                                else if (!(Y(opcode) & 0x02))
40101370:	06e347        	bbsi	a3, 4, 4010137a <main+0x1282>

                                        state->im = Z80_INTERRUPT_MODE_1;
40101373:	120c      	movi.n	a2, 1
40101375:	cc29      	s32i.n	a2, a12, 48
40101377:	03a586        	j	40102211 <main+0x2119>

                                else

                                        state->im = Z80_INTERRUPT_MODE_2;
4010137a:	220c      	movi.n	a2, 2
4010137c:	cc29      	s32i.n	a2, a12, 48
4010137e:	03a3c6        	j	40102211 <main+0x2119>
                        case ADD_HL_RR: {

                                int     x, y, z, f, c;

                                x = HL_IX_IY;
                                y = RR(P(opcode));
40101381:	143430        	extui	a3, a3, 4, 2
40101384:	a033e0        	addx4	a3, a3, a14
40101387:	8328      	l32i.n	a2, a3, 32

                        case ADD_HL_RR: {

                                int     x, y, z, f, c;

                                x = HL_IX_IY;
40101389:	6e78      	l32i.n	a7, a14, 24
                                y = RR(P(opcode));
4010138b:	001232        	l16ui	a3, a2, 0

                        case ADD_HL_RR: {

                                int     x, y, z, f, c;

                                x = HL_IX_IY;
4010138e:	001782        	l16ui	a8, a7, 0
                                y = RR(P(opcode));
                                z = x + y;

                                c = x ^ y ^ z;
                                f = F & SZPV_FLAGS;
40101391:	0a0c92        	l8ui	a9, a12, 10

                                int     x, y, z, f, c;

                                x = HL_IX_IY;
                                y = RR(P(opcode));
                                z = x + y;
40101394:	283a      	add.n	a2, a8, a3

                                c = x ^ y ^ z;
40101396:	303380        	xor	a3, a3, a8
                                f = F & SZPV_FLAGS;
40101399:	c4a082        	movi	a8, 196

                                x = HL_IX_IY;
                                y = RR(P(opcode));
                                z = x + y;

                                c = x ^ y ^ z;
4010139c:	303320        	xor	a3, a3, a2
                                f = F & SZPV_FLAGS;
4010139f:	108980        	and	a8, a9, a8

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (z >> 8) & YX_FLAGS;
401013a2:	21a820        	srai	a10, a2, 8
401013a5:	892c      	movi.n	a9, 40
401013a7:	10aa90        	and	a10, a10, a9
                                f |= (c >> 8) & Z80_H_FLAG;

#endif

                                f |= c >> (16 - Z80_C_FLAG_SHIFT);
401013aa:	319030        	srai	a9, a3, 16

                                HL_IX_IY = z;
401013ad:	005722        	s16i	a2, a7, 0
                                c = x ^ y ^ z;
                                f = F & SZPV_FLAGS;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (z >> 8) & YX_FLAGS;
401013b0:	209a90        	or	a9, a10, a9
                                f |= (c >> 8) & Z80_H_FLAG;
401013b3:	213830        	srai	a3, a3, 8
401013b6:	021c      	movi.n	a2, 16
401013b8:	209980        	or	a9, a9, a8
401013bb:	103320        	and	a3, a3, a2

#endif

                                f |= c >> (16 - Z80_C_FLAG_SHIFT);
401013be:	209930        	or	a9, a9, a3

                                HL_IX_IY = z;
                                F = f;
401013c1:	0a4c92        	s8i	a9, a12, 10

                                elapsed_cycles += 7;
401013c4:	7fbb      	addi.n	a7, a15, 11
401013c6:	0391c6        	j	40102211 <main+0x2119>
                        case ADC_HL_RR: {

                                int     x, y, z, f, c;
                        
                                x = HL;
                                y = RR(P(opcode));
401013c9:	143430        	extui	a3, a3, 4, 2
401013cc:	a033e0        	addx4	a3, a3, a14
401013cf:	8328      	l32i.n	a2, a3, 32

                        case ADC_HL_RR: {

                                int     x, y, z, f, c;
                        
                                x = HL;
401013d1:	041c72        	l16ui	a7, a12, 8
                                y = RR(P(opcode));
401013d4:	001232        	l16ui	a3, a2, 0
                                z = x + y + (F & Z80_C_FLAG);
401013d7:	0a0c22        	l8ui	a2, a12, 10
401013da:	873a      	add.n	a8, a7, a3
401013dc:	042020        	extui	a2, a2, 0, 1
401013df:	282a      	add.n	a2, a8, a2

                                c = x ^ y ^ z;
401013e1:	307370        	xor	a7, a3, a7
                                f = z & 0xffff
401013e4:	f48020        	extui	a8, a2, 0, 16
                        
                                x = HL;
                                y = RR(P(opcode));
                                z = x + y + (F & Z80_C_FLAG);

                                c = x ^ y ^ z;
401013e7:	307270        	xor	a7, a2, a7
                                f = z & 0xffff
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;
401013ea:	034c      	movi.n	a3, 64
401013ec:	008816        	beqz	a8, 401013f8 <main+0x1300>
                                y = RR(P(opcode));
                                z = x + y + (F & Z80_C_FLAG);

                                c = x ^ y ^ z;
                                f = z & 0xffff
                                        ? (z >> 8) & SYX_FLAGS 
401013ef:	218820        	srai	a8, a2, 8
                                        : Z80_Z_FLAG;
401013f2:	a8a032        	movi	a3, 168
401013f5:	103830        	and	a3, a8, a3

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (c >> 8) & Z80_H_FLAG;
401013f8:	219870        	srai	a9, a7, 8
401013fb:	081c      	movi.n	a8, 16
401013fd:	108980        	and	a8, a9, a8

#endif

                                f |= OVERFLOW_TABLE[c >> 15];
40101400:	fb2c91        	l32r	a9, 401000b0 <_stext+0xb0>
40101403:	217f70        	srai	a7, a7, 15
40101406:	a07790        	addx4	a7, a7, a9
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (c >> 8) & Z80_H_FLAG;
40101409:	0778      	l32i.n	a7, a7, 0
#endif

                                f |= OVERFLOW_TABLE[c >> 15];
                                f |= z >> (16 - Z80_C_FLAG_SHIFT);

                                HL = z;
4010140b:	045c22        	s16i	a2, a12, 8
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (c >> 8) & Z80_H_FLAG;
4010140e:	208870        	or	a8, a8, a7

#endif

                                f |= OVERFLOW_TABLE[c >> 15];
                                f |= z >> (16 - Z80_C_FLAG_SHIFT);
40101411:	317020        	srai	a7, a2, 16

                                f |= (c >> 8) & Z80_H_FLAG;

#endif

                                f |= OVERFLOW_TABLE[c >> 15];
40101414:	208870        	or	a8, a8, a7
                                f |= z >> (16 - Z80_C_FLAG_SHIFT);
40101417:	208830        	or	a8, a8, a3

                                HL = z;
                                F = f;  
4010141a:	0a4c82        	s8i	a8, a12, 10

                                elapsed_cycles += 7;
4010141d:	7fbb      	addi.n	a7, a15, 11
4010141f:	037b86        	j	40102211 <main+0x2119>
40101422:	300000        	xor	a0, a0, a0
                        case SBC_HL_RR: {

                                int     x, y, z, f, c;
                        
                                x = HL;
                                y = RR(P(opcode));
40101425:	e01434        	excw
40101428:	28a033        	excw
4010142b:	1c7283        	excw

                        case SBC_HL_RR: {

                                int     x, y, z, f, c;
                        
                                x = HL;
4010142e:	128204        	excw
                                y = RR(P(opcode));
40101431:	0c2200        	excw
                                z = x - y - (F & Z80_C_FLAG);
40101434:	800a      	add.n	a8, a0, a0
40101436:	20c037        	bnall	a0, a3, 4010145a <main+0x1362>
40101439:	200420        	or	a0, a4, a2
4010143c:	70c023        	excw

                                c = x ^ y ^ z;
4010143f:	3088      	l32i.n	a8, a0, 12
                                f = Z80_N_FLAG;
                                f |= z & 0xffff
40101441:	f47020        	extui	a7, a2, 0, 16
                        
                                x = HL;
                                y = RR(P(opcode));
                                z = x - y - (F & Z80_C_FLAG);

                                c = x ^ y ^ z;
40101444:	308280        	xor	a8, a2, a8
                                f = Z80_N_FLAG;
                                f |= z & 0xffff
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;
40101447:	034c      	movi.n	a3, 64
40101449:	778c      	beqz.n	a7, 40101454 <main+0x135c>
                                z = x - y - (F & Z80_C_FLAG);

                                c = x ^ y ^ z;
                                f = Z80_N_FLAG;
                                f |= z & 0xffff
                                        ? (z >> 8) & SYX_FLAGS 
4010144b:	217820        	srai	a7, a2, 8
                                        : Z80_Z_FLAG;
4010144e:	a8a032        	movi	a3, 168
40101451:	103730        	and	a3, a7, a3

                                f |= (c >> 8) & Z80_H_FLAG;

#endif

                                c &= 0x018000;
40101454:	fb1971        	l32r	a7, 401000b8 <_stext+0xb8>
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (c >> 8) & Z80_H_FLAG;
40101457:	091c      	movi.n	a9, 16

#endif

                                c &= 0x018000;
40101459:	107870        	and	a7, a8, a7
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (c >> 8) & Z80_H_FLAG;
4010145c:	218880        	srai	a8, a8, 8
4010145f:	108890        	and	a8, a8, a9

#endif

                                c &= 0x018000;
                                f |= OVERFLOW_TABLE[c >> 15];
                                f |= c >> (16 - Z80_C_FLAG_SHIFT);
40101462:	400900        	ssr	a9
40101465:	b19070        	sra	a9, a7
                                y = RR(P(opcode));
                                z = x - y - (F & Z80_C_FLAG);

                                c = x ^ y ^ z;
                                f = Z80_N_FLAG;
                                f |= z & 0xffff
40101468:	208890        	or	a8, a8, a9
                                        ? (z >> 8) & SYX_FLAGS 
                                        : Z80_Z_FLAG;

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                f |= (c >> 8) & Z80_H_FLAG;
4010146b:	290c      	movi.n	a9, 2
4010146d:	208890        	or	a8, a8, a9

#endif

                                c &= 0x018000;
                                f |= OVERFLOW_TABLE[c >> 15];
40101470:	fb1091        	l32r	a9, 401000b0 <_stext+0xb0>
40101473:	217f70        	srai	a7, a7, 15
40101476:	a07790        	addx4	a7, a7, a9
40101479:	0778      	l32i.n	a7, a7, 0
                                f |= c >> (16 - Z80_C_FLAG_SHIFT);

                                HL = z;
4010147b:	045c22        	s16i	a2, a12, 8
                                f |= (c >> 8) & Z80_H_FLAG;

#endif

                                c &= 0x018000;
                                f |= OVERFLOW_TABLE[c >> 15];
4010147e:	208870        	or	a8, a8, a7
                                f |= c >> (16 - Z80_C_FLAG_SHIFT);
40101481:	208830        	or	a8, a8, a3

                                HL = z;
                                F = f;  
40101484:	0a4c82        	s8i	a8, a12, 10

                                elapsed_cycles += 7;
40101487:	7fbb      	addi.n	a7, a15, 11
40101489:	036106        	j	40102211 <main+0x2119>

                        case INC_RR: {

                                int     x;

                                x = RR(P(opcode));
4010148c:	143430        	extui	a3, a3, 4, 2
4010148f:	a0e3e0        	addx4	a14, a3, a14
40101492:	8e28      	l32i.n	a2, a14, 32
                                x++;
                                RR(P(opcode)) = x;

                                elapsed_cycles += 2;
40101494:	7f6b      	addi.n	a7, a15, 6

                        case INC_RR: {

                                int     x;

                                x = RR(P(opcode));
40101496:	001232        	l16ui	a3, a2, 0
                                x++;
40101499:	331b      	addi.n	a3, a3, 1
                                RR(P(opcode)) = x;
4010149b:	005232        	s16i	a3, a2, 0
4010149e:	035bc6        	j	40102211 <main+0x2119>

                        case DEC_RR: {

                                int     x;

                                x = RR(P(opcode));
401014a1:	143430        	extui	a3, a3, 4, 2
401014a4:	a0e3e0        	addx4	a14, a3, a14
401014a7:	8e28      	l32i.n	a2, a14, 32
                                x--;
                                RR(P(opcode)) = x;

                                elapsed_cycles += 2;
401014a9:	7f6b      	addi.n	a7, a15, 6

                        case DEC_RR: {

                                int     x;

                                x = RR(P(opcode));
401014ab:	001232        	l16ui	a3, a2, 0
                                x--;
401014ae:	330b      	addi.n	a3, a3, -1
                                RR(P(opcode)) = x;
401014b0:	005232        	s16i	a3, a2, 0
401014b3:	035686        	j	40102211 <main+0x2119>

                        /* Rotate and shift group. */

                        case RLCA: {
                        
                                A = (A << 1) | (A >> 7);
401014b6:	0b0c32        	l8ui	a3, a12, 11
401014b9:	1183f0        	slli	a8, a3, 1
401014bc:	413730        	srli	a3, a3, 7
401014bf:	202830        	or	a2, a8, a3
401014c2:	742020        	extui	a2, a2, 0, 8
                                F = (F & SZPV_FLAGS)
401014c5:	932c      	movi.n	a3, 41
401014c7:	0a0c82        	l8ui	a8, a12, 10

                        /* Rotate and shift group. */

                        case RLCA: {
                        
                                A = (A << 1) | (A >> 7);
401014ca:	0b4c22        	s8i	a2, a12, 11
                                F = (F & SZPV_FLAGS)
401014cd:	102230        	and	a2, a2, a3
401014d0:	c4af32        	movi	a3, -60
401014d3:	103830        	and	a3, a8, a3
401014d6:	203230        	or	a3, a2, a3
401014d9:	0a4c32        	s8i	a3, a12, 10
401014dc:	034c46        	j	40102211 <main+0x2119>

                        case RLA: {

                                int     a, f;

                                a = A << 1;
401014df:	0b0c82        	l8ui	a8, a12, 11
                                f = (F & SZPV_FLAGS)
401014e2:	0a0c32        	l8ui	a3, a12, 10

                        case RLA: {

                                int     a, f;

                                a = A << 1;
401014e5:	1128f0        	slli	a2, a8, 1
                                        | (a & YX_FLAGS)

#endif

                                        | (A >> 7);
                                A = a | (F & Z80_C_FLAG); 
401014e8:	049030        	extui	a9, a3, 0, 1
401014eb:	209290        	or	a9, a2, a9
401014ee:	0b4c92        	s8i	a9, a12, 11
                        case RLA: {

                                int     a, f;

                                a = A << 1;
                                f = (F & SZPV_FLAGS)
401014f1:	c4af92        	movi	a9, -60
401014f4:	103390        	and	a3, a3, a9

                                        | (a & YX_FLAGS)

#endif

                                        | (A >> 7);
401014f7:	418780        	srli	a8, a8, 7
                                a = A << 1;
                                f = (F & SZPV_FLAGS)

#ifndef Z80_DOCUMENTED_FLAGS_ONLY

                                        | (a & YX_FLAGS)
401014fa:	208830        	or	a8, a8, a3
401014fd:	832c      	movi.n	a3, 40
401014ff:	102230        	and	a2, a2, a3
                        case RLA: {

                                int     a, f;

                                a = A << 1;
                                f = (F & SZPV_FLAGS)
40101502:	208820        	or	a8, a8, a2

#endif

                                        | (A >> 7);
                                A = a | (F & Z80_C_FLAG); 
                                F = f;
40101505:	0a4c82        	s8i	a8, a12, 10
40101508:	034146        	j	40102211 <main+0x2119>

                        case RRCA: {

                                int     c;

                                c = A & 0x01;
4010150b:	0b0c32        	l8ui	a3, a12, 11
                                A = (A >> 1) | (A << 7);
                                F = (F & SZPV_FLAGS)
4010150e:	0a0c92        	l8ui	a9, a12, 10
                        case RRCA: {

                                int     c;

                                c = A & 0x01;
                                A = (A >> 1) | (A << 7);
40101511:	118390        	slli	a8, a3, 7
40101514:	412130        	srli	a2, a3, 1
40101517:	202820        	or	a2, a8, a2
                                F = (F & SZPV_FLAGS)
4010151a:	c4af82        	movi	a8, -60
4010151d:	108980        	and	a8, a9, a8

                        case RRCA: {

                                int     c;

                                c = A & 0x01;
40101520:	043030        	extui	a3, a3, 0, 1
                                A = (A >> 1) | (A << 7);
40101523:	742020        	extui	a2, a2, 0, 8
                                F = (F & SZPV_FLAGS)
40101526:	203380        	or	a3, a3, a8
40101529:	882c      	movi.n	a8, 40
                        case RRCA: {

                                int     c;

                                c = A & 0x01;
                                A = (A >> 1) | (A << 7);
4010152b:	0b4c22        	s8i	a2, a12, 11
                                F = (F & SZPV_FLAGS)
4010152e:	102280        	and	a2, a2, a8
40101531:	203320        	or	a3, a3, a2
40101534:	0a4c32        	s8i	a3, a12, 10
40101537:	033586        	j	40102211 <main+0x2119>

                        case RRA: {

                                int     c;

                                c = A & 0x01;
4010153a:	0b0c82        	l8ui	a8, a12, 11
                                A = (A >> 1) | ((F & Z80_C_FLAG) << 7);
4010153d:	0a0c32        	l8ui	a3, a12, 10
40101540:	412180        	srli	a2, a8, 1
40101543:	119390        	slli	a9, a3, 7
40101546:	202920        	or	a2, a9, a2
                                F = (F & SZPV_FLAGS)
40101549:	c4af92        	movi	a9, -60
4010154c:	103390        	and	a3, a3, a9

                        case RRA: {

                                int     c;

                                c = A & 0x01;
4010154f:	048080        	extui	a8, a8, 0, 1
                                A = (A >> 1) | ((F & Z80_C_FLAG) << 7);
40101552:	742020        	extui	a2, a2, 0, 8
                                F = (F & SZPV_FLAGS)
40101555:	208830        	or	a8, a8, a3
40101558:	832c      	movi.n	a3, 40
                        case RRA: {

                                int     c;

                                c = A & 0x01;
                                A = (A >> 1) | ((F & Z80_C_FLAG) << 7);
4010155a:	0b4c22        	s8i	a2, a12, 11
                                F = (F & SZPV_FLAGS)
4010155d:	102230        	and	a2, a2, a3
40101560:	208820        	or	a8, a8, a2
40101563:	0a4c82        	s8i	a8, a12, 10
40101566:	0329c6        	j	40102211 <main+0x2119>

                        }

                        case RLC_R: {

                                RLC(R(Z(opcode)));
40101569:	243030        	extui	a3, a3, 0, 3
4010156c:	a0e3e0        	addx4	a14, a3, a14
4010156f:	0e38      	l32i.n	a3, a14, 0
40101571:	000382        	l8ui	a8, a3, 0
40101574:	412780        	srli	a2, a8, 7
40101577:	1188f0        	slli	a8, a8, 1
4010157a:	208820        	or	a8, a8, a2
4010157d:	004382        	s8i	a8, a3, 0
40101580:	0e38      	l32i.n	a3, a14, 0
40101582:	facc81        	l32r	a8, 401000b4 <_stext+0xb4>
40101585:	000332        	l8ui	a3, a3, 0
40101588:	383a      	add.n	a3, a8, a3
4010158a:	000332        	l8ui	a3, a3, 0
4010158d:	202230        	or	a2, a2, a3
40101590:	0a4c22        	s8i	a2, a12, 10
40101593:	031e86        	j	40102211 <main+0x2119>
40101596:	f0a072        	movi	a7, 240
40101599:	fac691        	l32r	a9, 401000b4 <_stext+0xb4>

                        case RLC_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
4010159c:	289e47        	bne	a14, a4, 401015c8 <main+0x14d0>

                                        READ_BYTE(HL, x);
4010159f:	041c22        	l16ui	a2, a12, 8
401015a2:	2c2a      	add.n	a2, a12, a2
401015a4:	727a      	add.n	a7, a2, a7
401015a6:	040722        	l8ui	a2, a7, 4
                                        RLC(x);
401015a9:	213720        	srai	a3, a2, 7
401015ac:	1122f0        	slli	a2, a2, 1
401015af:	202230        	or	a2, a2, a3
401015b2:	748020        	extui	a8, a2, 0, 8
401015b5:	998a      	add.n	a9, a9, a8
401015b7:	000982        	l8ui	a8, a9, 0
                                        WRITE_BYTE(HL, x);
401015ba:	044722        	s8i	a2, a7, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        RLC(x);
401015bd:	203380        	or	a3, a3, a8
401015c0:	0a4c32        	s8i	a3, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
401015c3:	7fbb      	addi.n	a7, a15, 11
401015c5:	031206        	j	40102211 <main+0x2119>

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
401015c8:	f420d0        	extui	a2, a13, 0, 16
401015cb:	2c2a      	add.n	a2, a12, a2
                                        d = ((char) d) + HL_IX_IY;
401015cd:	f40282        	l8ui	a8, a2, 244
401015d0:	6e28      	l32i.n	a2, a14, 24

                                        READ_BYTE(d, x);
                                        RLC(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
401015d2:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
401015d5:	001222        	l16ui	a2, a2, 0
401015d8:	282a      	add.n	a2, a8, a2

                                        READ_BYTE(d, x);
401015da:	f42020        	extui	a2, a2, 0, 16
401015dd:	2c2a      	add.n	a2, a12, a2
401015df:	227a      	add.n	a2, a2, a7
401015e1:	040272        	l8ui	a7, a2, 4
                                        RLC(x);
401015e4:	218770        	srai	a8, a7, 7
401015e7:	1177f0        	slli	a7, a7, 1
401015ea:	207780        	or	a7, a7, a8
401015ed:	74a070        	extui	a10, a7, 0, 8
401015f0:	99aa      	add.n	a9, a9, a10
401015f2:	000992        	l8ui	a9, a9, 0
                                        WRITE_BYTE(d, x);
401015f5:	747070        	extui	a7, a7, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        RLC(x);
401015f8:	208890        	or	a8, a8, a9
401015fb:	0a4c82        	s8i	a8, a12, 10
                                        WRITE_BYTE(d, x);
401015fe:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
40101601:	076326        	beqi	a3, 6, 4010160c <main+0x1514>

                                                R(Z(opcode)) = x;
40101604:	a033e0        	addx4	a3, a3, a14
40101607:	0328      	l32i.n	a2, a3, 0
40101609:	004272        	s8i	a7, a2, 0

                                        pc += 2;
4010160c:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
4010160e:	7ffb      	addi.n	a7, a15, 15
40101610:	02ff46        	j	40102211 <main+0x2119>

                        }

                        case RL_R: {

                                RL(R(Z(opcode)));
40101613:	243030        	extui	a3, a3, 0, 3
40101616:	a0e3e0        	addx4	a14, a3, a14
40101619:	0e38      	l32i.n	a3, a14, 0
4010161b:	0a0c82        	l8ui	a8, a12, 10
4010161e:	000322        	l8ui	a2, a3, 0
40101621:	048080        	extui	a8, a8, 0, 1
40101624:	1192f0        	slli	a9, a2, 1
40101627:	208980        	or	a8, a9, a8
4010162a:	004382        	s8i	a8, a3, 0
4010162d:	0e38      	l32i.n	a3, a14, 0
4010162f:	faa181        	l32r	a8, 401000b4 <_stext+0xb4>
40101632:	000332        	l8ui	a3, a3, 0
40101635:	412720        	srli	a2, a2, 7
40101638:	383a      	add.n	a3, a8, a3
4010163a:	000332        	l8ui	a3, a3, 0
4010163d:	202230        	or	a2, a2, a3
40101640:	0a4c22        	s8i	a2, a12, 10
40101643:	02f286        	j	40102211 <main+0x2119>
40101646:	f0a072        	movi	a7, 240
40101649:	fa9a91        	l32r	a9, 401000b4 <_stext+0xb4>

                        case RL_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
4010164c:	309e47        	bne	a14, a4, 40101680 <main+0x1588>

                                        READ_BYTE(HL, x);
4010164f:	041c22        	l16ui	a2, a12, 8
40101652:	2c2a      	add.n	a2, a12, a2
40101654:	727a      	add.n	a7, a2, a7
40101656:	040732        	l8ui	a3, a7, 4
                                        RL(x);
40101659:	0a0c22        	l8ui	a2, a12, 10
4010165c:	1183f0        	slli	a8, a3, 1
4010165f:	042020        	extui	a2, a2, 0, 1
40101662:	202820        	or	a2, a8, a2
40101665:	748020        	extui	a8, a2, 0, 8
40101668:	998a      	add.n	a9, a9, a8
4010166a:	000982        	l8ui	a8, a9, 0
4010166d:	213730        	srai	a3, a3, 7
40101670:	203380        	or	a3, a3, a8
                                        WRITE_BYTE(HL, x);
40101673:	044722        	s8i	a2, a7, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        RL(x);
40101676:	0a4c32        	s8i	a3, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
40101679:	7fbb      	addi.n	a7, a15, 11
4010167b:	02e486        	j	40102211 <main+0x2119>
4010167e:	d00000        	subx2	a0, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101681:	2af420        	excw
40101684:	822c      	movi.n	a2, 40
                                        d = ((char) d) + HL_IX_IY;
40101686:	28f402        	excw
40101689:	6e          	.byte 0x6e

                                        READ_BYTE(d, x);
                                        RL(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
4010168a:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
4010168d:	001222        	l16ui	a2, a2, 0
40101690:	282a      	add.n	a2, a8, a2

                                        READ_BYTE(d, x);
40101692:	f42020        	extui	a2, a2, 0, 16
40101695:	2c2a      	add.n	a2, a12, a2
40101697:	227a      	add.n	a2, a2, a7
40101699:	040282        	l8ui	a8, a2, 4
                                        RL(x);
4010169c:	0a0c72        	l8ui	a7, a12, 10
4010169f:	11a8f0        	slli	a10, a8, 1
401016a2:	047070        	extui	a7, a7, 0, 1
401016a5:	207a70        	or	a7, a10, a7
401016a8:	74a070        	extui	a10, a7, 0, 8
401016ab:	99aa      	add.n	a9, a9, a10
401016ad:	000992        	l8ui	a9, a9, 0
401016b0:	218780        	srai	a8, a8, 7
401016b3:	208890        	or	a8, a8, a9
                                        WRITE_BYTE(d, x);
401016b6:	747070        	extui	a7, a7, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        RL(x);
401016b9:	0a4c82        	s8i	a8, a12, 10
                                        WRITE_BYTE(d, x);
401016bc:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
401016bf:	076326        	beqi	a3, 6, 401016ca <main+0x15d2>

                                                R(Z(opcode)) = x;
401016c2:	a033e0        	addx4	a3, a3, a14
401016c5:	0328      	l32i.n	a2, a3, 0
401016c7:	004272        	s8i	a7, a2, 0

                                        pc += 2;
401016ca:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
401016cc:	7ffb      	addi.n	a7, a15, 15
401016ce:	02cfc6        	j	40102211 <main+0x2119>

                        }

                        case RRC_R: {

                                RRC(R(Z(opcode)));
401016d1:	243030        	extui	a3, a3, 0, 3
401016d4:	a0e3e0        	addx4	a14, a3, a14
401016d7:	0e38      	l32i.n	a3, a14, 0
401016d9:	000382        	l8ui	a8, a3, 0
401016dc:	042080        	extui	a2, a8, 0, 1
401016df:	119290        	slli	a9, a2, 7
401016e2:	418180        	srli	a8, a8, 1
401016e5:	208980        	or	a8, a9, a8
401016e8:	004382        	s8i	a8, a3, 0
401016eb:	0e38      	l32i.n	a3, a14, 0
401016ed:	fa7181        	l32r	a8, 401000b4 <_stext+0xb4>
401016f0:	000332        	l8ui	a3, a3, 0
401016f3:	383a      	add.n	a3, a8, a3
401016f5:	000332        	l8ui	a3, a3, 0
401016f8:	202230        	or	a2, a2, a3
401016fb:	0a4c22        	s8i	a2, a12, 10
401016fe:	02c3c6        	j	40102211 <main+0x2119>
40101701:	f0a072        	movi	a7, 240
40101704:	fa6c81        	l32r	a8, 401000b4 <_stext+0xb4>

                        case RRC_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
40101707:	299e47        	bne	a14, a4, 40101734 <main+0x163c>

                                        READ_BYTE(HL, x);
4010170a:	041c22        	l16ui	a2, a12, 8
4010170d:	2c2a      	add.n	a2, a12, a2
4010170f:	727a      	add.n	a7, a2, a7
40101711:	040732        	l8ui	a3, a7, 4
                                        RRC(x);
40101714:	042030        	extui	a2, a3, 0, 1
40101717:	119290        	slli	a9, a2, 7
4010171a:	213130        	srai	a3, a3, 1
4010171d:	203930        	or	a3, a9, a3
40101720:	883a      	add.n	a8, a8, a3
40101722:	000882        	l8ui	a8, a8, 0
                                        WRITE_BYTE(HL, x);
40101725:	044732        	s8i	a3, a7, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        RRC(x);
40101728:	202280        	or	a2, a2, a8
4010172b:	0a4c22        	s8i	a2, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
4010172e:	7fbb      	addi.n	a7, a15, 11
40101730:	02b746        	j	40102211 <main+0x2119>
40101733:	20d000        	or	a13, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101736:	2c2af4        	excw
                                        d = ((char) d) + HL_IX_IY;
40101739:	f40292        	l8ui	a9, a2, 244
4010173c:	6e28      	l32i.n	a2, a14, 24

                                        READ_BYTE(d, x);
                                        RRC(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
4010173e:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101741:	001222        	l16ui	a2, a2, 0
40101744:	292a      	add.n	a2, a9, a2

                                        READ_BYTE(d, x);
40101746:	f42020        	extui	a2, a2, 0, 16
40101749:	2c2a      	add.n	a2, a12, a2
4010174b:	227a      	add.n	a2, a2, a7
4010174d:	040292        	l8ui	a9, a2, 4
                                        RRC(x);
40101750:	047090        	extui	a7, a9, 0, 1
40101753:	11a790        	slli	a10, a7, 7
40101756:	219190        	srai	a9, a9, 1
40101759:	209a90        	or	a9, a10, a9
4010175c:	889a      	add.n	a8, a8, a9
4010175e:	000882        	l8ui	a8, a8, 0
                                        WRITE_BYTE(d, x);
40101761:	749090        	extui	a9, a9, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        RRC(x);
40101764:	207780        	or	a7, a7, a8
40101767:	0a4c72        	s8i	a7, a12, 10
                                        WRITE_BYTE(d, x);
4010176a:	044292        	s8i	a9, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
4010176d:	076326        	beqi	a3, 6, 40101778 <main+0x1680>

                                                R(Z(opcode)) = x;
40101770:	a033e0        	addx4	a3, a3, a14
40101773:	0328      	l32i.n	a2, a3, 0
40101775:	004292        	s8i	a9, a2, 0

                                        pc += 2;
40101778:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
4010177a:	7ffb      	addi.n	a7, a15, 15
4010177c:	02a446        	j	40102211 <main+0x2119>

                        }

                        case RR_R: {

                                RR_INSTRUCTION(R(Z(opcode)));
4010177f:	243030        	extui	a3, a3, 0, 3
40101782:	a0e3e0        	addx4	a14, a3, a14
40101785:	0e38      	l32i.n	a3, a14, 0
40101787:	0a0c82        	l8ui	a8, a12, 10
4010178a:	000322        	l8ui	a2, a3, 0
4010178d:	118890        	slli	a8, a8, 7
40101790:	419120        	srli	a9, a2, 1
40101793:	208980        	or	a8, a9, a8
40101796:	004382        	s8i	a8, a3, 0
40101799:	0e38      	l32i.n	a3, a14, 0
4010179b:	fa4681        	l32r	a8, 401000b4 <_stext+0xb4>
4010179e:	000332        	l8ui	a3, a3, 0
401017a1:	042020        	extui	a2, a2, 0, 1
401017a4:	383a      	add.n	a3, a8, a3
401017a6:	000332        	l8ui	a3, a3, 0
401017a9:	202230        	or	a2, a2, a3
401017ac:	0a4c22        	s8i	a2, a12, 10
401017af:	029786        	j	40102211 <main+0x2119>
401017b2:	f0a072        	movi	a7, 240
401017b5:	fa3f81        	l32r	a8, 401000b4 <_stext+0xb4>

                        case RR_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
401017b8:	309e47        	bne	a14, a4, 401017ec <main+0x16f4>

                                        READ_BYTE(HL, x);
401017bb:	041c22        	l16ui	a2, a12, 8
                                        RR_INSTRUCTION(x);
401017be:	0a0c32        	l8ui	a3, a12, 10

                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
401017c1:	2c2a      	add.n	a2, a12, a2
401017c3:	727a      	add.n	a7, a2, a7
401017c5:	040722        	l8ui	a2, a7, 4
                                        RR_INSTRUCTION(x);
401017c8:	113390        	slli	a3, a3, 7
401017cb:	219120        	srai	a9, a2, 1
401017ce:	743030        	extui	a3, a3, 0, 8
401017d1:	203930        	or	a3, a9, a3
401017d4:	883a      	add.n	a8, a8, a3
401017d6:	000882        	l8ui	a8, a8, 0
401017d9:	042020        	extui	a2, a2, 0, 1
401017dc:	202280        	or	a2, a2, a8
                                        WRITE_BYTE(HL, x);
401017df:	044732        	s8i	a3, a7, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        RR_INSTRUCTION(x);
401017e2:	0a4c22        	s8i	a2, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
401017e5:	7fbb      	addi.n	a7, a15, 11
401017e7:	028986        	j	40102211 <main+0x2119>
401017ea:	d00000        	subx2	a0, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
401017ed:	2af420        	excw
401017f0:	922c      	movi.n	a2, 41
                                        d = ((char) d) + HL_IX_IY;
401017f2:	28f402        	excw
401017f5:	6e          	.byte 0x6e

                                        READ_BYTE(d, x);
                                        RR_INSTRUCTION(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
401017f6:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
401017f9:	001222        	l16ui	a2, a2, 0
401017fc:	292a      	add.n	a2, a9, a2

                                        READ_BYTE(d, x);
401017fe:	f42020        	extui	a2, a2, 0, 16
40101801:	2c2a      	add.n	a2, a12, a2
40101803:	227a      	add.n	a2, a2, a7
                                        RR_INSTRUCTION(x);
40101805:	0a0c92        	l8ui	a9, a12, 10
                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
40101808:	040272        	l8ui	a7, a2, 4
                                        RR_INSTRUCTION(x);
4010180b:	119990        	slli	a9, a9, 7
4010180e:	21a170        	srai	a10, a7, 1
40101811:	749090        	extui	a9, a9, 0, 8
40101814:	209a90        	or	a9, a10, a9
40101817:	889a      	add.n	a8, a8, a9
40101819:	000882        	l8ui	a8, a8, 0
4010181c:	047070        	extui	a7, a7, 0, 1
4010181f:	207780        	or	a7, a7, a8
                                        WRITE_BYTE(d, x);
40101822:	749090        	extui	a9, a9, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        RR_INSTRUCTION(x);
40101825:	0a4c72        	s8i	a7, a12, 10
                                        WRITE_BYTE(d, x);
40101828:	044292        	s8i	a9, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
4010182b:	076326        	beqi	a3, 6, 40101836 <main+0x173e>

                                                R(Z(opcode)) = x;
4010182e:	a033e0        	addx4	a3, a3, a14
40101831:	0328      	l32i.n	a2, a3, 0
40101833:	004292        	s8i	a9, a2, 0

                                        pc += 2;
40101836:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
40101838:	7ffb      	addi.n	a7, a15, 15
4010183a:	0274c6        	j	40102211 <main+0x2119>

                        }

                        case SLA_R: {

                                SLA(R(Z(opcode)));
4010183d:	243030        	extui	a3, a3, 0, 3
40101840:	a0e3e0        	addx4	a14, a3, a14
40101843:	0e38      	l32i.n	a3, a14, 0
40101845:	000322        	l8ui	a2, a3, 0
40101848:	1182f0        	slli	a8, a2, 1
4010184b:	004382        	s8i	a8, a3, 0
4010184e:	0e38      	l32i.n	a3, a14, 0
40101850:	fa1981        	l32r	a8, 401000b4 <_stext+0xb4>
40101853:	000332        	l8ui	a3, a3, 0
40101856:	412720        	srli	a2, a2, 7
40101859:	383a      	add.n	a3, a8, a3
4010185b:	000332        	l8ui	a3, a3, 0
4010185e:	202230        	or	a2, a2, a3
40101861:	0a4c22        	s8i	a2, a12, 10
40101864:	026a46        	j	40102211 <main+0x2119>
40101867:	f0a072        	movi	a7, 240
4010186a:	fa1291        	l32r	a9, 401000b4 <_stext+0xb4>

                        case SLA_INDIRECT_HL: {

                                int     x;      

                                if (registers == state->register_table) {
4010186d:	279e47        	bne	a14, a4, 40101898 <main+0x17a0>

                                        READ_BYTE(HL, x);
40101870:	041c22        	l16ui	a2, a12, 8
40101873:	2c2a      	add.n	a2, a12, a2
40101875:	727a      	add.n	a7, a2, a7
40101877:	040732        	l8ui	a3, a7, 4
                                        SLA(x);
4010187a:	1123f0        	slli	a2, a3, 1
4010187d:	748020        	extui	a8, a2, 0, 8
40101880:	998a      	add.n	a9, a9, a8
40101882:	000982        	l8ui	a8, a9, 0
40101885:	213730        	srai	a3, a3, 7
40101888:	203380        	or	a3, a3, a8
                                        WRITE_BYTE(HL, x);
4010188b:	044722        	s8i	a2, a7, 4
                                int     x;      

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        SLA(x);
4010188e:	0a4c32        	s8i	a3, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
40101891:	7fbb      	addi.n	a7, a15, 11
40101893:	025e86        	j	40102211 <main+0x2119>
40101896:	d00000        	subx2	a0, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101899:	2af420        	excw
4010189c:	822c      	movi.n	a2, 40
                                        d = ((char) d) + HL_IX_IY;
4010189e:	28f402        	excw
401018a1:	6e          	.byte 0x6e

                                        READ_BYTE(d, x);
                                        SLA(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
401018a2:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
401018a5:	001222        	l16ui	a2, a2, 0
401018a8:	282a      	add.n	a2, a8, a2

                                        READ_BYTE(d, x);
401018aa:	f42020        	extui	a2, a2, 0, 16
401018ad:	2c2a      	add.n	a2, a12, a2
401018af:	227a      	add.n	a2, a2, a7
401018b1:	040282        	l8ui	a8, a2, 4
                                        SLA(x);
401018b4:	1178f0        	slli	a7, a8, 1
401018b7:	74a070        	extui	a10, a7, 0, 8
401018ba:	99aa      	add.n	a9, a9, a10
401018bc:	000992        	l8ui	a9, a9, 0
401018bf:	218780        	srai	a8, a8, 7
401018c2:	208890        	or	a8, a8, a9
                                        WRITE_BYTE(d, x);
401018c5:	747070        	extui	a7, a7, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        SLA(x);
401018c8:	0a4c82        	s8i	a8, a12, 10
                                        WRITE_BYTE(d, x);
401018cb:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
401018ce:	076326        	beqi	a3, 6, 401018d9 <main+0x17e1>

                                                R(Z(opcode)) = x;
401018d1:	a033e0        	addx4	a3, a3, a14
401018d4:	0328      	l32i.n	a2, a3, 0
401018d6:	004272        	s8i	a7, a2, 0

                                        pc += 2;
401018d9:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
401018db:	7ffb      	addi.n	a7, a15, 15
401018dd:	024c06        	j	40102211 <main+0x2119>

                        }

                        case SLL_R: {

                                SLL(R(Z(opcode)));
401018e0:	243030        	extui	a3, a3, 0, 3
401018e3:	a0e3e0        	addx4	a14, a3, a14
401018e6:	0e38      	l32i.n	a3, a14, 0
401018e8:	180c      	movi.n	a8, 1
401018ea:	000322        	l8ui	a2, a3, 0
401018ed:	1192f0        	slli	a9, a2, 1
401018f0:	208980        	or	a8, a9, a8
401018f3:	004382        	s8i	a8, a3, 0
401018f6:	0e38      	l32i.n	a3, a14, 0
401018f8:	f9ef81        	l32r	a8, 401000b4 <_stext+0xb4>
401018fb:	000332        	l8ui	a3, a3, 0
401018fe:	412720        	srli	a2, a2, 7
40101901:	383a      	add.n	a3, a8, a3
40101903:	000332        	l8ui	a3, a3, 0
40101906:	202230        	or	a2, a2, a3
40101909:	0a4c22        	s8i	a2, a12, 10
4010190c:	024046        	j	40102211 <main+0x2119>
4010190f:	f0a072        	movi	a7, 240
40101912:	f9e8a1        	l32r	a10, 401000b4 <_stext+0xb4>

                        case SLL_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
40101915:	2f9e47        	bne	a14, a4, 40101948 <main+0x1850>

                                        READ_BYTE(HL, x);
40101918:	041c22        	l16ui	a2, a12, 8
4010191b:	2c2a      	add.n	a2, a12, a2
4010191d:	727a      	add.n	a7, a2, a7
4010191f:	040782        	l8ui	a8, a7, 4
                                        SLL(x);
40101922:	120c      	movi.n	a2, 1
40101924:	1138f0        	slli	a3, a8, 1
40101927:	749030        	extui	a9, a3, 0, 8
4010192a:	209920        	or	a9, a9, a2
4010192d:	aa9a      	add.n	a10, a10, a9
4010192f:	000a92        	l8ui	a9, a10, 0
40101932:	218780        	srai	a8, a8, 7
40101935:	208890        	or	a8, a8, a9
40101938:	202320        	or	a2, a3, a2
                                        WRITE_BYTE(HL, x);
4010193b:	044722        	s8i	a2, a7, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        SLL(x);
4010193e:	0a4c82        	s8i	a8, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
40101941:	7fbb      	addi.n	a7, a15, 11
40101943:	023286        	j	40102211 <main+0x2119>
40101946:	d00000        	subx2	a0, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101949:	2af420        	excw
4010194c:	822c      	movi.n	a2, 40
                                        d = ((char) d) + HL_IX_IY;
4010194e:	28f402        	excw
40101951:	6e          	.byte 0x6e

                                        READ_BYTE(d, x);
                                        SLL(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
40101952:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101955:	001222        	l16ui	a2, a2, 0
40101958:	282a      	add.n	a2, a8, a2

                                        READ_BYTE(d, x);
4010195a:	f42020        	extui	a2, a2, 0, 16
4010195d:	2c2a      	add.n	a2, a12, a2
4010195f:	227a      	add.n	a2, a2, a7
40101961:	040292        	l8ui	a9, a2, 4
                                        SLL(x);
40101964:	170c      	movi.n	a7, 1
40101966:	1189f0        	slli	a8, a9, 1
40101969:	74b080        	extui	a11, a8, 0, 8
4010196c:	20bb70        	or	a11, a11, a7
4010196f:	aaba      	add.n	a10, a10, a11
40101971:	000aa2        	l8ui	a10, a10, 0
40101974:	219790        	srai	a9, a9, 7
40101977:	207870        	or	a7, a8, a7
4010197a:	2099a0        	or	a9, a9, a10
                                        WRITE_BYTE(d, x);
4010197d:	747070        	extui	a7, a7, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        SLL(x);
40101980:	0a4c92        	s8i	a9, a12, 10
                                        WRITE_BYTE(d, x);
40101983:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
40101986:	076326        	beqi	a3, 6, 40101991 <main+0x1899>

                                                R(Z(opcode)) = x;
40101989:	a033e0        	addx4	a3, a3, a14
4010198c:	0328      	l32i.n	a2, a3, 0
4010198e:	004272        	s8i	a7, a2, 0

                                        pc += 2;
40101991:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
40101993:	7ffb      	addi.n	a7, a15, 15
40101995:	021e06        	j	40102211 <main+0x2119>

                        }

                        case SRA_R: {

                                SRA(R(Z(opcode)));
40101998:	243030        	extui	a3, a3, 0, 3
4010199b:	a0e3e0        	addx4	a14, a3, a14
4010199e:	0e38      	l32i.n	a3, a14, 0
401019a0:	000322        	l8ui	a2, a3, 0
401019a3:	418120        	srli	a8, a2, 1
401019a6:	004382        	s8i	a8, a3, 0
401019a9:	0e38      	l32i.n	a3, a14, 0
401019ab:	f9c281        	l32r	a8, 401000b4 <_stext+0xb4>
401019ae:	000332        	l8ui	a3, a3, 0
401019b1:	042020        	extui	a2, a2, 0, 1
401019b4:	383a      	add.n	a3, a8, a3
401019b6:	000332        	l8ui	a3, a3, 0
401019b9:	202230        	or	a2, a2, a3
401019bc:	0a4c22        	s8i	a2, a12, 10
401019bf:	021386        	j	40102211 <main+0x2119>
401019c2:	f0a022        	movi	a2, 240
401019c5:	f9bb91        	l32r	a9, 401000b4 <_stext+0xb4>

                        case SRA_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
401019c8:	259e47        	bne	a14, a4, 401019f1 <main+0x18f9>

                                        READ_BYTE(HL, x);
401019cb:	041c72        	l16ui	a7, a12, 8
401019ce:	7c7a      	add.n	a7, a12, a7
401019d0:	272a      	add.n	a2, a7, a2
401019d2:	040272        	l8ui	a7, a2, 4
                                        SRA(x);
401019d5:	413170        	srli	a3, a7, 1
401019d8:	993a      	add.n	a9, a9, a3
401019da:	000982        	l8ui	a8, a9, 0
401019dd:	047070        	extui	a7, a7, 0, 1
401019e0:	207780        	or	a7, a7, a8
401019e3:	0a4c72        	s8i	a7, a12, 10
                                        WRITE_BYTE(HL, x);
401019e6:	044232        	s8i	a3, a2, 4

                                        elapsed_cycles++;
401019e9:	7fbb      	addi.n	a7, a15, 11
401019eb:	020886        	j	40102211 <main+0x2119>
401019ee:	000000        	ill

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
401019f1:	f470d0        	extui	a7, a13, 0, 16
401019f4:	7c7a      	add.n	a7, a12, a7
                                        d = ((char) d) + HL_IX_IY;
401019f6:	f40782        	l8ui	a8, a7, 244
401019f9:	6e78      	l32i.n	a7, a14, 24

                                        READ_BYTE(d, x);
                                        SRA(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
401019fb:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
401019fe:	001772        	l16ui	a7, a7, 0
40101a01:	787a      	add.n	a7, a8, a7

                                        READ_BYTE(d, x);
40101a03:	f47070        	extui	a7, a7, 0, 16
40101a06:	7c7a      	add.n	a7, a12, a7
40101a08:	772a      	add.n	a7, a7, a2
40101a0a:	040782        	l8ui	a8, a7, 4
                                        SRA(x);
40101a0d:	412180        	srli	a2, a8, 1
40101a10:	992a      	add.n	a9, a9, a2
40101a12:	000992        	l8ui	a9, a9, 0
40101a15:	048080        	extui	a8, a8, 0, 1
40101a18:	208890        	or	a8, a8, a9
40101a1b:	0a4c82        	s8i	a8, a12, 10
                                        WRITE_BYTE(d, x);
40101a1e:	044722        	s8i	a2, a7, 4

                                        if (Z(opcode) != INDIRECT_HL)
40101a21:	076326        	beqi	a3, 6, 40101a2c <main+0x1934>

                                                R(Z(opcode)) = x;
40101a24:	a033e0        	addx4	a3, a3, a14
40101a27:	0338      	l32i.n	a3, a3, 0
40101a29:	004322        	s8i	a2, a3, 0

                                        pc += 2;
40101a2c:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
40101a2e:	7ffb      	addi.n	a7, a15, 15
40101a30:	01f746        	j	40102211 <main+0x2119>

                        }

                        case SRL_R: {

                                SRL(R(Z(opcode)));
40101a33:	243030        	extui	a3, a3, 0, 3
40101a36:	a0e3e0        	addx4	a14, a3, a14
40101a39:	0e38      	l32i.n	a3, a14, 0
40101a3b:	000322        	l8ui	a2, a3, 0
40101a3e:	418120        	srli	a8, a2, 1
40101a41:	004382        	s8i	a8, a3, 0
40101a44:	0e38      	l32i.n	a3, a14, 0
40101a46:	f99b81        	l32r	a8, 401000b4 <_stext+0xb4>
40101a49:	000332        	l8ui	a3, a3, 0
40101a4c:	042020        	extui	a2, a2, 0, 1
40101a4f:	383a      	add.n	a3, a8, a3
40101a51:	000332        	l8ui	a3, a3, 0
40101a54:	202230        	or	a2, a2, a3
40101a57:	0a4c22        	s8i	a2, a12, 10
40101a5a:	01ecc6        	j	40102211 <main+0x2119>
40101a5d:	f0a072        	movi	a7, 240
40101a60:	f99591        	l32r	a9, 401000b4 <_stext+0xb4>

                        case SRL_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
40101a63:	229e47        	bne	a14, a4, 40101a89 <main+0x1991>

                                        READ_BYTE(HL, x);
40101a66:	041c22        	l16ui	a2, a12, 8
40101a69:	2c2a      	add.n	a2, a12, a2
40101a6b:	727a      	add.n	a7, a2, a7
40101a6d:	040732        	l8ui	a3, a7, 4
                                        SRL(x);
40101a70:	212130        	srai	a2, a3, 1
40101a73:	992a      	add.n	a9, a9, a2
40101a75:	000982        	l8ui	a8, a9, 0
40101a78:	043030        	extui	a3, a3, 0, 1
40101a7b:	203380        	or	a3, a3, a8
                                        WRITE_BYTE(HL, x);
40101a7e:	044722        	s8i	a2, a7, 4
                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
                                        SRL(x);
40101a81:	0a4c32        	s8i	a3, a12, 10
                                        WRITE_BYTE(HL, x);

                                        elapsed_cycles++;
40101a84:	7fbb      	addi.n	a7, a15, 11
40101a86:	01e1c6        	j	40102211 <main+0x2119>

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101a89:	f420d0        	extui	a2, a13, 0, 16
40101a8c:	2c2a      	add.n	a2, a12, a2
                                        d = ((char) d) + HL_IX_IY;
40101a8e:	f40282        	l8ui	a8, a2, 244
40101a91:	6e28      	l32i.n	a2, a14, 24

                                        READ_BYTE(d, x);
                                        SRL(x);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
40101a93:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101a96:	001222        	l16ui	a2, a2, 0
40101a99:	282a      	add.n	a2, a8, a2

                                        READ_BYTE(d, x);
40101a9b:	f42020        	extui	a2, a2, 0, 16
40101a9e:	2c2a      	add.n	a2, a12, a2
40101aa0:	227a      	add.n	a2, a2, a7
40101aa2:	040282        	l8ui	a8, a2, 4
                                        SRL(x);
40101aa5:	217180        	srai	a7, a8, 1
40101aa8:	997a      	add.n	a9, a9, a7
40101aaa:	000992        	l8ui	a9, a9, 0
40101aad:	048080        	extui	a8, a8, 0, 1
40101ab0:	208890        	or	a8, a8, a9
                                        WRITE_BYTE(d, x);
40101ab3:	747070        	extui	a7, a7, 0, 8

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;

                                        READ_BYTE(d, x);
                                        SRL(x);
40101ab6:	0a4c82        	s8i	a8, a12, 10
                                        WRITE_BYTE(d, x);
40101ab9:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
40101abc:	086326        	beqi	a3, 6, 40101ac8 <main+0x19d0>

                                                R(Z(opcode)) = x;
40101abf:	a033e0        	addx4	a3, a3, a14
40101ac2:	002322        	l32i	a2, a3, 0
40101ac5:	004272        	s8i	a7, a2, 0

                                        pc += 2;
40101ac8:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
40101aca:	7ffb      	addi.n	a7, a15, 15
40101acc:	01d046        	j	40102211 <main+0x2119>

                        case RLD_RRD: {

                                int     x, y;

                                READ_BYTE(HL, x);
40101acf:	041c82        	l16ui	a8, a12, 8
                                y = (A & 0xf0) << 8;
40101ad2:	0b0c72        	l8ui	a7, a12, 11
40101ad5:	097c      	movi.n	a9, -16

                        case RLD_RRD: {

                                int     x, y;

                                READ_BYTE(HL, x);
40101ad7:	2c8a      	add.n	a2, a12, a8
                                y = (A & 0xf0) << 8;
40101ad9:	109790        	and	a9, a7, a9
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
40101adc:	6fa0a2        	movi	a10, 111

                        case RLD_RRD: {

                                int     x, y;

                                READ_BYTE(HL, x);
40101adf:	f40222        	l8ui	a2, a2, 244
                                y = (A & 0xf0) << 8;
40101ae2:	119980        	slli	a9, a9, 8
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
40101ae5:	0b93a7        	bne	a3, a10, 40101af4 <main+0x19fc>
                                int     x, y;

                                READ_BYTE(HL, x);
                                y = (A & 0xf0) << 8;
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
40101ae8:	1122c0        	slli	a2, a2, 4
40101aeb:	347070        	extui	a7, a7, 0, 4
                                        : ((x & 0x0f) << 8)
40101aee:	202270        	or	a2, a2, a7
40101af1:	000506        	j	40101b09 <main+0x1a11>
                                                | ((A & 0x0f) << 4) 
40101af4:	1177c0        	slli	a7, a7, 4
                                                | (x >> 4);
40101af7:	213420        	srai	a3, a2, 4
                                READ_BYTE(HL, x);
                                y = (A & 0xf0) << 8;
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
                                                | ((A & 0x0f) << 4) 
40101afa:	747070        	extui	a7, a7, 0, 8

                                READ_BYTE(HL, x);
                                y = (A & 0xf0) << 8;
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
40101afd:	342020        	extui	a2, a2, 0, 4
                                                | ((A & 0x0f) << 4) 
40101b00:	203370        	or	a3, a3, a7

                                READ_BYTE(HL, x);
                                y = (A & 0xf0) << 8;
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
40101b03:	112280        	slli	a2, a2, 8
40101b06:	202320        	or	a2, a3, a2

                                int     x, y;

                                READ_BYTE(HL, x);
                                y = (A & 0xf0) << 8;
                                y |= opcode == OPCODE_RLD
40101b09:	202290        	or	a2, a2, a9
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
                                                | ((A & 0x0f) << 4) 
                                                | (x >> 4);
                                WRITE_BYTE(HL, y);
40101b0c:	8c8a      	add.n	a8, a12, a8
                                y >>= 8;

                                A = y; 
                                F = SZYXP_FLAGS_TABLE[y] | (F & Z80_C_FLAG);
40101b0e:	f96991        	l32r	a9, 401000b4 <_stext+0xb4>
                                y |= opcode == OPCODE_RLD
                                        ? (x << 4) | (A & 0x0f)
                                        : ((x & 0x0f) << 8)
                                                | ((A & 0x0f) << 4) 
                                                | (x >> 4);
                                WRITE_BYTE(HL, y);
40101b11:	f44822        	s8i	a2, a8, 244
                                y >>= 8;
40101b14:	212820        	srai	a2, a2, 8

                                A = y; 
                                F = SZYXP_FLAGS_TABLE[y] | (F & Z80_C_FLAG);
40101b17:	0a0c82        	l8ui	a8, a12, 10
                                                | ((A & 0x0f) << 4) 
                                                | (x >> 4);
                                WRITE_BYTE(HL, y);
                                y >>= 8;

                                A = y; 
40101b1a:	0b4c22        	s8i	a2, a12, 11
                                F = SZYXP_FLAGS_TABLE[y] | (F & Z80_C_FLAG);
40101b1d:	292a      	add.n	a2, a9, a2
40101b1f:	000222        	l8ui	a2, a2, 0
40101b22:	048080        	extui	a8, a8, 0, 1
40101b25:	202820        	or	a2, a8, a2
40101b28:	0a4c22        	s8i	a2, a12, 10

                                elapsed_cycles += 4;
40101b2b:	7feb      	addi.n	a7, a15, 14
40101b2d:	01b806        	j	40102211 <main+0x2119>

                        case BIT_B_R: {

                                int     x;

                                x = R(Z(opcode)) & (1 << Y(opcode));
40101b30:	242030        	extui	a2, a3, 0, 3
40101b33:	a0e2e0        	addx4	a14, a2, a14
40101b36:	0e28      	l32i.n	a2, a14, 0
40101b38:	243330        	extui	a3, a3, 3, 3
40101b3b:	000282        	l8ui	a8, a2, 0
40101b3e:	120c      	movi.n	a2, 1
40101b40:	401300        	ssl	a3
40101b43:	a13200        	sll	a3, a2
40101b46:	103830        	and	a3, a8, a3
                                F = (x ? 0 : Z80_Z_FLAG | Z80_P_FLAG)
40101b49:	494c      	movi.n	a9, 68
40101b4b:	020c      	movi.n	a2, 0
40101b4d:	832930        	moveqz	a2, a9, a3
40101b50:	0a0c92        	l8ui	a9, a12, 10
40101b53:	0a1c      	movi.n	a10, 16
40101b55:	049090        	extui	a9, a9, 0, 1
40101b58:	2099a0        	or	a9, a9, a10
40101b5b:	8a2c      	movi.n	a10, 40
40101b5d:	1088a0        	and	a8, a8, a10
40101b60:	209980        	or	a9, a9, a8
40101b63:	80af82        	movi	a8, -128
40101b66:	103380        	and	a3, a3, a8
40101b69:	209930        	or	a9, a9, a3
40101b6c:	209920        	or	a9, a9, a2
40101b6f:	0a4c92        	s8i	a9, a12, 10
40101b72:	01a6c6        	j	40102211 <main+0x2119>

                        case BIT_B_INDIRECT_HL: {

                                int     d, x;
                                        
                                if (registers == state->register_table) {
40101b75:	079e47        	bne	a14, a4, 40101b80 <main+0x1a88>

                                        d = HL;
40101b78:	041c82        	l16ui	a8, a12, 8

                                        elapsed_cycles++;
40101b7b:	ff5b      	addi.n	a15, a15, 5
40101b7d:	000486        	j	40101b93 <main+0x1a9b>

                                } else {

                                        Z80_FETCH_BYTE(pc, d);
40101b80:	f420d0        	extui	a2, a13, 0, 16
                                        d = ((char) d) + HL_IX_IY;
40101b83:	6e78      	l32i.n	a7, a14, 24

                                        elapsed_cycles++;

                                } else {

                                        Z80_FETCH_BYTE(pc, d);
40101b85:	2c2a      	add.n	a2, a12, a2
                                        d = ((char) d) + HL_IX_IY;
40101b87:	f40222        	l8ui	a2, a2, 244
40101b8a:	001782        	l16ui	a8, a7, 0

                                        pc += 2;
40101b8d:	dd2b      	addi.n	a13, a13, 2
                                        elapsed_cycles++;

                                } else {

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101b8f:	828a      	add.n	a8, a2, a8

                                        pc += 2;

                                        elapsed_cycles += 5;
40101b91:	ff9b      	addi.n	a15, a15, 9

                                }

                                READ_BYTE(d, x);
40101b93:	f42080        	extui	a2, a8, 0, 16
40101b96:	2c2a      	add.n	a2, a12, a2
40101b98:	f40222        	l8ui	a2, a2, 244
                                x &= 1 << Y(opcode);
40101b9b:	190c      	movi.n	a9, 1
40101b9d:	243330        	extui	a3, a3, 3, 3
40101ba0:	401300        	ssl	a3
40101ba3:	a13900        	sll	a3, a9
40101ba6:	103230        	and	a3, a2, a3
                                F = (x ? 0 : Z80_Z_FLAG | Z80_P_FLAG)
40101ba9:	494c      	movi.n	a9, 68
40101bab:	020c      	movi.n	a2, 0
40101bad:	832930        	moveqz	a2, a9, a3
40101bb0:	0a0c92        	l8ui	a9, a12, 10
40101bb3:	0a1c      	movi.n	a10, 16
40101bb5:	049090        	extui	a9, a9, 0, 1
40101bb8:	2099a0        	or	a9, a9, a10
40101bbb:	8a2c      	movi.n	a10, 40
40101bbd:	1088a0        	and	a8, a8, a10
40101bc0:	209980        	or	a9, a9, a8
40101bc3:	80af82        	movi	a8, -128
40101bc6:	103380        	and	a3, a3, a8
40101bc9:	209930        	or	a9, a9, a3
40101bcc:	209920        	or	a9, a9, a2

                                        elapsed_cycles += 5;

                                }

                                READ_BYTE(d, x);
40101bcf:	7f3b      	addi.n	a7, a15, 3
                                x &= 1 << Y(opcode);
                                F = (x ? 0 : Z80_Z_FLAG | Z80_P_FLAG)
40101bd1:	0a4c92        	s8i	a9, a12, 10
40101bd4:	018e46        	j	40102211 <main+0x2119>

                        }

                        case SET_B_R: {

                                R(Z(opcode)) |= 1 << Y(opcode);
40101bd7:	242030        	extui	a2, a3, 0, 3
40101bda:	a0e2e0        	addx4	a14, a2, a14
40101bdd:	0e28      	l32i.n	a2, a14, 0
40101bdf:	180c      	movi.n	a8, 1
40101be1:	243330        	extui	a3, a3, 3, 3
40101be4:	401300        	ssl	a3
40101be7:	a13800        	sll	a3, a8
40101bea:	000282        	l8ui	a8, a2, 0
40101bed:	203380        	or	a3, a3, a8
40101bf0:	004232        	s8i	a3, a2, 0
40101bf3:	018686        	j	40102211 <main+0x2119>
40101bf6:	f0a082        	movi	a8, 240
40101bf9:	217330        	srai	a7, a3, 3

                        case SET_B_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
40101bfc:	219e47        	bne	a14, a4, 40101c21 <main+0x1b29>

                                        READ_BYTE(HL, x);
40101bff:	041c22        	l16ui	a2, a12, 8
                                        x |= 1 << Y(opcode);
40101c02:	247070        	extui	a7, a7, 0, 3

                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
40101c05:	2c2a      	add.n	a2, a12, a2
40101c07:	828a      	add.n	a8, a2, a8
40101c09:	040822        	l8ui	a2, a8, 4
                                        x |= 1 << Y(opcode);
40101c0c:	130c      	movi.n	a3, 1
40101c0e:	401700        	ssl	a7
40101c11:	a17300        	sll	a7, a3
40101c14:	207720        	or	a7, a7, a2
                                        WRITE_BYTE(HL, x);
40101c17:	044872        	s8i	a7, a8, 4

                                        elapsed_cycles++;
40101c1a:	7fbb      	addi.n	a7, a15, 11
40101c1c:	017c46        	j	40102211 <main+0x2119>
40101c1f:	d00000        	subx2	a0, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101c22:	2af420        	excw
40101c25:	922c      	movi.n	a2, 41
                                        d = ((char) d) + HL_IX_IY;
40101c27:	28f402        	excw
40101c2a:	6e          	.byte 0x6e

                                        READ_BYTE(d, x);
                                        x |= 1 << Y(opcode);
40101c2b:	247070        	extui	a7, a7, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101c2e:	001222        	l16ui	a2, a2, 0

                                        READ_BYTE(d, x);
                                        x |= 1 << Y(opcode);
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
40101c31:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101c34:	292a      	add.n	a2, a9, a2

                                        READ_BYTE(d, x);
40101c36:	f42020        	extui	a2, a2, 0, 16
40101c39:	2c2a      	add.n	a2, a12, a2
40101c3b:	228a      	add.n	a2, a2, a8
40101c3d:	040282        	l8ui	a8, a2, 4
                                        x |= 1 << Y(opcode);
40101c40:	190c      	movi.n	a9, 1
40101c42:	401700        	ssl	a7
40101c45:	a17900        	sll	a7, a9
40101c48:	207870        	or	a7, a8, a7
                                        WRITE_BYTE(d, x);
40101c4b:	747070        	extui	a7, a7, 0, 8
40101c4e:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
40101c51:	076326        	beqi	a3, 6, 40101c5c <main+0x1b64>

                                                R(Z(opcode)) = x;
40101c54:	a033e0        	addx4	a3, a3, a14
40101c57:	0328      	l32i.n	a2, a3, 0
40101c59:	004272        	s8i	a7, a2, 0

                                        pc += 2;
40101c5c:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
40101c5e:	7ffb      	addi.n	a7, a15, 15
40101c60:	016b46        	j	40102211 <main+0x2119>

                        }

                        case RES_B_R: {

                                R(Z(opcode)) &= ~(1 << Y(opcode));
40101c63:	242030        	extui	a2, a3, 0, 3
40101c66:	a0e2e0        	addx4	a14, a2, a14
40101c69:	0e28      	l32i.n	a2, a14, 0
40101c6b:	e87c      	movi.n	a8, -2
40101c6d:	243330        	extui	a3, a3, 3, 3
40101c70:	401300        	ssl	a3
40101c73:	813880        	src	a3, a8, a8
40101c76:	000282        	l8ui	a8, a2, 0
40101c79:	103380        	and	a3, a3, a8
40101c7c:	004232        	s8i	a3, a2, 0
40101c7f:	016386        	j	40102211 <main+0x2119>
40101c82:	f0a082        	movi	a8, 240
40101c85:	217330        	srai	a7, a3, 3

                        case RES_B_INDIRECT_HL: {

                                int     x;

                                if (registers == state->register_table) {
40101c88:	209e47        	bne	a14, a4, 40101cac <main+0x1bb4>

                                        READ_BYTE(HL, x);
40101c8b:	041c22        	l16ui	a2, a12, 8
                                        x &= ~(1 << Y(opcode));
40101c8e:	247070        	extui	a7, a7, 0, 3

                                int     x;

                                if (registers == state->register_table) {

                                        READ_BYTE(HL, x);
40101c91:	2c2a      	add.n	a2, a12, a2
40101c93:	828a      	add.n	a8, a2, a8
40101c95:	040822        	l8ui	a2, a8, 4
                                        x &= ~(1 << Y(opcode));
40101c98:	e37c      	movi.n	a3, -2
40101c9a:	401700        	ssl	a7
40101c9d:	817330        	src	a7, a3, a3
40101ca0:	107720        	and	a7, a7, a2
                                        WRITE_BYTE(HL, x);
40101ca3:	044872        	s8i	a7, a8, 4

                                        elapsed_cycles++;
40101ca6:	7fbb      	addi.n	a7, a15, 11
40101ca8:	015946        	j	40102211 <main+0x2119>
40101cab:	20d000        	or	a13, a0, a0

                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
40101cae:	2c2af4        	excw
                                        d = ((char) d) + HL_IX_IY;
40101cb1:	f40292        	l8ui	a9, a2, 244
40101cb4:	6e28      	l32i.n	a2, a14, 24

                                        READ_BYTE(d, x);
                                        x &= ~(1 << Y(opcode));
40101cb6:	247070        	extui	a7, a7, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101cb9:	001222        	l16ui	a2, a2, 0

                                        READ_BYTE(d, x);
                                        x &= ~(1 << Y(opcode));
                                        WRITE_BYTE(d, x);

                                        if (Z(opcode) != INDIRECT_HL)
40101cbc:	243030        	extui	a3, a3, 0, 3
                                } else {

                                        int     d;

                                        Z80_FETCH_BYTE(pc, d);
                                        d = ((char) d) + HL_IX_IY;
40101cbf:	292a      	add.n	a2, a9, a2

                                        READ_BYTE(d, x);
40101cc1:	f42020        	extui	a2, a2, 0, 16
40101cc4:	2c2a      	add.n	a2, a12, a2
40101cc6:	228a      	add.n	a2, a2, a8
40101cc8:	040282        	l8ui	a8, a2, 4
                                        x &= ~(1 << Y(opcode));
40101ccb:	e97c      	movi.n	a9, -2
40101ccd:	401700        	ssl	a7
40101cd0:	817990        	src	a7, a9, a9
                                        WRITE_BYTE(d, x);
40101cd3:	107870        	and	a7, a8, a7
40101cd6:	044272        	s8i	a7, a2, 4

                                        if (Z(opcode) != INDIRECT_HL)
40101cd9:	076326        	beqi	a3, 6, 40101ce4 <main+0x1bec>

                                                R(Z(opcode)) = x;
40101cdc:	a033e0        	addx4	a3, a3, a14
40101cdf:	0328      	l32i.n	a2, a3, 0
40101ce1:	004272        	s8i	a7, a2, 0

                                        pc += 2;
40101ce4:	dd2b      	addi.n	a13, a13, 2

                                        elapsed_cycles += 5;
40101ce6:	7ffb      	addi.n	a7, a15, 15
40101ce8:	014946        	j	40102211 <main+0x2119>

                        case JP_NN: {

                                int     nn;

                                Z80_FETCH_WORD(pc, nn);
40101ceb:	f420d0        	extui	a2, a13, 0, 16
40101cee:	dd1b      	addi.n	a13, a13, 1
40101cf0:	f4d0d0        	extui	a13, a13, 0, 16
40101cf3:	dcda      	add.n	a13, a12, a13
40101cf5:	2c2a      	add.n	a2, a12, a2
40101cf7:	f40dd2        	l8ui	a13, a13, 244
40101cfa:	f40222        	l8ui	a2, a2, 244
40101cfd:	11dd80        	slli	a13, a13, 8
40101d00:	20dd20        	or	a13, a13, a2
                                pc = nn;

                                elapsed_cycles += 6;
40101d03:	7fab      	addi.n	a7, a15, 10
40101d05:	014206        	j	40102211 <main+0x2119>

                        case JP_CC_NN: {

                                int     nn;

                                if (CC(Y(opcode))) {
40101d08:	243330        	extui	a3, a3, 3, 3
40101d0b:	f8ec21        	l32r	a2, 401000bc <_stext+0xbc>
40101d0e:	1133e0        	slli	a3, a3, 2
40101d11:	223a      	add.n	a2, a2, a3
40101d13:	0a0c72        	l8ui	a7, a12, 10
40101d16:	0228      	l32i.n	a2, a2, 0
40101d18:	302720        	xor	a2, a7, a2
40101d1b:	f8e971        	l32r	a7, 401000c0 <_stext+0xc0>
40101d1e:	373a      	add.n	a3, a7, a3
40101d20:	0338      	l32i.n	a3, a3, 0
40101d22:	1a0237        	bnone	a2, a3, 40101d40 <main+0x1c48>

                                        Z80_FETCH_WORD(pc, nn);
40101d25:	f420d0        	extui	a2, a13, 0, 16
40101d28:	dd1b      	addi.n	a13, a13, 1
40101d2a:	f4d0d0        	extui	a13, a13, 0, 16
40101d2d:	dcda      	add.n	a13, a12, a13
40101d2f:	2c2a      	add.n	a2, a12, a2
40101d31:	f40dd2        	l8ui	a13, a13, 244
40101d34:	f40222        	l8ui	a2, a2, 244
40101d37:	11dd80        	slli	a13, a13, 8
40101d3a:	20dd20        	or	a13, a13, a2
40101d3d:	000046        	j	40101d42 <main+0x1c4a>

                                        Z80_FETCH_WORD(pc, nn);

#endif          

                                        pc += 2;
40101d40:	dd2b      	addi.n	a13, a13, 2

                                }

                                elapsed_cycles += 6;
40101d42:	7fab      	addi.n	a7, a15, 10
40101d44:	013246        	j	40102211 <main+0x2119>

                        case JR_E: {

                                int     e;
                                
                                Z80_FETCH_BYTE(pc, e);
40101d47:	f420d0        	extui	a2, a13, 0, 16
40101d4a:	2c2a      	add.n	a2, a12, a2
                                e = (char) e;
40101d4c:	f40222        	l8ui	a2, a2, 244
                                pc += e + 1;

                                elapsed_cycles += 8;
40101d4f:	7fcb      	addi.n	a7, a15, 12

                                int     e;
                                
                                Z80_FETCH_BYTE(pc, e);
                                e = (char) e;
                                pc += e + 1;
40101d51:	221b      	addi.n	a2, a2, 1
40101d53:	dd2a      	add.n	a13, a13, a2
40101d55:	012e06        	j	40102211 <main+0x2119>

                        case JR_DD_E: {

                                int     e;

                                if (DD(Q(opcode))) {
40101d58:	143330        	extui	a3, a3, 3, 2
40101d5b:	f8d821        	l32r	a2, 401000bc <_stext+0xbc>
40101d5e:	1133e0        	slli	a3, a3, 2
40101d61:	223a      	add.n	a2, a2, a3
40101d63:	0a0c72        	l8ui	a7, a12, 10
40101d66:	0228      	l32i.n	a2, a2, 0
40101d68:	302720        	xor	a2, a7, a2
40101d6b:	f8d571        	l32r	a7, 401000c0 <_stext+0xc0>
40101d6e:	373a      	add.n	a3, a7, a3
40101d70:	0338      	l32i.n	a3, a3, 0
40101d72:	100237        	bnone	a2, a3, 40101d86 <main+0x1c8e>
                                
                                        Z80_FETCH_BYTE(pc, e);
40101d75:	f420d0        	extui	a2, a13, 0, 16
40101d78:	2c2a      	add.n	a2, a12, a2
                                        e = (char) e;
40101d7a:	f40222        	l8ui	a2, a2, 244
                                        pc += e + 1;

                                        elapsed_cycles += 8;
40101d7d:	7fcb      	addi.n	a7, a15, 12

                                if (DD(Q(opcode))) {
                                
                                        Z80_FETCH_BYTE(pc, e);
                                        e = (char) e;
                                        pc += e + 1;
40101d7f:	221b      	addi.n	a2, a2, 1
40101d81:	dd2a      	add.n	a13, a13, a2
40101d83:	012286        	j	40102211 <main+0x2119>

                                        Z80_FETCH_BYTE(pc, e);

#endif

                                        pc++;
40101d86:	dd1b      	addi.n	a13, a13, 1

                                        elapsed_cycles += 3;
40101d88:	7f7b      	addi.n	a7, a15, 7
40101d8a:	0120c6        	j	40102211 <main+0x2119>

                        }                                            

                        case JP_HL: {

                                pc = HL_IX_IY;
40101d8d:	6e28      	l32i.n	a2, a14, 24
40101d8f:	0012d2        	l16ui	a13, a2, 0
40101d92:	011ec6        	j	40102211 <main+0x2119>

                        case DJNZ_E: {

                                int     e;
                                
                                if (--B) {
40101d95:	050c22        	l8ui	a2, a12, 5
40101d98:	220b      	addi.n	a2, a2, -1
40101d9a:	742020        	extui	a2, a2, 0, 8
40101d9d:	054c22        	s8i	a2, a12, 5
40101da0:	f28c      	beqz.n	a2, 40101db3 <main+0x1cbb>
                                
                                        Z80_FETCH_BYTE(pc, e);
40101da2:	f420d0        	extui	a2, a13, 0, 16
40101da5:	2c2a      	add.n	a2, a12, a2
                                        e = (char) e;
40101da7:	f40222        	l8ui	a2, a2, 244
                                        pc += e + 1;

                                        elapsed_cycles += 9;
40101daa:	7fdb      	addi.n	a7, a15, 13
                                
                                if (--B) {
                                
                                        Z80_FETCH_BYTE(pc, e);
                                        e = (char) e;
                                        pc += e + 1;
40101dac:	221b      	addi.n	a2, a2, 1
40101dae:	dd2a      	add.n	a13, a13, a2
40101db0:	011746        	j	40102211 <main+0x2119>

                                        Z80_FETCH_BYTE(pc, e);

#endif

                                        pc++;
40101db3:	dd1b      	addi.n	a13, a13, 1

                                        elapsed_cycles += 4;
40101db5:	7f8b      	addi.n	a7, a15, 8
40101db7:	011586        	j	40102211 <main+0x2119>

                        case CALL_NN: {

                                int     nn;

                                READ_NN(nn);
40101dba:	f420d0        	extui	a2, a13, 0, 16
40101dbd:	2c2a      	add.n	a2, a12, a2
40101dbf:	f40232        	l8ui	a3, a2, 244
40101dc2:	2d1b      	addi.n	a2, a13, 1
40101dc4:	f42020        	extui	a2, a2, 0, 16
40101dc7:	2c2a      	add.n	a2, a12, a2
40101dc9:	f40282        	l8ui	a8, a2, 244
                                PUSH(pc);
40101dcc:	081c22        	l16ui	a2, a12, 16

                        case CALL_NN: {

                                int     nn;

                                READ_NN(nn);
40101dcf:	dd2b      	addi.n	a13, a13, 2
                                PUSH(pc);
40101dd1:	fec222        	addi	a2, a2, -2
40101dd4:	f42020        	extui	a2, a2, 0, 16
40101dd7:	7c2a      	add.n	a7, a12, a2
40101dd9:	085c22        	s16i	a2, a12, 16
40101ddc:	221b      	addi.n	a2, a2, 1
40101dde:	f42020        	extui	a2, a2, 0, 16
40101de1:	f447d2        	s8i	a13, a7, 244

                        case CALL_NN: {

                                int     nn;

                                READ_NN(nn);
40101de4:	118880        	slli	a8, a8, 8
                                PUSH(pc);
40101de7:	21d8d0        	srai	a13, a13, 8
40101dea:	2c2a      	add.n	a2, a12, a2
40101dec:	f442d2        	s8i	a13, a2, 244
                                pc = nn;

                                elapsed_cycles++;
40101def:	11cf72        	addi	a7, a15, 17

                                int     nn;

                                READ_NN(nn);
                                PUSH(pc);
                                pc = nn;
40101df2:	20d830        	or	a13, a8, a3
40101df5:	010606        	j	40102211 <main+0x2119>

                        case CALL_CC_NN: {

                                int     nn;

                                if (CC(Y(opcode))) {
40101df8:	243330        	extui	a3, a3, 3, 3
40101dfb:	f8b021        	l32r	a2, 401000bc <_stext+0xbc>
40101dfe:	1133e0        	slli	a3, a3, 2
40101e01:	223a      	add.n	a2, a2, a3
40101e03:	0228      	l32i.n	a2, a2, 0
40101e05:	0a0c72        	l8ui	a7, a12, 10
40101e08:	307720        	xor	a7, a7, a2
40101e0b:	f8ad21        	l32r	a2, 401000c0 <_stext+0xc0>
40101e0e:	323a      	add.n	a3, a2, a3
40101e10:	0338      	l32i.n	a3, a3, 0
40101e12:	2d2b      	addi.n	a2, a13, 2
40101e14:	3c0737        	bnone	a7, a3, 40101e54 <main+0x1d5c>

                                        READ_NN(nn);
40101e17:	f430d0        	extui	a3, a13, 0, 16
40101e1a:	3c3a      	add.n	a3, a12, a3
40101e1c:	f40382        	l8ui	a8, a3, 244
                                        PUSH(pc);
40101e1f:	081c32        	l16ui	a3, a12, 16

                                int     nn;

                                if (CC(Y(opcode))) {

                                        READ_NN(nn);
40101e22:	dd1b      	addi.n	a13, a13, 1
40101e24:	f4d0d0        	extui	a13, a13, 0, 16
                                        PUSH(pc);
40101e27:	fec332        	addi	a3, a3, -2
40101e2a:	f43030        	extui	a3, a3, 0, 16

                                int     nn;

                                if (CC(Y(opcode))) {

                                        READ_NN(nn);
40101e2d:	dcda      	add.n	a13, a12, a13
40101e2f:	f40dd2        	l8ui	a13, a13, 244
                                        PUSH(pc);
40101e32:	7c3a      	add.n	a7, a12, a3
40101e34:	085c32        	s16i	a3, a12, 16
40101e37:	331b      	addi.n	a3, a3, 1
40101e39:	f43030        	extui	a3, a3, 0, 16
40101e3c:	f44722        	s8i	a2, a7, 244

                                int     nn;

                                if (CC(Y(opcode))) {

                                        READ_NN(nn);
40101e3f:	11dd80        	slli	a13, a13, 8
                                        PUSH(pc);
40101e42:	3c3a      	add.n	a3, a12, a3
40101e44:	212820        	srai	a2, a2, 8
40101e47:	f44322        	s8i	a2, a3, 244
                                        pc = nn;

                                        elapsed_cycles++;
40101e4a:	11cf72        	addi	a7, a15, 17

                                if (CC(Y(opcode))) {

                                        READ_NN(nn);
                                        PUSH(pc);
                                        pc = nn;
40101e4d:	20dd80        	or	a13, a13, a8
40101e50:	00ef46        	j	40102211 <main+0x2119>
40101e53:	02dd00        	excw

#endif

                                        pc += 2;

                                        elapsed_cycles += 6;
40101e56:	7fab      	addi.n	a7, a15, 10
40101e58:	00ed46        	j	40102211 <main+0x2119>

                        }

                        case RET: {

                                POP(pc);
40101e5b:	081c22        	l16ui	a2, a12, 16
40101e5e:	7fab      	addi.n	a7, a15, 10
40101e60:	321b      	addi.n	a3, a2, 1
40101e62:	f43030        	extui	a3, a3, 0, 16
40101e65:	3c3a      	add.n	a3, a12, a3
40101e67:	f403d2        	l8ui	a13, a3, 244
40101e6a:	3c2a      	add.n	a3, a12, a2
40101e6c:	f40332        	l8ui	a3, a3, 244
40101e6f:	11dd80        	slli	a13, a13, 8
40101e72:	222b      	addi.n	a2, a2, 2
40101e74:	20dd30        	or	a13, a13, a3
40101e77:	085c22        	s16i	a2, a12, 16
40101e7a:	00e4c6        	j	40102211 <main+0x2119>

                        }
                                                  
                        case RET_CC: {

                                if (CC(Y(opcode))) {
40101e7d:	243330        	extui	a3, a3, 3, 3
40101e80:	f88f21        	l32r	a2, 401000bc <_stext+0xbc>
40101e83:	1133e0        	slli	a3, a3, 2
40101e86:	223a      	add.n	a2, a2, a3
40101e88:	0a0c82        	l8ui	a8, a12, 10
40101e8b:	0228      	l32i.n	a2, a2, 0
40101e8d:	302820        	xor	a2, a8, a2
40101e90:	f88c81        	l32r	a8, 401000c0 <_stext+0xc0>
40101e93:	383a      	add.n	a3, a8, a3
40101e95:	0338      	l32i.n	a3, a3, 0
40101e97:	1e0237        	bnone	a2, a3, 40101eb9 <main+0x1dc1>

                                        POP(pc);
40101e9a:	081c22        	l16ui	a2, a12, 16
40101e9d:	7fab      	addi.n	a7, a15, 10
40101e9f:	321b      	addi.n	a3, a2, 1
40101ea1:	f43030        	extui	a3, a3, 0, 16
40101ea4:	3c3a      	add.n	a3, a12, a3
40101ea6:	f403d2        	l8ui	a13, a3, 244
40101ea9:	3c2a      	add.n	a3, a12, a2
40101eab:	f40332        	l8ui	a3, a3, 244
40101eae:	11dd80        	slli	a13, a13, 8
40101eb1:	222b      	addi.n	a2, a2, 2
40101eb3:	20dd30        	or	a13, a13, a3
40101eb6:	085c22        	s16i	a2, a12, 16

                                }
                                elapsed_cycles++;
40101eb9:	771b      	addi.n	a7, a7, 1
40101ebb:	00d486        	j	40102211 <main+0x2119>

                        }

                        case RETI_RETN: {

                                state->iff1 = state->iff2;
40101ebe:	bc28      	l32i.n	a2, a12, 44
                                POP(pc);        
40101ec0:	7fab      	addi.n	a7, a15, 10

                        }

                        case RETI_RETN: {

                                state->iff1 = state->iff2;
40101ec2:	ac29      	s32i.n	a2, a12, 40
                                POP(pc);        
40101ec4:	081c22        	l16ui	a2, a12, 16
40101ec7:	321b      	addi.n	a3, a2, 1
40101ec9:	f43030        	extui	a3, a3, 0, 16
40101ecc:	3c3a      	add.n	a3, a12, a3
40101ece:	f403d2        	l8ui	a13, a3, 244
40101ed1:	3c2a      	add.n	a3, a12, a2
40101ed3:	f40332        	l8ui	a3, a3, 244
40101ed6:	11dd80        	slli	a13, a13, 8
40101ed9:	222b      	addi.n	a2, a2, 2
40101edb:	20dd30        	or	a13, a13, a3
40101ede:	085c22        	s16i	a2, a12, 16
40101ee1:	00cb06        	j	40102211 <main+0x2119>

                        }

                        case RST_P: {

                                PUSH(pc);
40101ee4:	081c22        	l16ui	a2, a12, 16
                                pc = RST_TABLE[Y(opcode)];
40101ee7:	243330        	extui	a3, a3, 3, 3

                        }

                        case RST_P: {

                                PUSH(pc);
40101eea:	fec222        	addi	a2, a2, -2
40101eed:	f42020        	extui	a2, a2, 0, 16
40101ef0:	7c2a      	add.n	a7, a12, a2
40101ef2:	085c22        	s16i	a2, a12, 16
40101ef5:	221b      	addi.n	a2, a2, 1
40101ef7:	f42020        	extui	a2, a2, 0, 16
40101efa:	f447d2        	s8i	a13, a7, 244
40101efd:	2c2a      	add.n	a2, a12, a2
40101eff:	21d8d0        	srai	a13, a13, 8
40101f02:	f442d2        	s8i	a13, a2, 244
                                pc = RST_TABLE[Y(opcode)];
40101f05:	f86f21        	l32r	a2, 401000c4 <_stext+0xc4>
                                elapsed_cycles++;
40101f08:	7fbb      	addi.n	a7, a15, 11
                        }

                        case RST_P: {

                                PUSH(pc);
                                pc = RST_TABLE[Y(opcode)];
40101f0a:	a03320        	addx4	a3, a3, a2
40101f0d:	03d8      	l32i.n	a13, a3, 0
40101f0f:	00bf86        	j	40102211 <main+0x2119>
                        case IN_A_N: {

                                int     n;

                                READ_N(n);
                                Z80_INPUT_BYTE(n, A);
40101f12:	096142        	s32i	a4, a1, 36
40101f15:	0a6152        	s32i	a5, a1, 40
40101f18:	086162        	s32i	a6, a1, 32
40101f1b:	0032c5        	call0	40102248 <SystemCall$constprop$3>

                        case IN_A_N: {

                                int     n;

                                READ_N(n);
40101f1e:	dd1b      	addi.n	a13, a13, 1
                                Z80_INPUT_BYTE(n, A);

                                elapsed_cycles += 4;
40101f20:	7fbb      	addi.n	a7, a15, 11
40101f22:	9148      	l32i.n	a4, a1, 36
40101f24:	a158      	l32i.n	a5, a1, 40
40101f26:	8168      	l32i.n	a6, a1, 32
40101f28:	00b946        	j	40102211 <main+0x2119>
                        }       

                        case IN_R_C: {

                                int     x;                                           
                                Z80_INPUT_BYTE(C, x);
40101f2b:	076132        	s32i	a3, a1, 28
40101f2e:	096142        	s32i	a4, a1, 36
40101f31:	0a6152        	s32i	a5, a1, 40
40101f34:	8169      	s32i.n	a6, a1, 32
40101f36:	003105        	call0	40102248 <SystemCall$constprop$3>
                                if (Y(opcode) != INDIRECT_HL) 
40101f39:	7138      	l32i.n	a3, a1, 28
40101f3b:	9148      	l32i.n	a4, a1, 36
40101f3d:	243330        	extui	a3, a3, 3, 3
40101f40:	a158      	l32i.n	a5, a1, 40
40101f42:	8168      	l32i.n	a6, a1, 32
40101f44:	096326        	beqi	a3, 6, 40101f51 <main+0x1e59>

                                        R(Y(opcode)) = x;
40101f47:	a033e0        	addx4	a3, a3, a14
40101f4a:	0328      	l32i.n	a2, a3, 0
40101f4c:	030c      	movi.n	a3, 0
40101f4e:	004232        	s8i	a3, a2, 0

                                F = SZYXP_FLAGS_TABLE[x] | (F & Z80_C_FLAG);
40101f51:	f858e1        	l32r	a14, 401000b4 <_stext+0xb4>
40101f54:	0a0c32        	l8ui	a3, a12, 10
40101f57:	000e22        	l8ui	a2, a14, 0
40101f5a:	043030        	extui	a3, a3, 0, 1
40101f5d:	202320        	or	a2, a3, a2
40101f60:	0a4c22        	s8i	a2, a12, 10

                                elapsed_cycles += 4;
40101f63:	7f8b      	addi.n	a7, a15, 8
40101f65:	00aa06        	j	40102211 <main+0x2119>

                        case INI_IND: {

                                int     x, f;

                                Z80_INPUT_BYTE(C, x);
40101f68:	7139      	s32i.n	a3, a1, 28
40101f6a:	9149      	s32i.n	a4, a1, 36
40101f6c:	a159      	s32i.n	a5, a1, 40
40101f6e:	086162        	s32i	a6, a1, 32
40101f71:	002d45        	call0	40102248 <SystemCall$constprop$3>
                                WRITE_BYTE(HL, x);
40101f74:	041c72        	l16ui	a7, a12, 8
40101f77:	2188      	l32i.n	a8, a1, 8
40101f79:	2c7a      	add.n	a2, a12, a7
40101f7b:	f44282        	s8i	a8, a2, 244

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
40101f7e:	050c22        	l8ui	a2, a12, 5
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
40101f81:	21b8      	l32i.n	a11, a1, 8
                                int     x, f;

                                Z80_INPUT_BYTE(C, x);
                                WRITE_BYTE(HL, x);

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
40101f83:	220b      	addi.n	a2, a2, -1
40101f85:	742020        	extui	a2, a2, 0, 8
40101f88:	054c22        	s8i	a2, a12, 5
40101f8b:	f84881        	l32r	a8, 401000ac <_stext+0xac>
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                if (opcode == OPCODE_INI) {
40101f8e:	7138      	l32i.n	a3, a1, 28
                                int     x, f;

                                Z80_INPUT_BYTE(C, x);
                                WRITE_BYTE(HL, x);

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
40101f90:	882a      	add.n	a8, a8, a2
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
40101f92:	21a6b0        	srai	a10, a11, 6
                                if (opcode == OPCODE_INI) {
40101f95:	a2a0b2        	movi	a11, 162

                                Z80_INPUT_BYTE(C, x);
                                WRITE_BYTE(HL, x);

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
40101f98:	000892        	l8ui	a9, a8, 0
                                if (opcode == OPCODE_INI) {
40101f9b:	9148      	l32i.n	a4, a1, 36
40101f9d:	040c82        	l8ui	a8, a12, 4
40101fa0:	a158      	l32i.n	a5, a1, 40
40101fa2:	8168      	l32i.n	a6, a1, 32
40101fa4:	1293b7        	bne	a3, a11, 40101fba <main+0x1ec2>

                                        HL++;
                                        x += (C + 1) & 0xff;
40101fa7:	21e8      	l32i.n	a14, a1, 8
40101fa9:	881b      	addi.n	a8, a8, 1
40101fab:	748080        	extui	a8, a8, 0, 8

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                if (opcode == OPCODE_INI) {

                                        HL++;
40101fae:	771b      	addi.n	a7, a7, 1
                                        x += (C + 1) & 0xff;
40101fb0:	ee8a      	add.n	a14, a14, a8

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                if (opcode == OPCODE_INI) {

                                        HL++;
40101fb2:	045c72        	s16i	a7, a12, 8
                                        x += (C + 1) & 0xff;
40101fb5:	21e9      	s32i.n	a14, a1, 8
40101fb7:	0003c6        	j	40101fca <main+0x1ed2>

                                } else {

                                        HL--;
                                        x += (C - 1) & 0xff;
40101fba:	2138      	l32i.n	a3, a1, 8
40101fbc:	880b      	addi.n	a8, a8, -1
40101fbe:	748080        	extui	a8, a8, 0, 8
                                        HL++;
                                        x += (C + 1) & 0xff;

                                } else {

                                        HL--;
40101fc1:	770b      	addi.n	a7, a7, -1
                                        x += (C - 1) & 0xff;
40101fc3:	338a      	add.n	a3, a3, a8
                                        HL++;
                                        x += (C + 1) & 0xff;

                                } else {

                                        HL--;
40101fc5:	045c72        	s16i	a7, a12, 8
                                        x += (C - 1) & 0xff;
40101fc8:	2139      	s32i.n	a3, a1, 8

                                }       
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40101fca:	2178      	l32i.n	a7, a1, 8
40101fcc:	00a182        	movi	a8, 0x100
40101fcf:	108780        	and	a8, a7, a8
40101fd2:	131c      	movi.n	a3, 17
40101fd4:	070c      	movi.n	a7, 0
40101fd6:	833780        	moveqz	a3, a7, a8
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
40101fd9:	2188      	l32i.n	a8, a1, 8
                                int     x, f;

                                Z80_INPUT_BYTE(C, x);
                                WRITE_BYTE(HL, x);

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
40101fdb:	209a90        	or	a9, a10, a9
                                        HL--;
                                        x += (C - 1) & 0xff;

                                }       
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
40101fde:	247080        	extui	a7, a8, 0, 3
40101fe1:	302720        	xor	a2, a7, a2
40101fe4:	f83471        	l32r	a7, 401000b4 <_stext+0xb4>
40101fe7:	272a      	add.n	a2, a7, a2
                                        & Z80_P_FLAG;
40101fe9:	0002a2        	l8ui	a10, a2, 0
40101fec:	420c      	movi.n	a2, 4
40101fee:	10aa20        	and	a10, a10, a2

                                        HL--;
                                        x += (C - 1) & 0xff;

                                }       
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40101ff1:	20a9a0        	or	a10, a9, a10
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
40101ff4:	20aa30        	or	a10, a10, a3
                                        & Z80_P_FLAG;
                                F = f;
40101ff7:	0a4ca2        	s8i	a10, a12, 10

                                elapsed_cycles += 5;
40101ffa:	7fcb      	addi.n	a7, a15, 12
40101ffc:	008446        	j	40102211 <main+0x2119>
                                p = (pc - 2) & 0xffff;
                                q = (pc - 1) & 0xffff;

#endif                          

                                d = opcode == OPCODE_INIR ? +1 : -1;
40101fff:	b2a072        	movi	a7, 178
40102002:	c03370        	sub	a3, a3, a7
40102005:	01a082        	movi	a8, 1
40102008:	ffaf72        	movi	a7, -1
4010200b:	938730        	movnez	a8, a7, a3

                                b = B;
                                hl = HL;

                                r -= 2;
4010200e:	802270        	add	a2, a2, a7

#endif                          

                                d = opcode == OPCODE_INIR ? +1 : -1;

                                b = B;
40102011:	050ce2        	l8ui	a14, a12, 5
                                hl = HL;
40102014:	041c32        	l16ui	a3, a12, 8

                                r -= 2;
40102017:	0129      	s32i.n	a2, a1, 0
                                elapsed_cycles -= 8;
40102019:	fccf72        	addi	a7, a15, -4
                                for ( ; ; ) {

                                        r += 2;
4010201c:	0198      	l32i.n	a9, a1, 0
                
                                        Z80_INPUT_BYTE(C, x);
4010201e:	7139      	s32i.n	a3, a1, 28

                                r -= 2;
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;
40102020:	992b      	addi.n	a9, a9, 2
                
                                        Z80_INPUT_BYTE(C, x);
40102022:	9149      	s32i.n	a4, a1, 36
40102024:	a159      	s32i.n	a5, a1, 40
40102026:	8169      	s32i.n	a6, a1, 32
40102028:	5179      	s32i.n	a7, a1, 20
4010202a:	6189      	s32i.n	a8, a1, 24

                                r -= 2;
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;
4010202c:	0199      	s32i.n	a9, a1, 0
                
                                        Z80_INPUT_BYTE(C, x);
4010202e:	002185        	call0	40102248 <SystemCall$constprop$3>
                                        Z80_WRITE_BYTE(hl, x);
40102031:	7138      	l32i.n	a3, a1, 28
40102033:	31a8      	l32i.n	a10, a1, 12
40102035:	f42030        	extui	a2, a3, 0, 16
40102038:	2c2a      	add.n	a2, a12, a2
4010203a:	f442a2        	s8i	a10, a2, 244

                                        hl += d;
4010203d:	6188      	l32i.n	a8, a1, 24

                                        if (--b) 
4010203f:	ee0b      	addi.n	a14, a14, -1
                                        r += 2;
                
                                        Z80_INPUT_BYTE(C, x);
                                        Z80_WRITE_BYTE(hl, x);

                                        hl += d;
40102041:	338a      	add.n	a3, a3, a8

                                        if (--b) 
40102043:	9148      	l32i.n	a4, a1, 36
40102045:	a158      	l32i.n	a5, a1, 40
40102047:	8168      	l32i.n	a6, a1, 32
40102049:	5178      	l32i.n	a7, a1, 20
4010204b:	9e8c      	beqz.n	a14, 40102058 <main+0x1f60>

                                        }

#endif                                  

                                        if (elapsed_cycles < number_cycles) 
4010204d:	11b8      	l32i.n	a11, a1, 4

                                        hl += d;

                                        if (--b) 

                                                elapsed_cycles += 21;
4010204f:	15c772        	addi	a7, a7, 21

                                        }

#endif                                  

                                        if (elapsed_cycles < number_cycles) 
40102052:	0aa7b7        	bge	a7, a11, 40102060 <main+0x1f68>
40102055:	fff0c6        	j	4010201c <main+0x1f24>
                                                elapsed_cycles += 21;

                                        else {

                                                f = Z80_Z_FLAG;
                                                elapsed_cycles += 16;
40102058:	10c772        	addi	a7, a7, 16

                                                elapsed_cycles += 21;

                                        else {

                                                f = Z80_Z_FLAG;
4010205b:	094c      	movi.n	a9, 64
4010205d:	000286        	j	4010206b <main+0x1f73>

                                                continue;

                                        else {

                                                f = SZYX_FLAGS_TABLE[b];
40102060:	f81321        	l32r	a2, 401000ac <_stext+0xac>
                                                pc -= 2;
40102063:	fecdd2        	addi	a13, a13, -2

                                                continue;

                                        else {

                                                f = SZYX_FLAGS_TABLE[b];
40102066:	22ea      	add.n	a2, a2, a14
40102068:	000292        	l8ui	a9, a2, 0

                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += (C + d) & 0xff;
4010206b:	040c22        	l8ui	a2, a12, 4
                                } 

                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
4010206e:	31a8      	l32i.n	a10, a1, 12
                                x += (C + d) & 0xff;
40102070:	228a      	add.n	a2, a2, a8
40102072:	742020        	extui	a2, a2, 0, 8

                                        }

                                } 

                                HL = hl;
40102075:	045c32        	s16i	a3, a12, 8
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
40102078:	2136a0        	srai	a3, a10, 6
                                x += (C + d) & 0xff;
4010207b:	aa2a      	add.n	a10, a10, a2
4010207d:	31a9      	s32i.n	a10, a1, 12
                                f |= x & 0x0100 ? HC_FLAGS : 0;
4010207f:	31b8      	l32i.n	a11, a1, 12
                                } 

                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
40102081:	209930        	or	a9, a9, a3
                                x += (C + d) & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
40102084:	2430b0        	extui	a3, a11, 0, 3
                                        }

                                } 

                                HL = hl;
                                B = b;
40102087:	054ce2        	s8i	a14, a12, 5

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += (C + d) & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
4010208a:	30ee30        	xor	a14, a14, a3
4010208d:	f80931        	l32r	a3, 401000b4 <_stext+0xb4>
                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += (C + d) & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40102090:	00a1a2        	movi	a10, 0x100
40102093:	080c      	movi.n	a8, 0
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
40102095:	e3ea      	add.n	a14, a3, a14
                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += (C + d) & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40102097:	10aba0        	and	a10, a11, a10
4010209a:	121c      	movi.n	a2, 17
4010209c:	8328a0        	moveqz	a2, a8, a10
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
                                        & Z80_P_FLAG;
4010209f:	000e82        	l8ui	a8, a14, 0
401020a2:	430c      	movi.n	a3, 4
401020a4:	103830        	and	a3, a8, a3
                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += (C + d) & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
401020a7:	203930        	or	a3, a9, a3
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
401020aa:	203320        	or	a3, a3, a2
                                        & Z80_P_FLAG;
                                F = f;
401020ad:	0a4c32        	s8i	a3, a12, 10
401020b0:	005746        	j	40102211 <main+0x2119>
                        case OUT_N_A: {

                                int     n;

                                READ_N(n);
                                Z80_OUTPUT_BYTE(n, A);
401020b3:	f808e1        	l32r	a14, 401000d4 <_stext+0xd4>
401020b6:	120c      	movi.n	a2, 1

                        case OUT_N_A: {

                                int     n;

                                READ_N(n);
401020b8:	dd1b      	addi.n	a13, a13, 1
                                Z80_OUTPUT_BYTE(n, A);
401020ba:	0e29      	s32i.n	a2, a14, 0
401020bc:	005646        	j	40102219 <main+0x2121>
                                int     x;

                                x = Y(opcode) != INDIRECT_HL
                                        ? R(Y(opcode))
                                        : 0;
                                Z80_OUTPUT_BYTE(C, x);
401020bf:	f80531        	l32r	a3, 401000d4 <_stext+0xd4>
401020c2:	120c      	movi.n	a2, 1
401020c4:	0329      	s32i.n	a2, a3, 0
401020c6:	0053c6        	j	40102219 <main+0x2121>
                        case OUTI_OUTD: {

                                int     x, f;

                                READ_BYTE(HL, x);
                                Z80_OUTPUT_BYTE(C, x);
401020c9:	f80281        	l32r	a8, 401000d4 <_stext+0xd4>
401020cc:	170c      	movi.n	a7, 1
401020ce:	0879      	s32i.n	a7, a8, 0

                                HL += opcode == OPCODE_OUTI ? +1 : -1;
401020d0:	a3a082        	movi	a8, 163
401020d3:	c03380        	sub	a3, a3, a8
401020d6:	f7db81        	l32r	a8, 40100044 <_stext+0x44>

                        case OUTI_OUTD: {

                                int     x, f;

                                READ_BYTE(HL, x);
401020d9:	041642        	l16ui	a4, a6, 8
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;
401020dc:	937830        	movnez	a7, a8, a3
401020df:	374a      	add.n	a3, a7, a4

                        case OUTI_OUTD: {

                                int     x, f;

                                READ_BYTE(HL, x);
401020e1:	cc4a      	add.n	a12, a12, a4
401020e3:	f40c22        	l8ui	a2, a12, 244
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;
401020e6:	f43030        	extui	a3, a3, 0, 16

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
401020e9:	050642        	l8ui	a4, a6, 5
                                int     x, f;

                                READ_BYTE(HL, x);
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;
401020ec:	045632        	s16i	a3, a6, 8

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
401020ef:	743030        	extui	a3, a3, 0, 8
401020f2:	323a      	add.n	a3, a2, a3
                                READ_BYTE(HL, x);
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
401020f4:	440b      	addi.n	a4, a4, -1
401020f6:	f7ed71        	l32r	a7, 401000ac <_stext+0xac>
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
401020f9:	00a1a2        	movi	a10, 0x100
                                READ_BYTE(HL, x);
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
401020fc:	744040        	extui	a4, a4, 0, 8
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
401020ff:	10a3a0        	and	a10, a3, a10
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
40102102:	243030        	extui	a3, a3, 0, 3
                                READ_BYTE(HL, x);
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
40102105:	774a      	add.n	a7, a7, a4
40102107:	054642        	s8i	a4, a6, 5
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
4010210a:	304340        	xor	a4, a3, a4
4010210d:	f7e931        	l32r	a3, 401000b4 <_stext+0xb4>
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
40102110:	000772        	l8ui	a7, a7, 0
40102113:	218620        	srai	a8, a2, 6
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
40102116:	434a      	add.n	a4, a3, a4
                                READ_BYTE(HL, x);
                                Z80_OUTPUT_BYTE(C, x);

                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
40102118:	207870        	or	a7, a8, a7
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
                                        & Z80_P_FLAG;
4010211b:	000482        	l8ui	a8, a4, 0
4010211e:	430c      	movi.n	a3, 4
                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40102120:	121c      	movi.n	a2, 17
40102122:	090c      	movi.n	a9, 0
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
                                        & Z80_P_FLAG;
40102124:	103830        	and	a3, a8, a3
                                HL += opcode == OPCODE_OUTI ? +1 : -1;

                                f = SZYX_FLAGS_TABLE[--B & 0xff]
                                        | (x >> (7 - Z80_N_FLAG_SHIFT));
                                x += HL & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40102127:	8329a0        	moveqz	a2, a9, a10
4010212a:	207730        	or	a7, a7, a3
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ B]
4010212d:	202720        	or	a2, a7, a2
                                        & Z80_P_FLAG;
                                F = f;
40102130:	0a4622        	s8i	a2, a6, 10
40102133:	003886        	j	40102219 <main+0x2121>

                        case OTIR_OTDR: {

                                int     d, b, hl, x, f;

                                d = opcode == OPCODE_OTIR ? +1 : -1;
40102136:	b3a072        	movi	a7, 179
40102139:	c03370        	sub	a3, a3, a7
4010213c:	140c      	movi.n	a4, 1
4010213e:	f77c      	movi.n	a7, -1
40102140:	837430        	moveqz	a7, a4, a3
40102143:	073d      	mov.n	a3, a7

                                b = B;
40102145:	050692        	l8ui	a9, a6, 5
                                hl = HL;
40102148:	041672        	l16ui	a7, a6, 8

                                r -= 2;
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;
4010214b:	224a      	add.n	a2, a2, a4
4010214d:	0129      	s32i.n	a2, a1, 0

                                        Z80_READ_BYTE(hl, x);
4010214f:	cc7a      	add.n	a12, a12, a7
                                        Z80_OUTPUT_BYTE(C, x);

                                        hl += d;
                                        if (--b) 
40102151:	290b      	addi.n	a2, a9, -1
                                elapsed_cycles -= 8;
                                for ( ; ; ) {

                                        r += 2;

                                        Z80_READ_BYTE(hl, x);
40102153:	f40c82        	l8ui	a8, a12, 244
                                        Z80_OUTPUT_BYTE(C, x);

                                        hl += d;
40102156:	373a      	add.n	a3, a7, a3
                                        if (--b) 
40102158:	129c      	beqz.n	a2, 4010216d <main+0x2075>
4010215a:	f7de91        	l32r	a9, 401000d4 <_stext+0xd4>
                                                continue;

                                        else {

                                                f = SZYX_FLAGS_TABLE[b];
                                                pc -= 2;
4010215d:	fecdd2        	addi	a13, a13, -2
40102160:	0949      	s32i.n	a4, a9, 0

                                                continue;

                                        else {

                                                f = SZYX_FLAGS_TABLE[b];
40102162:	f7d241        	l32r	a4, 401000ac <_stext+0xac>
40102165:	442a      	add.n	a4, a4, a2
40102167:	000472        	l8ui	a7, a4, 0
4010216a:	000186        	j	40102174 <main+0x207c>
4010216d:	f7d9a1        	l32r	a10, 401000d4 <_stext+0xd4>

                                                elapsed_cycles += 21;

                                        else {

                                                f = Z80_Z_FLAG;
40102170:	074c      	movi.n	a7, 64
40102172:	0a49      	s32i.n	a4, a10, 0

                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += hl & 0xff;
40102174:	744030        	extui	a4, a3, 0, 8
40102177:	484a      	add.n	a4, a8, a4
                                f |= x & 0x0100 ? HC_FLAGS : 0;
40102179:	00a1a2        	movi	a10, 0x100
4010217c:	10a4a0        	and	a10, a4, a10
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
4010217f:	244040        	extui	a4, a4, 0, 3
                                        }

                                } 

                                HL = hl;
                                B = b;
40102182:	054622        	s8i	a2, a6, 5

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += hl & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
40102185:	302420        	xor	a2, a4, a2
40102188:	f7cb41        	l32r	a4, 401000b4 <_stext+0xb4>
                                } 

                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
4010218b:	219680        	srai	a9, a8, 6
                                x += hl & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
4010218e:	242a      	add.n	a2, a4, a2
                                } 

                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
40102190:	207970        	or	a7, a9, a7
                                x += hl & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
                                        & Z80_P_FLAG;
40102193:	000292        	l8ui	a9, a2, 0
40102196:	420c      	movi.n	a2, 4

                                        }

                                } 

                                HL = hl;
40102198:	045632        	s16i	a3, a6, 8
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += hl & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
4010219b:	080c      	movi.n	a8, 0
4010219d:	131c      	movi.n	a3, 17
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
                                        & Z80_P_FLAG;
4010219f:	102920        	and	a2, a9, a2
                                HL = hl;
                                B = b;

                                f |= x >> (7 - Z80_N_FLAG_SHIFT);
                                x += hl & 0xff;
                                f |= x & 0x0100 ? HC_FLAGS : 0;
401021a2:	8338a0        	moveqz	a3, a8, a10
401021a5:	207720        	or	a7, a7, a2
                                f |= SZYXP_FLAGS_TABLE[(x & 0x07) ^ b]
401021a8:	203730        	or	a3, a7, a3
                                        & Z80_P_FLAG;
                                F = f;
401021ab:	0a4632        	s8i	a3, a6, 10
401021ae:	0019c6        	j	40102219 <main+0x2121>
401021b1:	8d1b      	addi.n	a8, a13, 1

                                /* Special handling if the 0xcb prefix is 
                                 * prefixed by a 0xdd or 0xfd prefix.
                                 */

                                if (registers != state->register_table) {
401021b3:	0a1e47        	beq	a14, a4, 401021c1 <main+0x20c9>

                                        /* Indexed memory access routine will
                                         * correctly update pc.
                                         */

                                        Z80_FETCH_BYTE(pc + 1, opcode);
401021b6:	f48080        	extui	a8, a8, 0, 16
401021b9:	8c8a      	add.n	a8, a12, a8
401021bb:	f40832        	l8ui	a3, a8, 244
401021be:	0002c6        	j	401021cd <main+0x20d5>

                                } else {

                                        Z80_FETCH_BYTE(pc, opcode);
401021c1:	f4d0d0        	extui	a13, a13, 0, 16
401021c4:	dcda      	add.n	a13, a12, a13
                instruction = INSTRUCTION_TABLE[opcode];

emulate_next_instruction:

                elapsed_cycles += 4;
                r++;
401021c6:	0128      	l32i.n	a2, a1, 0

                                        Z80_FETCH_BYTE(pc + 1, opcode);

                                } else {

                                        Z80_FETCH_BYTE(pc, opcode);
401021c8:	f40d32        	l8ui	a3, a13, 244
                                        pc++;
401021cb:	08dd      	mov.n	a13, a8

                                }
                                instruction = CB_INSTRUCTION_TABLE[opcode];
401021cd:	f7beb1        	l32r	a11, 401000c8 <_stext+0xc8>
401021d0:	0129      	s32i.n	a2, a1, 0
401021d2:	8b3a      	add.n	a8, a11, a3
401021d4:	000882        	l8ui	a8, a8, 0
401021d7:	f84246        	j	401002e4 <main+0x1ec>

                                }

#else

                                Z80_FETCH_BYTE(pc, opcode);
401021da:	f420d0        	extui	a2, a13, 0, 16
401021dd:	2c2a      	add.n	a2, a12, a2
401021df:	f40232        	l8ui	a3, a2, 244
                                pc++;
401021e2:	dd1b      	addi.n	a13, a13, 1

                        }

                        case DD_PREFIX: {

                                registers = state->dd_register_table;
401021e4:	0aed      	mov.n	a14, a10
401021e6:	f83c86        	j	401002dc <main+0x1e4>

                                }

#else
        
                                Z80_FETCH_BYTE(pc, opcode);
401021e9:	f420d0        	extui	a2, a13, 0, 16
401021ec:	2c2a      	add.n	a2, a12, a2
401021ee:	f40232        	l8ui	a3, a2, 244
                                pc++;
401021f1:	dd1b      	addi.n	a13, a13, 1

                        }

                        case FD_PREFIX: {

                                registers = state->fd_register_table;
401021f3:	f792e1        	l32r	a14, 4010003c <_stext+0x3c>
401021f6:	f83886        	j	401002dc <main+0x1e4>
                        }

                        case ED_PREFIX: {

                                registers = state->register_table;
                                Z80_FETCH_BYTE(pc, opcode);
401021f9:	f420d0        	extui	a2, a13, 0, 16
401021fc:	2c2a      	add.n	a2, a12, a2
                                pc++;
                                instruction = ED_INSTRUCTION_TABLE[opcode];
401021fe:	f7b3e1        	l32r	a14, 401000cc <_stext+0xcc>
                        }

                        case ED_PREFIX: {

                                registers = state->register_table;
                                Z80_FETCH_BYTE(pc, opcode);
40102201:	f40232        	l8ui	a3, a2, 244
                                pc++;
40102204:	dd1b      	addi.n	a13, a13, 1
                                instruction = ED_INSTRUCTION_TABLE[opcode];
40102206:	2e3a      	add.n	a2, a14, a3
40102208:	000282        	l8ui	a8, a2, 0

                        }

                        case ED_PREFIX: {

                                registers = state->register_table;
4010220b:	04ed      	mov.n	a14, a4
4010220d:	f834c6        	j	401002e4 <main+0x1ec>
40102210:	113800        	slli	a3, a8, 16

                        }

                }

                if (elapsed_cycles >= number_cycles)
40102213:	02a737        	bge	a7, a3, 40102219 <main+0x2121>
40102216:	f82bc6        	j	401002c9 <main+0x1d1>

        }

stop_emulation:

        state->r = (state->r & 0x80) | (r & 0x7f);
40102219:	0148      	l32i.n	a4, a1, 0
4010221b:	8628      	l32i.n	a2, a6, 32
4010221d:	643040        	extui	a3, a4, 0, 7
40102220:	80a042        	movi	a4, 128
40102223:	102420        	and	a2, a4, a2
40102226:	202320        	or	a2, a3, a2
        state->pc = pc & 0xffff;
40102229:	f4d0d0        	extui	a13, a13, 0, 16

        }

stop_emulation:

        state->r = (state->r & 0x80) | (r & 0x7f);
4010222c:	8629      	s32i.n	a2, a6, 32
        state->pc = pc & 0xffff;
4010222e:	96d9      	s32i.n	a13, a6, 36
			PIN_OUT_CLEAR = _BV(2); //Turn GPIO2 light on.
		}
		Z80Emulate(&machine.state, 10000000, &machine);
		call_delay_us(1000000);
40102230:	f7a831        	l32r	a3, 401000d0 <_stext+0xd0>
40102233:	032d      	mov.n	a2, a3
40102235:	0007c5        	call0	401022b4 <delay4clk>
	} while (!machine.is_done);    
40102238:	f7a771        	l32r	a7, 401000d4 <_stext+0xd4>
4010223b:	0728      	l32i.n	a2, a7, 0
4010223d:	12cc      	bnez.n	a2, 40102242 <main+0x214a>
4010223f:	f81046        	j	40100284 <main+0x18c>
40102242:	f7d4c6        	j	40100199 <main+0xa1>
40102245:	000000        	ill

40102248 <SystemCall$constprop$3>:
}



/* Emulate CP/M bdos call 5 functions */
void ICACHE_FLASH_ATTR SystemCall (MACHINE *m) {
40102248:	d0c112        	addi	a1, a1, -48

  if (m->state.registers.byte[Z80_C] == 2) {
4010224b:	f78531        	l32r	a3, 40100060 <_stext+0x60>
}



/* Emulate CP/M bdos call 5 functions */
void ICACHE_FLASH_ATTR SystemCall (MACHINE *m) {
4010224e:	91d9      	s32i.n	a13, a1, 36
40102250:	b109      	s32i.n	a0, a1, 44
40102252:	a1c9      	s32i.n	a12, a1, 40
40102254:	81e9      	s32i.n	a14, a1, 32
40102256:	71f9      	s32i.n	a15, a1, 28

  if (m->state.registers.byte[Z80_C] == 2) {
40102258:	040322        	l8ui	a2, a3, 4
4010225b:	03dd      	mov.n	a13, a3
4010225d:	0f2266        	bnei	a2, 2, 40102270 <SystemCall$constprop$3+0x28>
    printf("%c", m->state.registers.byte[Z80_E]);
40102260:	060332        	l8ui	a3, a3, 6
40102263:	f7a321        	l32r	a2, 401000f0 <_stext+0xf0>
40102266:	f7a301        	l32r	a0, 401000f4 <_stext+0xf4>
40102269:	0000c0        	callx0	a0
4010226c:	000c86        	j	401022a2 <SystemCall$constprop$3+0x5a>
4010226f:	930c00        	movnez	a0, a12, a0
    return;
  }

  if (m->state.registers.byte[Z80_C] == 9) {
40102272:	2c9237        	bne	a2, a3, 401022a2 <SystemCall$constprop$3+0x5a>
    int i;
    for (i = m->state.registers.word[Z80_DE]; m->memory[i] != '$'; i++) {
40102275:	031de2        	l16ui	a14, a13, 6
40102278:	0c0c      	movi.n	a12, 0
4010227a:	4dea      	add.n	a4, a13, a14
4010227c:	4f2c      	movi.n	a15, 36
4010227e:	000506        	j	40102296 <SystemCall$constprop$3+0x4e>
      printf("%c", m->memory[i & 0xffff]);
40102281:	f43030        	extui	a3, a3, 0, 16
40102284:	3d3a      	add.n	a3, a13, a3
40102286:	f40332        	l8ui	a3, a3, 244
40102289:	f79921        	l32r	a2, 401000f0 <_stext+0xf0>
4010228c:	0149      	s32i.n	a4, a1, 0
4010228e:	f79901        	l32r	a0, 401000f4 <_stext+0xf4>
40102291:	0000c0        	callx0	a0
40102294:	0148      	l32i.n	a4, a1, 0
40102296:	3cea      	add.n	a3, a12, a14
40102298:	cc1b      	addi.n	a12, a12, 1
4010229a:	24ca      	add.n	a2, a4, a12
    return;
  }

  if (m->state.registers.byte[Z80_C] == 9) {
    int i;
    for (i = m->state.registers.word[Z80_DE]; m->memory[i] != '$'; i++) {
4010229c:	f30222        	l8ui	a2, a2, 243
4010229f:	de92f7        	bne	a2, a15, 40102281 <SystemCall$constprop$3+0x39>
      printf("%c", m->memory[i & 0xffff]);
    }
  }
}
401022a2:	b108      	l32i.n	a0, a1, 44
401022a4:	a1c8      	l32i.n	a12, a1, 40
401022a6:	91d8      	l32i.n	a13, a1, 36
401022a8:	81e8      	l32i.n	a14, a1, 32
401022aa:	71f8      	l32i.n	a15, a1, 28
401022ac:	30c112        	addi	a1, a1, 48
401022af:	f00d      	ret.n
401022b1:	000000        	ill

401022b4 <delay4clk>:
.global delay4clk
.align 4
delay4clk:
	_addi.n a2, a2, -1
401022b4:	220b      	addi.n	a2, a2, -1
	bnez a2, delay4clk
401022b6:	ffa256        	bnez	a2, 401022b4 <delay4clk>
	_ret.n
401022b9:	f00d      	ret.n
	...

401022bc <pico_i2c_writereg_asm>:
//This is similar to the i2c_writereg found in the ESP8266's ROM, however, we frontload a lot of the mathematics into the compiler.

.global pico_i2c_writereg_asm
.align 4
pico_i2c_writereg_asm:
	_s32i.n	a3, a2, 0
401022bc:	0239      	s32i.n	a3, a2, 0
	_memw
401022be:	0020c0        	memw
	_l32i.n	a3, a2, 0
401022c1:	0238      	l32i.n	a3, a2, 0
	bbci	a3, 25, .term_pico_writereg
401022c3:	077397        	bbci	a3, 25, 401022ce <.term_pico_writereg>

401022c6 <.reloop_pico_writereg>:
.reloop_pico_writereg:
	_memw
401022c6:	0020c0        	memw
	_l32i.n	a3, a2, 0
401022c9:	0238      	l32i.n	a3, a2, 0
	bbsi	a3, 25, .reloop_pico_writereg
401022cb:	f7f397        	bbsi	a3, 25, 401022c6 <.reloop_pico_writereg>

401022ce <.term_pico_writereg>:
.term_pico_writereg:
	_ret.n
401022ce:	f00d      	ret.n
